{
  "reportUid": "jaZUtXczGjS",
  "labels": [
    {
      "name": "QA (Quality Assurance)",
      "color": "1D76DB"
    }
  ],
  "comment": null,
  "footnote": "## Rubric\nSee [this](https://illilli000.github.io/races/2023-07-lens/scorer.html) link for how to use this rubric:\n```json\n{\"salt\":\"0f9759\",\"hashes\":[\"3cfba44e68\",\"6dfa4c5fea\",\"bbb1aa4e37\",\"b222fb70d6\",\"bb1ef689ae\",\"9677b6cc78\",\"93ae1ed970\",\"06fa661ffc\",\"c481104a56\",\"699613e401\",\"dd9ca870aa\",\"d5c7f7007b\",\"d859ad9b60\",\"7b39b56348\",\"29bbcaca7c\",\"3852d4313a\",\"381e633b2d\",\"399ed87a0d\",\"9ec2e023ef\",\"2436f21a38\",\"9480d467df\",\"2aa35c941c\",\"fe086018ef\",\"78cf569564\",\"19156dda31\",\"0372303c27\",\"9791e4926f\",\"f89c44d3a7\",\"953a12e7d6\",\"97c3cbedb8\",\"6103dcea84\",\"5eb53351c7\",\"d413d41daf\",\"0e4f01afc8\",\"8095eefbc3\",\"c19e27bd26\",\"32ed206200\",\"897981a6df\",\"7a48f18bca\",\"7cf5f99e8d\",\"f7f3dc19fd\",\"abe08f039e\",\"20a19d1bab\",\"45b9d363f3\",\"b7ac3a578b\",\"f333260d1c\",\"6332cb0917\",\"ff96f04ef6\",\"70a002c9e9\",\"fcb00f9183\",\"777ce51f7d\",\"9bc942514a\",\"27cdefc7e6\",\"5a9ac8024c\",\"6ea3a8908a\",\"1599f05698\",\"b754dbe034\",\"a3bc06d692\",\"0f7157876c\",\"463c1ce009\",\"55f1bf9d16\",\"fa81994e75\",\"de2cdf66da\",\"b754dbe034\",\"a3bc06d692\",\"0f7157876c\",\"463c1ce009\",\"55f1bf9d16\",\"fa81994e75\",\"de2cdf66da\",\"8b339754ed\",\"231ba1a507\",\"ea201dc8bf\",\"0309f83565\",\"cc871891c9\",\"ee9b1705b1\",\"0fc967953f\",\"189e7f8fe7\",\"326c7e0d10\",\"cbf17d67bd\",\"6561b805c9\",\"b00be25fba\",\"22d5a8a647\",\"6ba8b672bf\",\"e2b8ca60c8\",\"88cfc7412a\",\"f2fd0c3e53\",\"c6a1938117\",\"52228fe6ee\",\"85b2eb9c6e\",\"c4367092ea\",\"638d685485\",\"344ffbe544\",\"5470d28008\",\"fcaa29a0f6\",\"59288b4299\",\"602433740a\",\"42dac1acb0\",\"e2b8ca60c8\",\"88cfc7412a\",\"f2fd0c3e53\",\"c6a1938117\",\"52228fe6ee\",\"85b2eb9c6e\",\"c4367092ea\",\"e2b8ca60c8\",\"88cfc7412a\",\"f2fd0c3e53\",\"c6a1938117\",\"52228fe6ee\",\"85b2eb9c6e\",\"c4367092ea\",\"5bc4edc785\",\"798e39ea93\",\"f713f547ca\",\"c9ad8accfc\",\"306af087a8\",\"5c60232136\",\"5b43f978db\",\"241f33e94f\",\"2a1f98404d\",\"4297d5b3a2\",\"ffeb87a711\",\"69acc0897c\",\"bb60d9a5ef\",\"62c5dc7b51\",\"c8c92f2cbb\",\"6e57896bfd\",\"1d71148f4d\",\"46d7199ad3\",\"1b77aa976b\",\"963f461a37\",\"830792acc3\",\"91d986f86b\",\"c0592b906d\",\"e0d6e2ba7e\",\"2370a349d7\",\"d36aa92877\",\"dc982b2462\",\"1b58734d56\",\"c8c92f2cbb\",\"6e57896bfd\",\"1d71148f4d\",\"46d7199ad3\",\"1b77aa976b\",\"963f461a37\",\"830792acc3\",\"883db32442\",\"4a7a6b8925\",\"deb7df9b93\",\"6b51c4c1d8\",\"c5ebc67bf4\",\"da84ee6560\",\"4b79a06266\",\"6519faa4ea\",\"fb44980320\",\"59b8b9a3fc\",\"9a453133e4\",\"0428bb0080\",\"753c1c9be0\",\"ef5eadb465\",\"1ac74fa541\",\"8f8f2ba23e\",\"3209e3369d\",\"fa8ba72597\",\"9d1fc97600\",\"720edb48ac\",\"54a5be01a7\",\"a5dc77ac23\",\"0bbd9cf938\",\"f7e15d889f\",\"4a4218ad6f\",\"d7c4f842a4\",\"4500497420\",\"02d025fb8d\",\"7cf6494f6c\",\"0d7aadfa7a\",\"7c6dfd9479\",\"b7a978fe50\",\"cb2d9e36d1\",\"1e9158d80a\",\"30eb6e6064\",\"a6486938b1\",\"1cab5f2f36\",\"e1d48e483e\",\"e776596ba9\",\"e22bfc4f74\",\"7d70889ff8\",\"11d28b692e\",\"00310d3bb9\",\"d30ee86ff3\",\"c3a22b54c8\",\"d72db54851\",\"0a33e3649a\",\"daac4fe8d3\",\"212bdbe60a\",\"c728755316\",\"12816f4fe9\",\"123df4b5ed\",\"9e62f97de5\",\"2972763d80\",\"4e73e4a123\",\"69edf29e1a\",\"883db32442\",\"4a7a6b8925\",\"deb7df9b93\",\"6b51c4c1d8\",\"c5ebc67bf4\",\"da84ee6560\",\"4b79a06266\",\"a50b0ba028\",\"e893af7fd8\",\"c34aaa4e87\",\"8077a17c4a\",\"c3d6d6bacc\",\"ba9a9a56d1\",\"73d5d822b3\",\"24588932eb\",\"be46fc8734\",\"87781b9730\",\"217d712bd0\",\"c8712d219a\",\"60e3cb3f48\",\"4aebba9a2d\",\"a6a4775baf\",\"6b4f3ac972\",\"c6092d3dcf\",\"c3ee1d030f\",\"8d06366a0a\",\"945df5bccf\",\"a0eaa20c53\",\"8bb334a08e\",\"62703b773f\",\"b8745dfeab\",\"94bfbae2a7\",\"7706d22285\",\"8bf3124f7e\",\"cb67d40204\",\"eb796411a0\",\"d420df3eb9\",\"a26fe42bb2\",\"ccdebec142\",\"4545a82e85\",\"49b1698e0c\",\"2bd78a2b7f\",\"2f58d964b5\",\"b90f68f765\",\"de8ac6d0a3\",\"079bca31d1\",\"83dc17814e\",\"ad3c99f195\",\"4267e75423\",\"15ca0de851\",\"51ed5166e3\",\"7fba4f9572\",\"42ae58c134\",\"f266e70282\",\"81b55cac80\",\"0767b90168\",\"24588932eb\",\"be46fc8734\",\"87781b9730\",\"217d712bd0\",\"c8712d219a\",\"60e3cb3f48\",\"4aebba9a2d\",\"db70484f69\",\"edd00c4886\",\"e0195d9fd1\",\"babcfd71de\",\"f5c10eb360\",\"ab2374ee7a\",\"a5b768ac28\",\"09adc44184\",\"665bb5b1dd\",\"320372cf4f\",\"21b9e0787c\",\"387bb2281e\",\"2595d6585a\",\"760e84ea62\",\"4027885a88\",\"c359e4ae45\",\"7e77fd0917\",\"340dbe34aa\",\"ce7846420c\",\"006264c16d\",\"75ec3cf365\",\"ae32700401\",\"d20334f9d6\",\"ca66d0397a\",\"b8fa1fbd27\",\"5a74abbaa9\",\"ca95ebecf8\",\"7bd0950a32\",\"e0a9d87d94\",\"a78e835505\",\"83e81bc37d\",\"d77c01f387\",\"ea1af33102\",\"81f8170df9\",\"e6a5501675\",\"e8ab809f62\",\"c0935fe608\",\"b91db05c31\",\"37b4d639a4\",\"386d8760e8\",\"efd128f9fd\",\"3b01ae9b77\",\"31233bfd72\",\"7bedc8e37a\",\"4289630e1b\",\"650221e324\",\"d1017259bb\",\"fc640e6ee9\",\"774c599d79\",\"e4bf305339\",\"2240c9d2a5\",\"e1bab04eed\",\"82bf545be8\",\"d6add9db2e\",\"ad93df89a4\",\"cb79adf8ab\",\"5ed1e04d03\",\"5f0b935668\",\"cfd7e69b64\",\"f4bd6b435f\",\"33ce70813b\",\"5ec7ab590f\",\"aa508217d0\",\"83372a7f30\",\"d38cdd41aa\",\"875a7a06cd\",\"e8fddd5540\",\"efce881866\",\"b50033730a\",\"f7638e0502\",\"d7b3f39ee4\",\"6171bacd2d\",\"ecb0bf4491\",\"7ea0b47c76\",\"53a31125b4\",\"2cbb943590\",\"93f53ff20a\",\"35ab521305\",\"aba7e8304a\",\"64f08899d1\",\"2818ad3264\",\"83b336140c\",\"6b12a9d9a5\",\"bfe3196c19\",\"0858ac9950\",\"4136911f7b\",\"80962ae380\",\"ebc88696f8\",\"18602574a6\",\"3de0b90d04\",\"1441186b0c\",\"4027885a88\",\"c359e4ae45\",\"7e77fd0917\",\"340dbe34aa\",\"ce7846420c\",\"006264c16d\",\"75ec3cf365\",\"4027885a88\",\"c359e4ae45\",\"7e77fd0917\",\"340dbe34aa\",\"ce7846420c\",\"006264c16d\",\"75ec3cf365\",\"9f32eddcfb\",\"fe2e22e65b\",\"39f6d2df28\",\"7734f64a56\",\"739f4d805b\",\"f9dc42f80e\",\"804c82fd15\",\"5e9a24a71a\",\"ab05574c49\",\"91b0c2802c\",\"e2d63c7095\",\"7134549108\",\"0ac16810fd\",\"dcca4bff5c\",\"e55eaac559\",\"0f6d958f91\",\"95a12670e1\",\"1c9874a941\",\"3b604c997f\",\"c2c6d147a2\",\"ad059c53a5\",\"5fbbd453fe\",\"0db18bd8bf\",\"06721549e5\",\"fc0fa13e81\",\"1535e11a28\",\"02f77c77b6\",\"75d7700012\",\"ac255bcf3f\",\"8b7add15ef\",\"6a9546d02b\",\"c65aca0d8b\",\"fd023032e1\",\"ffaae932a0\",\"3d5e1c4e13\",\"ac255bcf3f\",\"8b7add15ef\",\"6a9546d02b\",\"c65aca0d8b\",\"fd023032e1\",\"ffaae932a0\",\"3d5e1c4e13\",\"6ab12e68a8\",\"9f9a2dcf64\",\"23eb36c82a\",\"a5b9b89be4\",\"214c8780bb\",\"29356f5a68\",\"b0148c1b7a\",\"0e6d8b3189\",\"974711aecf\",\"ed3685c9cf\",\"6ff5dda235\",\"a2ffddf95e\",\"951195fe8a\",\"5933c3b1e0\",\"d1c1a255f6\",\"049904fed2\",\"2b543b729f\",\"a92b29d316\",\"5d04364b42\",\"4e6546e559\",\"04f3ff7cb4\",\"2a61836c62\",\"67115bacc4\",\"4b4d5d8414\",\"b8128b3070\",\"2226b8429b\",\"6589ee82fb\",\"26dd8e690d\",\"0e8daa379b\",\"57060cdf35\",\"7dc0469c02\",\"0a2c0c9a93\",\"b7f23d02cc\",\"5062235667\",\"f4b6c9ba42\",\"1a3e7963f6\",\"f7886b8512\",\"13e76fc0ba\",\"4150bd1517\",\"0a164cffc9\",\"8776b61971\",\"c8a46aa3fe\",\"28b2132e01\",\"391fec3779\",\"a8b6591d73\",\"726a99e082\",\"01cab95993\",\"dfeef7927f\",\"4fd72a7015\",\"0270696bc4\",\"90a9aeb5dc\",\"dda9e8158d\",\"bf50cd8aab\",\"f63bcd697a\",\"c9d1c76aa8\",\"587750909c\",\"d1c1a255f6\",\"049904fed2\",\"2b543b729f\",\"a92b29d316\",\"5d04364b42\",\"4e6546e559\",\"04f3ff7cb4\",\"0e6d8b3189\",\"974711aecf\",\"ed3685c9cf\",\"6ff5dda235\",\"a2ffddf95e\",\"951195fe8a\",\"5933c3b1e0\",\"f9404604d2\",\"6c6b3e2122\",\"5a3de3b6b8\",\"4196b07138\",\"bf649bc792\",\"6bdde9d3d7\",\"9de51019cf\",\"f96f3925bc\",\"25c64bad00\",\"fa0ee45ac4\",\"1fc980b425\",\"3bd9c3c8f5\",\"a4de501bc3\",\"6a526ecff6\",\"3a8f5dda40\",\"a5ae5a50fa\",\"5d55cd74d2\",\"77f02cbe51\",\"0dca2a456f\",\"c4709163f4\",\"198cf739f2\",\"0e8daa379b\",\"57060cdf35\",\"7dc0469c02\",\"0a2c0c9a93\",\"b7f23d02cc\",\"5062235667\",\"f4b6c9ba42\",\"0e8daa379b\",\"57060cdf35\",\"7dc0469c02\",\"0a2c0c9a93\",\"b7f23d02cc\",\"5062235667\",\"f4b6c9ba42\",\"084d0bc981\",\"38df50db5d\",\"15e11b08af\",\"e98b472db9\",\"72f05952c8\",\"b115210283\",\"61069447ef\",\"28b4e87ddb\",\"98777fc8bf\",\"6af0ddb202\",\"b1a4a59f6f\",\"326e35708f\",\"67108d1a53\",\"fb28cc0e0d\",\"4e954316a3\",\"ac44b71c50\",\"50fd526b0e\",\"cfa908c003\",\"c4769e80e6\",\"95edd51cc4\",\"44f5d60266\",\"da4a919fb9\",\"b0ab52e1b6\",\"fb876be275\",\"43e53ee082\",\"fccab587a3\",\"905ada751a\",\"42e4f9d6a6\",\"0557416465\",\"3e5cbab5f1\",\"976c5eea95\",\"f4d68fa311\",\"523cbda8f8\",\"9a1463e55b\",\"bd4d47eeaa\",\"7b01bd7a53\",\"2f7a3232e2\",\"c252134d88\",\"850e620018\",\"f360d4efc8\",\"cda7885c68\",\"3f64975d16\",\"43466d4fe3\",\"667e25b12c\",\"14dabcfb32\",\"6272bab047\",\"602ece1910\",\"252982f79d\",\"20496f4795\",\"43466d4fe3\",\"667e25b12c\",\"14dabcfb32\",\"6272bab047\",\"602ece1910\",\"252982f79d\",\"20496f4795\",\"11c788f0f8\",\"d82e973ace\",\"c51d8cb4f6\",\"5bf718c0e5\",\"4d4d691023\",\"9f63620831\",\"2a4d1611b6\",\"b4bf01ae03\",\"fe27b1bd2a\",\"5c9d316f6b\",\"4c08ece9f5\",\"b35fce7ab8\",\"78becfa1ea\",\"c4e31a9183\",\"2ec8b9d6e0\",\"1098a211c3\",\"d20500d57e\",\"fb9c3cb60b\",\"05fe14491f\",\"e6cb17afd3\",\"4a006b2ca6\",\"51d1bd0ca3\",\"ade722d2f3\",\"1d432d0f60\",\"a01db7d11b\",\"07184332a9\",\"349d1333e1\",\"490b052765\",\"a38c7d2455\",\"0d89102bb9\",\"149b28236e\",\"1325f9a41f\",\"e039686394\",\"9be0a30129\",\"0fd2ff2547\",\"9b51567235\",\"ea45384ceb\",\"6a6ef803d1\",\"48589f0c31\",\"c5558c568d\",\"21dab1a0a9\",\"542f8ab94f\",\"60a336b222\",\"c61f448274\",\"eb0807c96d\",\"32091020dc\",\"c0d84937ee\",\"f25ea15008\",\"cee3229c81\",\"11c788f0f8\",\"d82e973ace\",\"c51d8cb4f6\",\"5bf718c0e5\",\"4d4d691023\",\"9f63620831\",\"2a4d1611b6\",\"11c788f0f8\",\"d82e973ace\",\"c51d8cb4f6\",\"5bf718c0e5\",\"4d4d691023\",\"9f63620831\",\"2a4d1611b6\",\"3a6abfad25\",\"f3d171269a\",\"627a3011a1\",\"97f74e6714\",\"c57187e45c\",\"624d6b8b1f\",\"b7352eca89\",\"e644c1611f\",\"bd57e7743b\",\"ca536c2526\",\"fb55b4d6bf\",\"8c94517a18\",\"2944b29482\",\"c4f7967bba\",\"11a22df536\",\"25ffe467c1\",\"0ed38a7afb\",\"a721b52bff\",\"130c8e7996\",\"54ae32fc0e\",\"9b2598737f\",\"2e3a4b989c\",\"da833a62d7\",\"9147180a3f\",\"b8678ce4fa\",\"326af6dc4f\",\"7382ffeec6\",\"533b2eb6aa\",\"85267d394d\",\"264bc0f0a4\",\"07e618e4a6\",\"99833e8f3f\",\"95c927a416\",\"2c3ba7c5c2\",\"2097ceb003\",\"85267d394d\",\"264bc0f0a4\",\"07e618e4a6\",\"99833e8f3f\",\"95c927a416\",\"2c3ba7c5c2\",\"2097ceb003\",\"52e784bb68\",\"87544cfa27\",\"ad9076afc6\",\"2efb80900b\",\"6eb91d411e\",\"c45bcbd845\",\"25e8d2bb52\",\"58636a87f0\",\"6fe2d8a07e\",\"10b6c95e84\",\"46a91ed435\",\"7b9f790eda\",\"7d73140dde\",\"ff409a0e75\",\"bb5b8e80be\",\"98cda2dfa3\",\"a8a29a23ff\",\"2bb6875765\",\"8578be727f\",\"8168b3819b\",\"166af4cf3c\",\"ad284d73b4\",\"0e6495b132\",\"6c5b537c6c\",\"692fc396e4\",\"2d2c97afdc\",\"efebad47d0\",\"5736d7c8ec\",\"6c511e6bb0\",\"809f7af9e8\",\"1659de131c\",\"3e909c1125\",\"9ef089aaf5\",\"3633530723\",\"8751b1bffe\",\"b65910590f\",\"d0c2dfa2df\",\"ff3f270e00\",\"50476ad3dc\",\"55b888bba4\",\"e92a375963\",\"aaf163a0ad\",\"bc260f3835\",\"5c677ee456\",\"f78224cdb3\",\"79ed7115c0\",\"cb8464ee26\",\"e037c4f105\",\"b4a3b0c867\",\"b7033cda1a\",\"64ff07df29\",\"7b78dc403a\",\"fe9976239d\",\"38577323e3\",\"197f560677\",\"fc6419fd24\",\"cd8e4af981\",\"4081c25d2d\",\"bcc2959ff0\",\"d39be75397\",\"8d9eae1e3a\",\"204e662c65\",\"1c0fe793af\",\"5f272a05d1\",\"ca9e2589c0\",\"c132a71759\",\"a6132f1ad1\",\"f0dd06ebd1\",\"7be5de20da\",\"078b55792f\",\"91317bc627\",\"930e6655e9\",\"c9c20a2496\",\"0b77db2380\",\"ee93e9101e\",\"94c7340a4e\",\"754f61f417\",\"b65910590f\",\"d0c2dfa2df\",\"ff3f270e00\",\"50476ad3dc\",\"55b888bba4\",\"e92a375963\",\"aaf163a0ad\",\"b65910590f\",\"d0c2dfa2df\",\"ff3f270e00\",\"50476ad3dc\",\"55b888bba4\",\"e92a375963\",\"aaf163a0ad\",\"d0d6beb171\",\"9065fde98e\",\"289d42dc72\",\"508809af21\",\"2c1e82a088\",\"192f7298ed\",\"1a7f62a90a\",\"093abe2a4c\",\"83f53664bb\",\"8cf45d86cd\",\"2f8644529e\",\"c91678e3bc\",\"3db0963e0a\",\"b6a0768f57\",\"7d9a6fe4d6\",\"2e6ec8cd35\",\"9137f63394\",\"c56bd3eb01\",\"9e06c08b6c\",\"053381014d\",\"8799ff43d8\",\"c8dc37d1de\",\"a78ed826dc\",\"d07d76c2f3\",\"65cca83571\",\"559df1895f\",\"93f52b5bfc\",\"602084f62d\",\"555cc10dc5\",\"37ce507a39\",\"90df9df706\",\"92c9b39565\",\"89a265d31b\",\"f311471172\",\"c336049799\",\"a99743c356\",\"34bd3949a2\",\"af912838d4\",\"7a0bb2a681\",\"517b95bf8e\",\"7f711c3a9e\",\"4f618d2879\",\"c8dc37d1de\",\"a78ed826dc\",\"d07d76c2f3\",\"65cca83571\",\"559df1895f\",\"93f52b5bfc\",\"602084f62d\",\"c8dc37d1de\",\"a78ed826dc\",\"d07d76c2f3\",\"65cca83571\",\"559df1895f\",\"93f52b5bfc\",\"602084f62d\",\"dd8ca6941e\",\"d45b7862b2\",\"355bd7a121\",\"732d7f0ad0\",\"ad5224f48c\",\"c2b2886f36\",\"c418a3cd38\",\"a59e1ec554\",\"c531d0156b\",\"5958240106\",\"0a18ec6346\",\"0cb2f84502\",\"e8b17c840a\",\"863a79d7ec\",\"07a6048a2f\",\"b9c7406637\",\"7591b9dd9c\",\"2da23e8a52\",\"6ef3c5dd8e\",\"123888865e\",\"8337c9f1d3\",\"01bfafa0df\",\"da7bb18040\",\"a39b28c76b\",\"a49691534c\",\"6b34aaef3f\",\"d79452f599\",\"50e2519353\",\"07a6048a2f\",\"b9c7406637\",\"7591b9dd9c\",\"2da23e8a52\",\"6ef3c5dd8e\",\"123888865e\",\"8337c9f1d3\",\"a59e1ec554\",\"c531d0156b\",\"5958240106\",\"0a18ec6346\",\"0cb2f84502\",\"e8b17c840a\",\"863a79d7ec\",\"0d2d3a7a0f\",\"e548dad03e\",\"5eada0ad9a\",\"93a5518cf5\",\"450bbe71f0\",\"31863c6cda\",\"614527fc14\",\"634495f109\",\"f7c65331d2\",\"e66a9993cc\",\"197b520d3d\",\"668ba15418\",\"bef6633c39\",\"c58b02cbca\",\"a59e1ec554\",\"c531d0156b\",\"5958240106\",\"0a18ec6346\",\"0cb2f84502\",\"e8b17c840a\",\"863a79d7ec\",\"a59e1ec554\",\"c531d0156b\",\"5958240106\",\"0a18ec6346\",\"0cb2f84502\",\"e8b17c840a\",\"863a79d7ec\",\"0c026a9c7d\",\"133d3d05dc\",\"c1b3e2ea60\",\"43959358af\",\"11db9cbab3\",\"8408695a5c\",\"bf2644ae95\",\"ffb929f896\",\"7816560abe\",\"ccb799ab12\",\"eea6d4415f\",\"e217951bc9\",\"00b8e79af5\",\"9f5a9e4b65\",\"0b72fad4f6\",\"fda04d6728\",\"ecd7d33074\",\"4f5d5bfca1\",\"aedb1bbce0\",\"d9ba024ea9\",\"1eafcc819e\",\"43daecfe76\",\"5a80862c2d\",\"646c62f883\",\"79b7e614d4\",\"f9167fc5d8\",\"c077196e89\",\"8ac1772519\",\"37ea309d4d\",\"9bc481809e\",\"4d0a8786b1\",\"6f34c963a6\",\"9b5e027e55\",\"1d4cd78a7e\",\"d89f1cffca\",\"37ea309d4d\",\"9bc481809e\",\"4d0a8786b1\",\"6f34c963a6\",\"9b5e027e55\",\"1d4cd78a7e\",\"d89f1cffca\",\"338c46627f\",\"1312e09a11\",\"94103e93d9\",\"8b7c4bdeaf\",\"078755b448\",\"6a7ab6feaf\",\"018e130349\",\"27e3cc8b69\",\"2d240e6f8f\",\"4accb12a73\",\"9bebd6aaee\",\"766ea17976\",\"75f90b78e5\",\"1b7486e6fc\",\"22104b9243\",\"ac5b121d7c\",\"f5a09fe353\",\"1a5b6f478a\",\"0674ad9c0e\",\"5a0c33a464\",\"ec61118d3b\",\"0902f71b96\",\"0bb87d711f\",\"cc847d8f51\",\"62e68731df\",\"8c0779ee4e\",\"cf62bb6a60\",\"79ac003f29\",\"d5adc2c72e\",\"ba96370933\",\"b26dffef5a\",\"8aa1abd21b\",\"1f3ca661fa\",\"42dcbbfdd3\",\"74a7b30047\",\"d5adc2c72e\",\"ba96370933\",\"b26dffef5a\",\"8aa1abd21b\",\"1f3ca661fa\",\"42dcbbfdd3\",\"74a7b30047\",\"f8c1b1327d\",\"cdda8cf331\",\"326263c67e\",\"fec93d99a2\",\"7f8ab5cbf7\",\"f266dd2d3a\",\"29fc7c8bdb\",\"4b71a5d176\",\"8c1b08c1ef\",\"398c0d5401\",\"cc84fe5254\",\"b14056cdd7\",\"5624e90276\",\"060622e977\",\"876ae49414\",\"b0f176995d\",\"0ed3859c63\",\"dcaa6a7e86\",\"e990711c38\",\"98cf605341\",\"3045047f4c\",\"e08dbdd162\",\"a97be1ed9c\",\"25a6f5bb23\",\"2f50f38908\",\"8a722ffabc\",\"bb4baaec05\",\"ac04f0bd46\",\"8bd7a9421f\",\"2a69fd17f3\",\"b824337df8\",\"6749ce15b5\",\"a83665fd32\",\"a8ac71705e\",\"38a42735d2\",\"acc7fba58d\",\"b13671a685\",\"ba78fce3bf\",\"e866e57616\",\"05c135c457\",\"5fc8a399d8\",\"9db10a4fd6\",\"002484511f\",\"0e27826a33\",\"06c16890b3\",\"5046bd10f5\",\"12d7bfeacc\",\"11b1f5cbb5\",\"89019eda67\",\"f8c1b1327d\",\"cdda8cf331\",\"326263c67e\",\"fec93d99a2\",\"7f8ab5cbf7\",\"f266dd2d3a\",\"29fc7c8bdb\",\"f8c1b1327d\",\"cdda8cf331\",\"326263c67e\",\"fec93d99a2\",\"7f8ab5cbf7\",\"f266dd2d3a\",\"29fc7c8bdb\",\"7bc36fd8b8\",\"d336351a72\",\"15ace1b6d7\",\"3af9d001f5\",\"1632ec29b2\",\"9f908179d7\",\"88a8f1230d\",\"49bb956503\",\"a8875ce925\",\"5e6b96e9ec\",\"c2cb6f4f96\",\"ddc87ee3fe\",\"a9e6fa1419\",\"695c88d45e\",\"662dbd51b4\",\"16339c2c88\",\"5fcac2f0fe\",\"e89e2bf4dc\",\"5f57e87e03\",\"0e0b12a4b9\",\"3af3fe22e2\",\"1039d57d9c\",\"81bac00e1d\",\"f7278827ad\",\"18ea1e9573\",\"539b7e326a\",\"304a25529f\",\"b80b19936f\",\"de0ca71769\",\"774b516004\",\"e7a3b27aeb\",\"86bdb8b522\",\"04745331ce\",\"860ae3b1d2\",\"c93c928403\",\"7bd0621764\",\"653a564cc0\",\"dad3bc73b0\",\"cc2ddf9329\",\"7a9e127f27\",\"d6ca965e6d\",\"849ee33627\",\"70d517d365\",\"aee3427595\",\"326a9ba136\",\"8b9ea1b6a3\",\"681fcb570c\",\"60e68ecf63\",\"ed7f891236\",\"662dbd51b4\",\"16339c2c88\",\"5fcac2f0fe\",\"e89e2bf4dc\",\"5f57e87e03\",\"0e0b12a4b9\",\"3af3fe22e2\",\"5a5519a36e\",\"254661edf2\",\"efe92f62e2\",\"bed3b6ab18\",\"13ddfa3831\",\"21943241c6\",\"9721415a73\",\"f9345df8e9\",\"11a028c6d9\",\"36fcdd91d5\",\"8841142076\",\"39970cdb46\",\"960f22cf09\",\"e86f457b28\",\"f9345df8e9\",\"11a028c6d9\",\"36fcdd91d5\",\"8841142076\",\"39970cdb46\",\"960f22cf09\",\"e86f457b28\",\"93f65250c3\",\"c29bf84c4f\",\"f62542fe80\",\"c9f4a612a6\",\"1aed759c0b\",\"6441dd0e9a\",\"d7572150a9\",\"54416be04c\",\"714ae1d57e\",\"0274e357e8\",\"b67029c32b\",\"c18aa7fe72\",\"9e62eeb647\",\"83263a47b9\",\"9ff38f1d4a\",\"2dcb8a2820\",\"a245283ca9\",\"f6c60bf480\",\"9a3621e506\",\"27b03e7ac4\",\"6aadbc0e4c\",\"4fabf49ce5\",\"981c765f6d\",\"3dfb5122ff\",\"8471c35b6f\",\"f43b6abbee\",\"a5db3a385b\",\"57fb3a761f\",\"2729aa520d\",\"0e550827eb\",\"76a6064f51\",\"e9c3fb4a34\",\"08dd2fcc81\",\"a66bd29d2f\",\"2bbe20b856\",\"bc3176beac\",\"5865189440\",\"50e03869d5\",\"5f9509cca8\",\"b08b0da6f5\",\"85c036074e\",\"ca46ba02f4\",\"a5653e564e\",\"081b7c385e\",\"3a3d5642aa\",\"ab70688916\",\"4634441369\",\"0143a3fbab\",\"641479aab4\",\"bbb9d01ff3\",\"0bbb24b25f\",\"35ef723c07\",\"ed47c59a7f\",\"25ceb10dae\",\"c2dc8d73f1\",\"33cbf301c3\",\"f80ef64ef9\",\"74aa47d98c\",\"b1c5b52933\",\"0d61b433bf\",\"e507439804\",\"9d4cc562c0\",\"fc263951e4\",\"f80ef64ef9\",\"74aa47d98c\",\"b1c5b52933\",\"0d61b433bf\",\"e507439804\",\"9d4cc562c0\",\"fc263951e4\",\"690437b8a8\",\"0b5327a4ce\",\"e6d9addb82\",\"ea915058f0\",\"a57973cb2b\",\"37039f99b2\",\"83cd9662d9\",\"a771a45b61\",\"d4bf0830cd\",\"8767fbd8cc\",\"9e559e68eb\",\"556b0b0c67\",\"3d6540b18e\",\"14fb4ec40b\",\"2f16b498ba\",\"6c086a15cd\",\"d4cf0fafb3\",\"7c784147c7\",\"c76bc26fb1\",\"13c3533069\",\"a7203a3712\",\"c553a1e365\",\"b7f4c4ed80\",\"d85701bdd7\",\"7e749960e8\",\"016f7eeaea\",\"6d76dd73af\",\"29546a76b7\",\"a05887e154\",\"6f96907405\",\"a5a1299c8a\",\"6196f8fc43\",\"afd5690cd9\",\"6cbf0c3bd7\",\"b7644d224f\",\"0ad60e5e5f\",\"6ed5436777\",\"394d67369e\",\"9d35c60bf2\",\"960db4b3aa\",\"ebdb7f2a5e\",\"79ac3ecd7f\",\"0ad60e5e5f\",\"6ed5436777\",\"394d67369e\",\"9d35c60bf2\",\"960db4b3aa\",\"ebdb7f2a5e\",\"79ac3ecd7f\",\"536ac27f62\",\"f65b082cf2\",\"95b7174619\",\"3d66423b6c\",\"40b1b3f410\",\"e902c9811f\",\"5032a15325\",\"50e9125a00\",\"b238788533\",\"2676001902\",\"56b628066e\",\"dea8e87299\",\"88215f621b\",\"ed8dc15221\",\"93ad00a6fe\",\"fda25d0d95\",\"222f11624c\",\"3df4b29333\",\"62f733670e\",\"86cfb4454b\",\"a561bee17f\",\"0cb4807856\",\"198f5511a7\",\"c247645817\",\"9fb1afdab9\",\"a3b5795e7a\",\"00a124d901\",\"d1072ab7ab\",\"6d93664d66\",\"129edf17d3\",\"844ef6915d\",\"9893eae859\",\"c78deb29fe\",\"ec593d10d6\",\"e0033784b4\",\"79bffaf4d1\",\"5134ac939c\",\"00c083b4e3\",\"fb1cb6be7a\",\"68e5cd00cb\",\"17e5e38b38\",\"791cbe6a0a\",\"3559e8350c\",\"3fe1b95dfd\",\"adf3e60c7f\",\"85fdb0fec1\",\"30f6a1a8f8\",\"869b9e19fc\",\"ebe4941729\",\"b0e133f1c1\",\"c3f9a909a2\",\"391f287517\",\"1b34b24b7c\",\"7b8e148e03\",\"21247e2f33\",\"0bf05a916e\",\"1656497daa\",\"df42505723\",\"816e29a552\",\"ee5a68f147\",\"926c80528f\",\"015bf4e3a1\",\"ab5447d408\",\"0916d7411a\",\"bb79683302\",\"154345f550\",\"d5e3213773\",\"135d7895ca\",\"a4e12be50e\",\"68ce93a249\",\"3f23b25274\",\"678830952f\",\"09a9916aae\",\"fa83250e9f\",\"d111480e8f\",\"b2b4d7fb1e\",\"4f8e21f095\",\"93ad00a6fe\",\"fda25d0d95\",\"222f11624c\",\"3df4b29333\",\"62f733670e\",\"86cfb4454b\",\"a561bee17f\",\"8899bfc7c1\",\"4ed9076886\",\"f3d824d717\",\"5fb6274b3a\",\"22b848e4ce\",\"021f612bc0\",\"5520b5a1ea\",\"32d96b2aa1\",\"5b36cd121e\",\"8562e757d7\",\"46a898a043\",\"d9a142eef9\",\"9168bb391e\",\"c19244cc78\",\"fc7812bc6a\",\"330d5a50b9\",\"66c64440c2\",\"8558a17029\",\"af1cfdae58\",\"6427891a8a\",\"04930bdd88\",\"1c1e345fe6\",\"c576150037\",\"77f15f88d8\",\"55706d4baf\",\"eac4d73ae3\",\"8b212aff2e\",\"f92eea2113\",\"32d96b2aa1\",\"5b36cd121e\",\"8562e757d7\",\"46a898a043\",\"d9a142eef9\",\"9168bb391e\",\"c19244cc78\",\"062546627d\",\"3090887c40\",\"607b0c97fe\",\"e887aff848\",\"aeab8f65c3\",\"a299a00ce9\",\"de0099c764\",\"8ab3d11a15\",\"f750866ef2\",\"3f070ae012\",\"f4bd2c41d8\",\"b41d80a727\",\"fd6e700372\",\"61acc5076d\",\"b049444d38\",\"881e0131b3\",\"ff790c07c3\",\"2b40e9c5ea\",\"c4981d1222\",\"56204caa41\",\"8109ed7b56\",\"e9e097016b\",\"60186cf9be\",\"53c8374cf2\",\"ccde8964d1\",\"76abed9105\",\"532e464739\",\"05599fec8a\",\"c46998d856\",\"5c8d412b37\",\"893c56f86f\",\"111a1b6087\",\"05ffcf4f04\",\"5a6417b556\",\"9fde4079b4\",\"b0496cea91\",\"6b66ed3ad9\",\"c3eaebf9ec\",\"e707ba8928\",\"ee68b9c118\",\"11dd341179\",\"7538bc1d99\",\"c46998d856\",\"5c8d412b37\",\"893c56f86f\",\"111a1b6087\",\"05ffcf4f04\",\"5a6417b556\",\"9fde4079b4\",\"9b989657c3\",\"d99fd87043\",\"4d967a718e\",\"6dd2de4cbc\",\"960dfaa309\",\"8604ba9ed8\",\"60524aba88\",\"b0df8aa770\",\"402dc78a0b\",\"a91391f306\",\"e9382f24d8\",\"b5706a5773\",\"4b95fbe197\",\"1b230ab81a\",\"0954e13650\",\"1fad50c104\",\"3dda36caac\",\"a97cc568d6\",\"3d793b1487\",\"ce3e4a80c9\",\"add81b0a84\",\"4fcd057fa6\",\"755689f4b7\",\"08f5311ebb\",\"c0bc8aeae1\",\"9335d9020f\",\"10568cb99f\",\"8f39deefe2\",\"903e5f2a1c\",\"d086d02ec0\",\"ebce476603\",\"618694f6bd\",\"ebda03488e\",\"7c4425c1d9\",\"3acd70d4b9\",\"ed44d418c1\",\"a2e986b03c\",\"a522b7293e\",\"dbf7e16c0f\",\"737905e386\",\"09418d9758\",\"d523b76d71\",\"e1471ef9ab\",\"3d9911fc81\",\"692eec22e2\",\"285a4c7813\",\"aa12c1a137\",\"e81f65efdd\",\"f5c48174a6\",\"5758a2fa97\",\"fbfbf644aa\",\"356eaefb20\",\"affece9114\",\"5a3522a3eb\",\"6dd229f6ae\",\"58c6d2b13b\",\"078bf4bc7a\",\"a43eb018b6\",\"a5a7868215\",\"3ced37c351\",\"6127c91be0\",\"01c8c8d762\",\"5611d5d192\",\"83de6b4417\",\"183782305f\",\"a10c3978a5\",\"97fad2d711\",\"d9ffa068da\",\"b08009d4cb\",\"1f066b8837\",\"c0f17b5226\",\"87c86f2c4b\",\"cb780c9523\",\"90fcc528ba\",\"d4b2a6542a\",\"4a6d868951\",\"53da3b5358\",\"33daee6137\",\"c8b94739fa\",\"11bcbeeb30\",\"dec6c6ecc6\",\"0832458704\",\"e58cd3aee3\",\"a52a7abf73\",\"e393a170cf\",\"fd3193d81b\",\"4f3f8aa195\",\"104163578a\",\"4ea8fac602\",\"18b13e606c\",\"02e351485f\",\"7cfd8e7dba\",\"5a833f39da\",\"254a283015\",\"20ebe59d54\",\"63656d9387\",\"c4a16a2b86\",\"f497ab03dc\",\"6b9e2b944c\",\"e58d8098d0\",\"e3ea4a9443\",\"30e1c0b82e\",\"cdb08c1a34\",\"ace0875514\",\"bd1ed6ce82\",\"f764aeb365\",\"147343e8c6\",\"cfc2eaab1a\",\"0a2c428857\",\"fdad37da71\",\"0d44fbb293\",\"e9a62eb7c0\",\"f764aeb365\",\"147343e8c6\",\"cfc2eaab1a\",\"0a2c428857\",\"fdad37da71\",\"0d44fbb293\",\"e9a62eb7c0\",\"8b2e23e9be\",\"59b073d725\",\"a0be64f462\",\"624e2ed621\",\"adfd94577a\",\"057e184d29\",\"4ca4c91239\",\"9044ca5daa\",\"258fec3b78\",\"ba6eb85a3c\",\"3883767e9d\",\"a6ccdc6d60\",\"159d90de4d\",\"39758278a0\",\"7d690281e2\",\"37afebf67a\",\"83cb46ea4d\",\"50636692a3\",\"2235442ae4\",\"496bd8dca9\",\"602dfee5bc\",\"ff94763f87\",\"1eea9d436f\",\"3bc1846869\",\"ea9a2b6210\",\"5580dbd85d\",\"da896a8747\",\"f046b3f18d\",\"e3e83f878f\",\"02a137f121\",\"da22e3d40d\",\"777ecef4f9\",\"abe6a34032\",\"afc922e243\",\"2498ea6091\",\"f347249d92\",\"0e43c5192f\",\"7c71c7957d\",\"149788e5c5\",\"bd482491dd\",\"53e1aa12bf\",\"958e3e4ec2\",\"f347249d92\",\"0e43c5192f\",\"7c71c7957d\",\"149788e5c5\",\"bd482491dd\",\"53e1aa12bf\",\"958e3e4ec2\",\"031f72415a\",\"f80463e0f4\",\"ebfccf4152\",\"535c76787a\",\"2a31d565f9\",\"7f3969d32f\",\"a28a2f53ed\",\"2368ac06cf\",\"b9d958715e\",\"08dfbda2a5\",\"7d175bfe4f\",\"a4cce9447c\",\"22bc202375\",\"dea1e8fa11\",\"f4f01b9bc4\",\"bab801688d\",\"c225c09453\",\"1b2324b71d\",\"294889f7aa\",\"ac388de7a2\",\"8a1c013bad\",\"7c8ac555a5\",\"5242cb1d63\",\"5c8d82a6f3\",\"6ef1b49091\",\"93a48221cb\",\"d1e4845416\",\"1ea681d8e0\",\"b512b71579\",\"b0eee779d7\",\"3f3ea2952a\",\"8139f5da0d\",\"c37713329d\",\"4c04700600\",\"2d80b2470d\",\"ddfdddbcdf\",\"dc9a9d4b99\",\"e15c744907\",\"b2a8c430b4\",\"6c27231324\",\"87446c6bc7\",\"a5760ce8c1\",\"ddfdddbcdf\",\"dc9a9d4b99\",\"e15c744907\",\"b2a8c430b4\",\"6c27231324\",\"87446c6bc7\",\"a5760ce8c1\",\"69f8525ddc\",\"be3a040244\",\"53a7027530\",\"92c62388cd\",\"d852390c52\",\"41be66c04d\",\"54b97416f6\",\"97481d6242\",\"a71a7dff9a\",\"3114cd3ece\",\"316ff81079\",\"1572c286df\",\"06589dbd9f\",\"1e44f5d17d\",\"1d177610b8\",\"9cabe2e275\",\"2aa926f794\",\"30768aff8e\",\"9a5bd8dbea\",\"edacd6d5d7\",\"b52933ab10\",\"1d177610b8\",\"9cabe2e275\",\"2aa926f794\",\"30768aff8e\",\"9a5bd8dbea\",\"edacd6d5d7\",\"b52933ab10\",\"fa7bb1edaa\",\"bd74998a02\",\"2c3e979e32\",\"ba2475aefa\",\"d782427c08\",\"03f589e8e6\",\"389deed614\",\"e3da257da6\",\"4ab4d2cb8e\",\"60db4880c4\",\"dde141699c\",\"d7b2c51d9c\",\"54bcee7f58\",\"afbf1f90a8\",\"edcdfef460\",\"dca907caa3\",\"a125821955\",\"af4807c8d5\",\"4d8fadcb59\",\"ef1275f209\",\"a091b9deb3\",\"ea84a85970\",\"3bc474f2dc\",\"6b03d2efd2\",\"e5b0ddb346\",\"11a44883b4\",\"8cb3a4d785\",\"217658032f\",\"ea84a85970\",\"3bc474f2dc\",\"6b03d2efd2\",\"e5b0ddb346\",\"11a44883b4\",\"8cb3a4d785\",\"217658032f\",\"0a5ba4834e\",\"0b4b886b48\",\"7d1406660c\",\"fe243ea1ad\",\"e7d9edeb07\",\"bcfa5f3b73\",\"c1f89fe078\",\"efe3ccd0c5\",\"69d91ad79c\",\"3794a63ce3\",\"add2988aed\",\"82e6ff89e9\",\"74b6d486bd\",\"0fbd81614f\",\"d32634976f\",\"78ca8c6dc5\",\"61e421767f\",\"c0ce792144\",\"7f0e42dfb0\",\"96aedcd47b\",\"7ddc3353b5\",\"d32634976f\",\"78ca8c6dc5\",\"61e421767f\",\"c0ce792144\",\"7f0e42dfb0\",\"96aedcd47b\",\"7ddc3353b5\",\"cd8bf8e9d2\",\"7b62f9ed37\",\"df1bae47d1\",\"a6b6d441fb\",\"ffa6e05bc2\",\"e7334ddffa\",\"2aa1be9c46\",\"a303bfb67a\",\"6fbab027ee\",\"65141a354b\",\"4a3876770f\",\"4ece477b31\",\"ccb4012442\",\"2c359b72e8\",\"f50d39ecb3\",\"091b9ecf47\",\"c5821bfe13\",\"fd1fcc7747\",\"c19c5c4995\",\"55c72c4ff5\",\"fd9ee0041e\",\"c219c9d1f5\",\"529d96520f\",\"7fc60d0ec6\",\"86ab06cd74\",\"01d87686e3\",\"fc23df3b90\",\"e809af2907\",\"c7283445a1\",\"339b5c5bfb\",\"c16bcafb07\",\"03a92f4f9a\",\"b2cc91eb38\",\"7bbc29aa81\",\"6736eda840\",\"c7283445a1\",\"339b5c5bfb\",\"c16bcafb07\",\"03a92f4f9a\",\"b2cc91eb38\",\"7bbc29aa81\",\"6736eda840\",\"c91352e57d\",\"852088b4c6\",\"a18039d9aa\",\"516f280246\",\"59a0085236\",\"e78fe1d01f\",\"ffde243c2d\",\"c91352e57d\",\"852088b4c6\",\"a18039d9aa\",\"516f280246\",\"59a0085236\",\"e78fe1d01f\",\"ffde243c2d\",\"b7c4eef000\",\"68b53d4dd5\",\"9fe0a5585c\",\"481efc3f63\",\"8bb3933ef8\",\"a4bbbe4ce2\",\"45ce894e99\",\"ae3f6ae954\",\"b3b57a2012\",\"a4a1dfdf0d\",\"81c0a32e14\",\"18a8c087c1\",\"ec9af8fd32\",\"41607ed326\",\"f64c6f2550\",\"2de3466013\",\"4ce896c02f\",\"aafaa802c8\",\"0664454679\",\"cde414682c\",\"b87e695102\",\"f64c6f2550\",\"2de3466013\",\"4ce896c02f\",\"aafaa802c8\",\"0664454679\",\"cde414682c\",\"b87e695102\",\"1eaf99eddc\",\"df3d9f5f0a\",\"9e4311b889\",\"58003b8f9b\",\"17a6beebc0\",\"4e226c2dbd\",\"cbeb3aff90\",\"d11b231204\",\"610a27f1e0\",\"245478b397\",\"6b137f6d34\",\"7395e24d51\",\"5464c2073f\",\"ea8c50c9aa\",\"d11b231204\",\"610a27f1e0\",\"245478b397\",\"6b137f6d34\",\"7395e24d51\",\"5464c2073f\",\"ea8c50c9aa\",\"91f4186195\",\"8374229c2f\",\"993b152869\",\"09355bbf89\",\"10b23f672c\",\"34f3922082\",\"ce68ed3f28\",\"5d0977cb03\",\"86b977b37d\",\"0623350ca6\",\"462cf20e7c\",\"af6383708a\",\"3ab06879b3\",\"6535ed1799\",\"5d0977cb03\",\"86b977b37d\",\"0623350ca6\",\"462cf20e7c\",\"af6383708a\",\"3ab06879b3\",\"6535ed1799\",\"6c159116c0\",\"6814214faf\",\"b6c429900f\",\"ee231c037c\",\"a5b9e21972\",\"3171a9c7c2\",\"bd9ae32560\",\"3cadb086c7\",\"eb02fa86e2\",\"d3c257b461\",\"fe28054944\",\"d020517ca0\",\"f4668cc92b\",\"3bf44d5ab6\",\"d0a0d7f9a8\",\"cddbea9572\",\"e5146be445\",\"388c324fc6\",\"b1519d2d47\",\"efdf98ca6c\",\"cb5cbae53a\",\"f9397f8632\",\"6a890e1d9f\",\"213928c724\",\"664e2c9de6\",\"776a049cd4\",\"b0a302e83e\",\"e38c1beada\",\"facbc38f06\",\"699c6049cf\",\"6c76def848\",\"84efb18ebd\",\"aad901bb24\",\"4411765612\",\"6646f86202\",\"facbc38f06\",\"699c6049cf\",\"6c76def848\",\"84efb18ebd\",\"aad901bb24\",\"4411765612\",\"6646f86202\",\"ce73d1c261\",\"939094e1b1\",\"a69ba73c5b\",\"cc24de6e39\",\"1bc75d14ba\",\"952c3e39ff\",\"9769e93965\",\"b30b64aa1e\",\"ec549679bc\",\"06a05c1388\",\"fa533c2b65\",\"616398f8e2\",\"7cfe2148a3\",\"f40147dd55\",\"b30b64aa1e\",\"ec549679bc\",\"06a05c1388\",\"fa533c2b65\",\"616398f8e2\",\"7cfe2148a3\",\"f40147dd55\",\"ef2a9619e8\",\"2555cd212a\",\"d2a2a4aaf1\",\"377c7158a0\",\"408d4b3bcc\",\"86ec681a3a\",\"14d86a1d33\",\"ef2a9619e8\",\"2555cd212a\",\"d2a2a4aaf1\",\"377c7158a0\",\"408d4b3bcc\",\"86ec681a3a\",\"14d86a1d33\",\"5de4ce7a94\",\"376a64b042\",\"b3c25087a7\",\"bbd90c49be\",\"405646be95\",\"5afc208c3f\",\"4714573419\",\"92ea201c2d\",\"089ba6de37\",\"bb5d8eb285\",\"b39919d58a\",\"e214077157\",\"09242e0c12\",\"6616400f66\",\"253f1ee450\",\"3dccebb462\",\"4cc69e6e80\",\"6fa2482bb9\",\"1c53f5c75b\",\"5637d8d34a\",\"8a46c2a5a5\",\"ea30b0940e\",\"f96545314a\",\"0c8c339b63\",\"99ccdb0a3c\",\"424cd22ab4\",\"0dc2516186\",\"d45f0592b7\",\"a39a47b0d2\",\"1066f08a18\",\"96b6395487\",\"7a1aa10543\",\"2a416f52cf\",\"88f10adc2e\",\"45d9ad2140\",\"0c38b78b44\",\"901bcc8c7f\",\"65e42811fa\",\"4d9efe7757\",\"580c617860\",\"d64fb33ff7\",\"76381f8107\",\"0c38b78b44\",\"901bcc8c7f\",\"65e42811fa\",\"4d9efe7757\",\"580c617860\",\"d64fb33ff7\",\"76381f8107\",\"a39a47b0d2\",\"1066f08a18\",\"96b6395487\",\"7a1aa10543\",\"2a416f52cf\",\"88f10adc2e\",\"45d9ad2140\",\"8be99abb87\",\"d0ac372bf0\",\"2684b6ad62\",\"2f909ab681\",\"f1c470a71b\",\"e576de240f\",\"5c88bff214\",\"dd55a42d70\",\"367210b81a\",\"d74e5551ce\",\"453fcb4258\",\"609c093254\",\"358bd494eb\",\"3cf6eb9a1d\",\"ea30b0940e\",\"f96545314a\",\"0c8c339b63\",\"99ccdb0a3c\",\"424cd22ab4\",\"0dc2516186\",\"d45f0592b7\",\"00584d78e7\",\"79acbf3930\",\"0651534e53\",\"4c2bca2fcb\",\"9b846bb8be\",\"8de306bd6d\",\"5865865eb5\",\"00584d78e7\",\"79acbf3930\",\"0651534e53\",\"4c2bca2fcb\",\"9b846bb8be\",\"8de306bd6d\",\"5865865eb5\",\"4960d8db02\",\"f2ab13ca21\",\"9c7cf3a7ee\",\"bd5dfb366e\",\"74baf84797\",\"d37ad7c771\",\"42438fe085\",\"cf0bcfbef0\",\"2b5c4d26c6\",\"4361b57fbb\",\"10e0b705be\",\"a2f30ff9a5\",\"31b83a3742\",\"d055ea8196\",\"cf0bcfbef0\",\"2b5c4d26c6\",\"4361b57fbb\",\"10e0b705be\",\"a2f30ff9a5\",\"31b83a3742\",\"d055ea8196\",\"671a1163a1\",\"9c6ef610d0\",\"f92a4ab8cf\",\"1be60388fe\",\"18c52b7a50\",\"8d5b4a2a5a\",\"0d9b9ddc98\",\"0d4e2e5d43\",\"1e413ad3aa\",\"1a03a02f02\",\"59118a29db\",\"8c15111a25\",\"ed02a21d4e\",\"8e53faa91c\",\"fdd5afffee\",\"77b5a127b9\",\"6651f8fee7\",\"1e0c09891b\",\"c901ddcd4d\",\"b9a93b553b\",\"8e5c18522e\",\"b481e3993a\",\"9ddb228407\",\"7632fe1dbf\",\"03fcce5273\",\"27a4c7a2c4\",\"8684844a4b\",\"03682a0fbc\",\"9565ff4292\",\"f43445e172\",\"75491d44e7\",\"4ac1e810ac\",\"f55530d2d7\",\"1c85a8c81a\",\"9541bf50c6\",\"dfda8887ad\",\"573ebaae34\",\"540a80d59a\",\"404d94bc34\",\"fc48f96050\",\"c55719f57f\",\"092e0d1d0f\",\"06e1df9a8f\",\"a1fd4363a4\",\"4fee6e9c8c\",\"b9eb5ef2a0\",\"005eff83bf\",\"f4de608eb2\",\"efffee79a0\",\"5fcc1e5c24\",\"380ed79466\",\"220bb91eeb\",\"f87e7ca0ee\",\"0395cf0209\",\"479ff8ae28\",\"e5f1408220\",\"0d4e2e5d43\",\"1e413ad3aa\",\"1a03a02f02\",\"59118a29db\",\"8c15111a25\",\"ed02a21d4e\",\"8e53faa91c\",\"0d4e2e5d43\",\"1e413ad3aa\",\"1a03a02f02\",\"59118a29db\",\"8c15111a25\",\"ed02a21d4e\",\"8e53faa91c\",\"c7aa235dc4\",\"a62aee0207\",\"a0cd9c2a08\",\"d498e81451\",\"216525a3a6\",\"5bc5f4430b\",\"d65698b070\",\"0d3ededa0c\",\"24c8a8a679\",\"8156bd96a6\",\"ee6f1fb059\",\"e078ad7239\",\"46ac6cecdc\",\"0a420ce2f4\",\"5444af1f6b\",\"e9d468bfb3\",\"fef271e834\",\"b2012d5be2\",\"2563166f64\",\"b07c752bd8\",\"e99c03cb6f\",\"5444af1f6b\",\"e9d468bfb3\",\"fef271e834\",\"b2012d5be2\",\"2563166f64\",\"b07c752bd8\",\"e99c03cb6f\",\"161929018e\",\"05a9096c34\",\"fbb4748b88\",\"faa650aa43\",\"5ee085959c\",\"fea789bce8\",\"1a8bc545d5\",\"32bdbe1c2e\",\"d92712c329\",\"fb759b3304\",\"7558a5b529\",\"a0b5331318\",\"127e0b6f50\",\"106ae80cd1\",\"d270d25891\",\"42fa51a3fe\",\"c2db6de8f2\",\"2bbbcdd557\",\"019779719f\",\"f210a42d29\",\"73746d73ef\",\"f4fb5acc55\",\"7718c22bb1\",\"8d79202a8c\",\"895ecac4c0\",\"57cbe33e78\",\"5bc4001672\",\"8108cd9dde\",\"c3edde05f6\",\"437616a4f7\",\"0e9d20e095\",\"f498435202\",\"37318339f2\",\"420cbd8b95\",\"cb11bd7d29\",\"308b5951aa\",\"34b7b270da\",\"09667edfe2\",\"8a8388b5ad\",\"b04a21bf89\",\"20fafe0ddc\",\"f279b9afaa\",\"31d3a16355\",\"d6b110688d\",\"f5b84d267c\",\"e3c52bc469\",\"e041c87814\",\"db30d656b2\",\"613abab76f\",\"161929018e\",\"05a9096c34\",\"fbb4748b88\",\"faa650aa43\",\"5ee085959c\",\"fea789bce8\",\"1a8bc545d5\",\"85bad66173\",\"68bd137579\",\"70b2767ab5\",\"dc27c355e0\",\"2ed3b8d704\",\"fbb1dd625a\",\"1a512d5d2b\",\"d62ab49749\",\"21f6370f5e\",\"c8e4dc2c8a\",\"49b066227e\",\"63bb67906a\",\"7301d29d9b\",\"ed76fae149\",\"d62ab49749\",\"21f6370f5e\",\"c8e4dc2c8a\",\"49b066227e\",\"63bb67906a\",\"7301d29d9b\",\"ed76fae149\",\"779485e0de\",\"87917f09bd\",\"617242c07c\",\"bf059313b9\",\"dbfa2ea938\",\"ae1168af6a\",\"5ca3def00c\",\"5dedd39e1d\",\"ce11908fd4\",\"e51ad3d63f\",\"11a7f626ed\",\"9a6a7c9f50\",\"50eed36548\",\"51f9d89f2f\",\"e259263731\",\"19bf857535\",\"28bf7e36ea\",\"1138d83424\",\"80b5a12162\",\"dcb91d98f4\",\"74f0bbe935\",\"da5af64645\",\"65d28f7826\",\"1adaa49857\",\"a53ac8c9d0\",\"6a40c3f322\",\"fa018b46ac\",\"64ab2376fe\",\"da5af64645\",\"65d28f7826\",\"1adaa49857\",\"a53ac8c9d0\",\"6a40c3f322\",\"fa018b46ac\",\"64ab2376fe\",\"d0f22d1963\",\"3a68ccdbfa\",\"d5a258e401\",\"374b62896b\",\"927dffe64d\",\"76474b4775\",\"fbaa6608bd\",\"d00e80af34\",\"a06bb121f0\",\"fb3f15aedf\",\"0d545319f4\",\"0036711b01\",\"5e1134e26b\",\"52519b991a\",\"c8144c5e53\",\"2d1c3c6796\",\"73ebe056ae\",\"55390275c5\",\"6a83c14648\",\"a33f29fcaa\",\"51a2b2f638\",\"bba84ef152\",\"b10db94d06\",\"1db8b524cf\",\"878d60b895\",\"fe87b83779\",\"5c90535522\",\"e46696c203\",\"d9c03eaa97\",\"82a52c8bcb\",\"be48edbd58\",\"04435eac07\",\"1beda44946\",\"b102718326\",\"64a05de442\",\"31cf10c567\",\"f97ea2b995\",\"623b0dbedb\",\"f3bc19c80b\",\"5c5cdf83a9\",\"63facda6a2\",\"f424db2062\",\"d9c03eaa97\",\"82a52c8bcb\",\"be48edbd58\",\"04435eac07\",\"1beda44946\",\"b102718326\",\"64a05de442\",\"d9c03eaa97\",\"82a52c8bcb\",\"be48edbd58\",\"04435eac07\",\"1beda44946\",\"b102718326\",\"64a05de442\",\"2a16e29a40\",\"4d97e892d3\",\"4c3ea198c8\",\"8111bb16d4\",\"c0e6669755\",\"dd702e7b4c\",\"a90f44ff04\",\"78e42f544f\",\"1c5db481a3\",\"6588db2b8d\",\"4f89de4626\",\"2e6a83a8b5\",\"4201a92aa5\",\"b861eb5850\",\"94ae6f6df1\",\"2a9ca88296\",\"253dc01721\",\"99085a8736\",\"b73f0bebaa\",\"b7ea79196c\",\"ff9532700d\",\"e11bf44535\",\"845d392935\",\"84a2ca5b6f\",\"7d60121679\",\"bc95e644b9\",\"3bc2091668\",\"86bb0919d4\",\"e11bf44535\",\"845d392935\",\"84a2ca5b6f\",\"7d60121679\",\"bc95e644b9\",\"3bc2091668\",\"86bb0919d4\",\"c235dadbbd\",\"966299dc94\",\"93b99eb6d7\",\"b8ec49293f\",\"c9a0af0cf4\",\"a374219ac2\",\"2d7a94bd41\",\"31970b4ee3\",\"c736dbbcd6\",\"8cf7ed8a40\",\"2ae0a162c6\",\"b8668eaab7\",\"0d515e46e9\",\"a5583ac16d\",\"19a5e7bfed\",\"35d56df0ce\",\"e3a8d716a0\",\"d8a3abfac8\",\"29803d4f1f\",\"1a1b1da1db\",\"989b53a883\",\"bb5b320854\",\"1a381cf43e\",\"5de370801b\",\"5ebf5c5e09\",\"34d561926d\",\"99098e8eed\",\"07a1c5d2f4\",\"5016c6a79f\",\"2007b8fa95\",\"edb6a04fd7\",\"b7af1c20d3\",\"4eef5bbfad\",\"d2b7563660\",\"d9130d21a3\",\"5016c6a79f\",\"2007b8fa95\",\"edb6a04fd7\",\"b7af1c20d3\",\"4eef5bbfad\",\"d2b7563660\",\"d9130d21a3\",\"58f261e2d7\",\"79d562fc8c\",\"92bb1405fc\",\"e702b5c784\",\"dc02d8ff49\",\"1ee92d8431\",\"ee06a1ce49\",\"c7108bcc2f\",\"d1ece5275d\",\"5b900b18c8\",\"a7ae9896b6\",\"e12ee178bd\",\"6bf8125d0b\",\"997e114e23\",\"c7108bcc2f\",\"d1ece5275d\",\"5b900b18c8\",\"a7ae9896b6\",\"e12ee178bd\",\"6bf8125d0b\",\"997e114e23\",\"2d6e80e4e5\",\"a6eef643a5\",\"5f8f24792c\",\"3c08019ede\",\"80276b8d9d\",\"7e15ab2bb9\",\"02da8462d7\",\"3ec3b80442\",\"31b50a8a1b\",\"530d1ddf2f\",\"57cbe9f478\",\"49455e3e6f\",\"82cc22ed79\",\"f06725777b\",\"76cd18db32\",\"0238874986\",\"686224e026\",\"05c15f0d34\",\"b94c9514a0\",\"42d59162cd\",\"3faebd5224\",\"ae65033d08\",\"7fc84cb3e9\",\"468b74d075\",\"dca060ee5a\",\"b3cdab0322\",\"087ecff450\",\"1384a0c1ff\",\"8278a1ba45\",\"c45f7c7b45\",\"444374579d\",\"9698b57514\",\"0db4d2a24a\",\"0af03e15b8\",\"a4a7429c7a\",\"d7f03c9022\",\"a52ce02416\",\"89bdbf9906\",\"77828c7f3b\",\"372b794644\",\"2486c92870\",\"c219de2f64\",\"8220b67545\",\"fa484b7858\",\"8755582461\",\"583a9a8487\",\"e0ac9f8cf9\",\"3e90f2458b\",\"c22fbe76a8\",\"1cf0749b98\",\"98e27988dd\",\"6213ff5244\",\"55bd6f41e9\",\"ef9f6b137e\",\"a2a890a316\",\"b15b0c5712\",\"f50f5c5197\",\"86248eca94\",\"f87cd5b09f\",\"7cc33ff77f\",\"c1628d6d2e\",\"3155dc3cd6\",\"9eade5883f\",\"c511884ed5\",\"2af257ba3c\",\"de64b047d1\",\"203517087b\",\"0fa7d8a938\",\"ec27a79721\",\"4839fd2b19\",\"c511884ed5\",\"2af257ba3c\",\"de64b047d1\",\"203517087b\",\"0fa7d8a938\",\"ec27a79721\",\"4839fd2b19\",\"9379da8dba\",\"7d32d6cbc4\",\"9a6949d4eb\",\"364e417ee3\",\"2950a38812\",\"5225a21f0e\",\"c2b2718666\",\"027854b136\",\"1831dc807f\",\"75cac6615b\",\"4fce220d2b\",\"ef950eee76\",\"c4811bf95a\",\"f88437d8e9\",\"d4ce1770b4\",\"67fccdbc84\",\"bcc4ce9c06\",\"373222afa4\",\"994d105403\",\"5b6bde9b79\",\"15ebd07fc6\",\"8f5acefa89\",\"bf1fd1c5f7\",\"af7f42c1ce\",\"416a9c700f\",\"17bb325846\",\"15b69e7730\",\"570c7c471e\",\"fed9b21407\",\"52fa21d14e\",\"b90336c7b5\",\"9da76128b5\",\"0ca69f7767\",\"4469d73525\",\"b4fe77a9f4\",\"803ac2a6f7\",\"788ab93f25\",\"d2b4a696c9\",\"abd0918c19\",\"e967217d03\",\"03d66eb916\",\"2db95f48cb\",\"2cebd7e32b\",\"44aad2193a\",\"0ff2d447f3\",\"945ee79be8\",\"a392ed6036\",\"d11babb683\",\"540721ac81\",\"d5c3fcce17\",\"eae53ba5b4\",\"d4aa6c56b7\",\"827bcf7ac7\",\"ffab0f745f\",\"3fa1ff098d\",\"4e91ef4133\",\"d103a1fca8\",\"e60f6419bc\",\"9595bafe90\",\"5a62c94b1e\",\"11bbd4a9e9\",\"ab5646c2f2\",\"2ae8fab9b4\",\"08fc687b80\",\"6db6b31b6c\",\"ce0e116050\",\"db735c5d1a\",\"7333b720d0\",\"b43667d149\",\"dbf80cebf2\",\"08fc687b80\",\"6db6b31b6c\",\"ce0e116050\",\"db735c5d1a\",\"7333b720d0\",\"b43667d149\",\"dbf80cebf2\",\"f4f320c134\",\"766f8f750d\",\"a01b99a125\",\"a8ca69f92a\",\"f269b9d702\",\"92f79caa23\",\"e8b601f6ef\",\"1b9fb7d210\",\"73436f7519\",\"ed606cfcd4\",\"f4572a9333\",\"c7b60aeb93\",\"a3cc8c4d07\",\"d6dc508a9b\",\"1b9fb7d210\",\"73436f7519\",\"ed606cfcd4\",\"f4572a9333\",\"c7b60aeb93\",\"a3cc8c4d07\",\"d6dc508a9b\",\"9389c0ab2f\",\"3e9fb119a0\",\"caf678e109\",\"105e25e2ca\",\"ad24ed0c3e\",\"1a5d241d43\",\"ee9d41112b\",\"d8a0ca63d4\",\"38a7ca4322\",\"1db2f4d891\",\"b9b23a6ad3\",\"22e761adaf\",\"f0d2dca612\",\"74eb20b382\",\"a716cd7e1d\",\"0374aeba6a\",\"15c03d682a\",\"163424ced2\",\"f6809e6d62\",\"ad3cc09d5c\",\"bd9eddbbf8\",\"e182b0f048\",\"3be620a50d\",\"473f0541c9\",\"4d8bc91b01\",\"016ac6387d\",\"3d64c52361\",\"fab504ed7c\",\"3729c3aa20\",\"0ccaa53adf\",\"93b4ab9d27\",\"cee83a8890\",\"862f3036fd\",\"acb40c303a\",\"98856a343c\",\"0916ca2d62\",\"6dae4d9c6f\",\"0ce9986420\",\"db8df43025\",\"ec48ac4341\",\"aa6266e123\",\"92159448b4\",\"0916ca2d62\",\"6dae4d9c6f\",\"0ce9986420\",\"db8df43025\",\"ec48ac4341\",\"aa6266e123\",\"92159448b4\",\"6e25b5d2c0\",\"9a042295ff\",\"16136a6523\",\"f4eb6c7752\",\"277192934f\",\"ae081a76c2\",\"bc69a08805\",\"56c80ffe41\",\"ee5d804009\",\"22ceed0efe\",\"b9c0b16d3d\",\"44144cc5aa\",\"d1bf4834e7\",\"9adb746b65\",\"31fd877ed7\",\"345cf154d5\",\"a5903a80df\",\"c53588a569\",\"4d5168c98b\",\"3fdccf94cb\",\"246f16e2aa\",\"d79adcbf9d\",\"f6fba87a4c\",\"a53ed78f35\",\"332270a27d\",\"72e5aafb8b\",\"be0d13eb51\",\"2b3d71ba93\",\"e6e8be7a77\",\"bee91ad205\",\"13b4ef9f52\",\"2ff63f29e2\",\"50f27427a9\",\"65b07a9607\",\"0371705356\",\"5293c43445\",\"a0e5fb1f02\",\"4ed218212d\",\"c7f9733da4\",\"b4d6b207bb\",\"a167164688\",\"0bc27aa33f\",\"8077794498\",\"a2f35c6e92\",\"3ae31b9bf9\",\"6d6fde2b15\",\"728cd342dd\",\"00376cf820\",\"2991063460\",\"56c80ffe41\",\"ee5d804009\",\"22ceed0efe\",\"b9c0b16d3d\",\"44144cc5aa\",\"d1bf4834e7\",\"9adb746b65\",\"56c80ffe41\",\"ee5d804009\",\"22ceed0efe\",\"b9c0b16d3d\",\"44144cc5aa\",\"d1bf4834e7\",\"9adb746b65\",\"736e737837\",\"6d7d7f830f\",\"8039c6712e\",\"20b24f6ffb\",\"5f140692e0\",\"24c53b1dae\",\"2ae6e4c412\",\"736e737837\",\"6d7d7f830f\",\"8039c6712e\",\"20b24f6ffb\",\"5f140692e0\",\"24c53b1dae\",\"2ae6e4c412\",\"52bf18fa3d\",\"f21b8d6eb8\",\"4b0aa2e143\",\"6fb98d6d5c\",\"3e02abd6fc\",\"28664b1183\",\"7d87bc675e\",\"e1680c0180\",\"d4f1518645\",\"595c792f6c\",\"382414ca42\",\"3db4274cf7\",\"e1e8a87398\",\"41d368a778\",\"b413c2fe7d\",\"6b4c8fcde2\",\"d6d0e2cdfa\",\"5844cbaaa4\",\"a8bb9a76e9\",\"1c33540b3b\",\"04b1b54470\",\"2d04a78ddc\",\"5c3ac3a5f7\",\"b899023925\",\"d422a8a9ea\",\"a58948e556\",\"022c23ec3c\",\"20818af7d6\",\"539106d87e\",\"b9ee05ec00\",\"30238cf64f\",\"591e3b01d3\",\"7aaee63bde\",\"66f3e14792\",\"5687fff1f1\",\"48a60940ae\",\"e3663a2230\",\"8a9519ce32\",\"f7e7abaf09\",\"05b1d08aa2\",\"12cf423be7\",\"23ed6c772a\",\"b413c2fe7d\",\"6b4c8fcde2\",\"d6d0e2cdfa\",\"5844cbaaa4\",\"a8bb9a76e9\",\"1c33540b3b\",\"04b1b54470\",\"52bf18fa3d\",\"f21b8d6eb8\",\"4b0aa2e143\",\"6fb98d6d5c\",\"3e02abd6fc\",\"28664b1183\",\"7d87bc675e\",\"216c80fc05\",\"5c8a0e5588\",\"0346027e30\",\"8d5963d513\",\"3ae5269dea\",\"a4540add3b\",\"b638b5a0e7\",\"6c723553a7\",\"1dcdbd17b4\",\"fd909c8caf\",\"261ef84659\",\"1d212448fc\",\"dd6d26feca\",\"3d7b95112b\",\"cf171e2a02\",\"f6568d19a5\",\"fb44f3ab13\",\"201eb9f0f6\",\"a6d848daa9\",\"70527659a1\",\"24c2865487\",\"539106d87e\",\"b9ee05ec00\",\"30238cf64f\",\"591e3b01d3\",\"7aaee63bde\",\"66f3e14792\",\"5687fff1f1\",\"4046f53902\",\"1f76bd589b\",\"c7da408d54\",\"b808d4afb6\",\"f5f5d87902\",\"0ab94006d1\",\"273384dbf8\",\"b46b2e558a\",\"72213d4868\",\"cb56864d18\",\"73d5db4c5c\",\"182a8cce1d\",\"48e98fbffa\",\"72a1c26def\",\"76e58a24d0\",\"6bbcfb3489\",\"dcb1b6fd08\",\"2d120776f7\",\"3f54938ade\",\"dd8bddf5e5\",\"3ede9b4a65\",\"bdfa41422d\",\"75cb341dc9\",\"44673a01cc\",\"cfef2a7cf5\",\"2bd4cccd30\",\"221fa03d87\",\"2c83e509eb\",\"c89da1101f\",\"df69507554\",\"15896685f9\",\"c93d1cf71f\",\"b51bab1bd7\",\"a93a7cb480\",\"594bfc899d\",\"35412f5500\",\"403530b9b0\",\"0d832a4b44\",\"e66292638a\",\"ba48038596\",\"166a2b84e6\",\"65beeccf3d\",\"4fc2429f9c\",\"3dfcae43eb\",\"ccbd772c42\",\"679a67cd65\",\"15b0727dd6\",\"a43554678e\",\"4bf703c7f2\",\"c89da1101f\",\"df69507554\",\"15896685f9\",\"c93d1cf71f\",\"b51bab1bd7\",\"a93a7cb480\",\"594bfc899d\",\"b774f7eafd\",\"471114e505\",\"8314268bef\",\"d95c3a90f7\",\"f006a1f629\",\"50afacb7b9\",\"7f17ed8921\",\"afbe7a556c\",\"47b9d7d196\",\"692453febf\",\"da74c4901b\",\"882d9a8288\",\"e5dcfb8ba0\",\"491ffe7937\",\"1973f8cbea\",\"0f3dda1991\",\"48f8ba87f1\",\"26a897ae50\",\"72c25ce0e6\",\"83859a37b1\",\"8887557e2c\",\"7f54b869cf\",\"1f404b3001\",\"fd46a12fe9\",\"ef255feb2a\",\"9b369265ab\",\"b579b96236\",\"0296af76c8\",\"55310b5844\",\"c0538fc8d4\",\"12f3dc14bc\",\"7970efcb10\",\"127e5df4f3\",\"b3ef29d6a6\",\"acca9d53f8\",\"3634cdef84\",\"38a90c6d08\",\"dc054d1b79\",\"96676f52fb\",\"7db61e1738\",\"6a35d62882\",\"eb1d50d05c\",\"7d2932a27e\",\"6e355dbabb\",\"ed9eb237ed\",\"715494744a\",\"cee55cd391\",\"17c2abed55\",\"6f13f2b988\",\"7d2932a27e\",\"6e355dbabb\",\"ed9eb237ed\",\"715494744a\",\"cee55cd391\",\"17c2abed55\",\"6f13f2b988\",\"cedb1af97d\",\"7f413a6482\",\"4857fb6383\",\"61332d7e64\",\"5ede978b64\",\"f9ba031339\",\"3374d75098\",\"cedb1af97d\",\"7f413a6482\",\"4857fb6383\",\"61332d7e64\",\"5ede978b64\",\"f9ba031339\",\"3374d75098\",\"b285ce935d\",\"d254a7a42c\",\"48df9c3979\",\"e21e29a613\",\"d0b1c635ee\",\"91c0f513aa\",\"941645ae5b\",\"bac335502b\",\"c9da5c8b79\",\"bd7fc03605\",\"236aa70c02\",\"de9809cdc8\",\"10a637650a\",\"9e98984466\",\"ec30cc8e7c\",\"be1bccd480\",\"715414f38a\",\"84ffae732b\",\"ecb7b779a4\",\"e7841c403a\",\"df136d120c\",\"ec30cc8e7c\",\"be1bccd480\",\"715414f38a\",\"84ffae732b\",\"ecb7b779a4\",\"e7841c403a\",\"df136d120c\",\"5b9a5d4907\",\"db5ba91421\",\"429d709a4c\",\"98921d6a46\",\"4d301c7f9b\",\"21e1a61b52\",\"65ae6c2a1d\",\"80d9458eb8\",\"e637dd85d0\",\"29ea259d7f\",\"a55a5c024e\",\"ea2d24e15d\",\"4ca60ed998\",\"af74cfa96f\",\"00fa74bc72\",\"9bdc125b89\",\"1afaaf83a1\",\"281512d073\",\"0ecdb55390\",\"b6c6f5c34e\",\"a29087813f\",\"1c917732e1\",\"18d2be2db4\",\"cc48dac289\",\"5615aaa723\",\"2a72b8ab9a\",\"22fa8533fc\",\"51efccec60\",\"12d82fd9c5\",\"91e61603ad\",\"97149cf99a\",\"69c2a605e5\",\"fccd2a1737\",\"d05e7c934a\",\"1069792865\",\"e776fee60c\",\"c902dc84ea\",\"53b4f5e076\",\"db7458a362\",\"86bf0601e1\",\"37aa8c3811\",\"38ba42f986\",\"de5992019e\",\"25e7831f08\",\"0257f7b950\",\"71dc013d82\",\"f432c905fe\",\"eef30dcc47\",\"26ed17b8d6\",\"52b778da02\",\"ceaa81c366\",\"a82a03e8ed\",\"71bc63a74e\",\"bf469d2835\",\"a9bd93188b\",\"b57cd062b8\",\"cda7f4d1d9\",\"0bce2b9f8d\",\"665bbc116c\",\"9a534f07df\",\"172901e9b6\",\"5ac6f80ed1\",\"d4a5b9d431\",\"8a25590f7d\",\"043bebdd69\",\"945ba895a1\",\"d7b2f97f99\",\"b7fe6b1783\",\"2ad31b30fa\",\"a7abf13bba\",\"12d82fd9c5\",\"91e61603ad\",\"97149cf99a\",\"69c2a605e5\",\"fccd2a1737\",\"d05e7c934a\",\"1069792865\",\"ad6109a8d6\",\"5dbea1cf3f\",\"cb58cfe469\",\"ce92b00413\",\"6b8b554f52\",\"e5bc887e41\",\"83571d5bf9\",\"df786f5c5b\",\"d8ab374349\",\"337fe41067\",\"fabf82d552\",\"8daef733f9\",\"98dd85c2af\",\"1d4a6b9201\",\"dde94ac7df\",\"2ebb7815e9\",\"14f3876015\",\"cf650bbf2a\",\"2c0cfa1063\",\"5aedf7f259\",\"7614434691\",\"b10f12bfb2\",\"2a28cb6ca6\",\"6a8e696f73\",\"1cff92a8dd\",\"b3ab08189c\",\"82e1a098c2\",\"38ad6ff7a0\",\"c7d25dd4d0\",\"a0d6eb2c19\",\"d51c32c01c\",\"2090f9ce78\",\"6fcefa1794\",\"62b7cdf291\",\"88d817afd7\",\"6758db3e83\",\"9e21343315\",\"1553f9764a\",\"a37e0b0884\",\"b88f956227\",\"c228c5ab81\",\"ce75f9d3fd\",\"ddc842ed25\",\"7f0c0647eb\",\"d953990081\",\"5414cb76e3\",\"87111d346c\",\"7ca917e728\",\"5774567bb6\",\"d40203b088\",\"84a90985ee\",\"3b4230e95c\",\"0d213823bc\",\"30a0610e1d\",\"0e0b7fc0ad\",\"c6b91ca569\",\"95995fda18\",\"b003c913d6\",\"e3c9c7c04b\",\"5cda5b744e\",\"936c49d7d8\",\"4f67f25b4d\",\"da2d2fc3b8\",\"238a30f3e9\",\"aebb44f6ae\",\"a71191ad1e\",\"5e6abd0444\",\"e7d169ff06\",\"fca2f92785\",\"cccd3ab3d3\",\"238a30f3e9\",\"aebb44f6ae\",\"a71191ad1e\",\"5e6abd0444\",\"e7d169ff06\",\"fca2f92785\",\"cccd3ab3d3\",\"8f50dc2eb8\",\"4ca1010270\",\"7d67a3076d\",\"44f3504bb7\",\"205d3a5095\",\"2f52ee2d6e\",\"147d27089e\",\"7949175d84\",\"1bf9001a18\",\"f9b96006ea\",\"4bb337e065\",\"7dc5288fb4\",\"a3cdd5a64e\",\"410d53aca3\",\"7949175d84\",\"1bf9001a18\",\"f9b96006ea\",\"4bb337e065\",\"7dc5288fb4\",\"a3cdd5a64e\",\"410d53aca3\",\"ad5d9ae395\",\"41b534bfaf\",\"1322669a9e\",\"ce84ec9e25\",\"d4936dcf0b\",\"2bcd0057bb\",\"cd7a916090\",\"de8f63c9dd\",\"18132f1a68\",\"7d469339ef\",\"5997f1b51d\",\"232626578b\",\"a8a4bcb400\",\"aa6af8a914\",\"bc059f0772\",\"5b2e8d93f6\",\"439fdbe765\",\"cd8bc73481\",\"40d02bef97\",\"8fb4dca64a\",\"8e68e952e5\",\"91d0360626\",\"3e6175868f\",\"a2d5c97bc8\",\"c1d00a7990\",\"1c51f30ece\",\"3b4732f107\",\"824ceb33e8\",\"fef6527073\",\"c061a434ca\",\"b6b6ecffcd\",\"94d39ef384\",\"114dba95af\",\"3761a311d5\",\"ea4835a2ef\",\"6967cbd8c3\",\"e9b56a3411\",\"6241fec5a4\",\"0745e03669\",\"5b7d320533\",\"dda2926197\",\"c91625c9a8\",\"ad5d9ae395\",\"41b534bfaf\",\"1322669a9e\",\"ce84ec9e25\",\"d4936dcf0b\",\"2bcd0057bb\",\"cd7a916090\",\"5bc5a1a6fe\",\"7ff476d053\",\"49fe097527\",\"38e31250fb\",\"f33037c3b3\",\"4401e5d436\",\"ada1763458\",\"049cf102b6\",\"85d00165d4\",\"73ce693002\",\"db33466afa\",\"79bbf8b7ea\",\"5dd230401e\",\"4f1dafc4da\",\"928b3808dd\",\"23e1007e6f\",\"cce4708164\",\"894055939e\",\"4245d9abf5\",\"a3d8be0739\",\"f3defc744d\",\"bdc06cbfb1\",\"b73beafb3e\",\"aeef725fea\",\"aa26aafd93\",\"63617eabec\",\"25cb449fc8\",\"718a328540\",\"8e6d81d4ae\",\"52227151e2\",\"6e09cbab85\",\"b3c9a26a08\",\"c3e82dac46\",\"eb83589d28\",\"eaaec87217\",\"0c9ea79011\",\"13b3b0a775\",\"b18f3dad4b\",\"36d43ec3ca\",\"c6cd411a46\",\"71e0b47523\",\"539d204de2\",\"7d37bda206\",\"9dabf2505f\",\"fb837f27a6\",\"55e562b894\",\"cc866a7401\",\"a6ccc04cf1\",\"84b2cf6cb6\",\"2d3f1459b9\",\"253c84adae\",\"b40b5a2685\",\"faf5352c3b\",\"03528cfae3\",\"34a1057aec\",\"78d2953496\",\"62f9e5be5c\",\"7c873d5367\",\"c06765de3e\",\"8b20b6a323\",\"796f1a909a\",\"6ae6b8520a\",\"21b56b1aa0\",\"928b3808dd\",\"23e1007e6f\",\"cce4708164\",\"894055939e\",\"4245d9abf5\",\"a3d8be0739\",\"f3defc744d\",\"1d0be8cad7\",\"c7f2074af0\",\"4b84977d75\",\"8be220d22e\",\"7c3037b63c\",\"d741c066b1\",\"374cb2c714\",\"659fd52eb5\",\"cd12dc752a\",\"a0bec0281f\",\"a4d5fab7a4\",\"3e6b6fb021\",\"9bc63a3fe1\",\"e170e4c118\",\"28690feb69\",\"d99ecf823b\",\"4ac8f516db\",\"3bd8acc38a\",\"a22860046c\",\"458f9adf22\",\"039cd07961\",\"9f99ab258d\",\"b524461592\",\"29ad68f6dd\",\"30faea0cdd\",\"782eeb319c\",\"7a5a8837dc\",\"d5839f053e\",\"28690feb69\",\"d99ecf823b\",\"4ac8f516db\",\"3bd8acc38a\",\"a22860046c\",\"458f9adf22\",\"039cd07961\",\"28690feb69\",\"d99ecf823b\",\"4ac8f516db\",\"3bd8acc38a\",\"a22860046c\",\"458f9adf22\",\"039cd07961\",\"e717434abb\",\"199b2038be\",\"d2b31b654c\",\"2d827f2a90\",\"49e2605fc5\",\"9fe035cb06\",\"786c93268e\",\"f15cd5c210\",\"b21108d740\",\"1416e9d0b8\",\"731b6ed163\",\"a6cd36b432\",\"14b45b1382\",\"ce87d31334\",\"b56c33213e\",\"f41c7fcc8e\",\"73c5f9fb05\",\"740c42c737\",\"eb7b65ea12\",\"e7219b57a7\",\"2e1dd74bb4\",\"2da0baf9a4\",\"99c1512c90\",\"f754b30f99\",\"9ed0ab4c3f\",\"4ae41f522f\",\"ec66947577\",\"a24d894630\",\"dc7a9d61e7\",\"0e8d9682dd\",\"1ec38c1667\",\"019f1ce8e5\",\"0f4076fa6a\",\"7b507b6e53\",\"d20ed27b77\",\"b64cd2c677\",\"de7a42fd58\",\"3f6c2ac800\",\"91d69a0c6c\",\"6567d112f8\",\"7d39527007\",\"7522b06b38\",\"75dba5551f\",\"d1707af901\",\"e879974a46\",\"ed7e1932a6\",\"569a27c729\",\"557953028a\",\"cdaa67ac24\",\"dc7a9d61e7\",\"0e8d9682dd\",\"1ec38c1667\",\"019f1ce8e5\",\"0f4076fa6a\",\"7b507b6e53\",\"d20ed27b77\",\"0cbdc63e8e\",\"c88574d07d\",\"1d2bc61e05\",\"80bcbbfb71\",\"59c14dd8c2\",\"4340bea6f8\",\"2d6151ab2e\",\"2b854b7bd3\",\"ea3d89ffaa\",\"ad2260d12a\",\"d98d6593ac\",\"5219a9be1f\",\"8cfc946234\",\"1448cd9174\",\"c7ea4e4742\",\"149a7bf122\",\"8189a1aba5\",\"5460dc3984\",\"c092fb921d\",\"b041de4e31\",\"f9b233acbd\",\"8a92585f71\",\"fb93407c0a\",\"f0842a3174\",\"d6e995586a\",\"ff0193463e\",\"62310889ea\",\"6be7c6fb26\",\"a41711dabf\",\"417c0fb6a7\",\"edd465d7bd\",\"4cb088d6fc\",\"81a4965502\",\"8fd09cfe25\",\"6291ca7df0\",\"f08f34fa45\",\"3e2b40ba91\",\"a1f85198d6\",\"7a7b51eb2e\",\"3433f2156b\",\"a67d14a5f5\",\"88c06e98b3\",\"a29d68d995\",\"25fec7ebd6\",\"a07686f728\",\"5c3eec9126\",\"805769b258\",\"9ce84ccf3d\",\"f20f0b8b04\",\"066426d385\",\"30f7ebd4c6\",\"416ba06330\",\"93064e3f7f\",\"d4e4d437f9\",\"169842399f\",\"e213822770\",\"c7ea4e4742\",\"149a7bf122\",\"8189a1aba5\",\"5460dc3984\",\"c092fb921d\",\"b041de4e31\",\"f9b233acbd\",\"2b854b7bd3\",\"ea3d89ffaa\",\"ad2260d12a\",\"d98d6593ac\",\"5219a9be1f\",\"8cfc946234\",\"1448cd9174\",\"87317879f5\",\"2c7e1ff1fc\",\"5c7aa3e977\",\"926f64bf6e\",\"e7f44aa4c4\",\"879afd1d89\",\"ede59a13b3\",\"39e65961fc\",\"2f1a25ffdf\",\"d9b8fc0ec1\",\"81f48a9e6b\",\"3119119003\",\"50453bd11b\",\"78bd177b55\",\"03d133315c\",\"da6729387e\",\"4151d7364c\",\"d201be0d78\",\"8e65992edc\",\"c1ae728b22\",\"cc0594a1b6\",\"0c8c9934d7\",\"7c0ff0ddf5\",\"42ef2b91d9\",\"ea974407a8\",\"6c02cc542a\",\"9aa200331b\",\"9fa21c9431\",\"f345211c44\",\"ed8646ac6d\",\"6332f8d2f1\",\"34c5f35a51\",\"84b7461977\",\"b90f5b4f27\",\"a37a7a09b0\",\"3d32dc4624\",\"50959d6d31\",\"640a883a51\",\"0e16985b70\",\"489cf4681a\",\"e7e87c7cd6\",\"e48eb1ff7c\",\"a6f07b0c8d\",\"727f41a48b\",\"1249cc2379\",\"d25a52f143\",\"341709b70f\",\"4a3b5f78b2\",\"0747d8385e\",\"ee6f677698\",\"46f4dc8109\",\"78ce40a7b3\",\"6a6548cf6f\",\"3a4b047106\",\"cef7d8bd03\",\"bf64d23f7a\",\"0c8c9934d7\",\"7c0ff0ddf5\",\"42ef2b91d9\",\"ea974407a8\",\"6c02cc542a\",\"9aa200331b\",\"9fa21c9431\",\"485925a35d\",\"36b0b3d970\",\"e3306767bf\",\"646af8510d\",\"100373d520\",\"18cbc5a30f\",\"bdd7a1bb6f\",\"82f9be0a77\",\"8eda68f76a\",\"3814dd4313\",\"5aad15f6f6\",\"c70d3da1c2\",\"cf6b702f10\",\"6718e28d19\",\"1bbcc79783\",\"4fe93c12f3\",\"35a0b0bb3e\",\"a260cf1688\",\"7cb4cfdedf\",\"813d64e640\",\"5012cc7173\",\"adcf08a8e1\",\"5342267143\",\"851c3d3017\",\"91bb2ea133\",\"b6dd6329aa\",\"f41219f9f5\",\"1adab6a16f\",\"50022117ca\",\"847c0b56f4\",\"12dc459762\",\"eb7ee3d72a\",\"adf2796d98\",\"fd100bfb27\",\"13b37e5fca\",\"485925a35d\",\"36b0b3d970\",\"e3306767bf\",\"646af8510d\",\"100373d520\",\"18cbc5a30f\",\"bdd7a1bb6f\",\"7409dbbadb\",\"e4094d64d1\",\"8e4a6bb3a2\",\"6aea50d0a8\",\"93a60e4bac\",\"d89243e0dd\",\"c778048c68\",\"14d71ff159\",\"e38ca4bfce\",\"7a3dfb3258\",\"18c9ba6484\",\"82efb3e469\",\"61608bc8eb\",\"52cb64cc48\",\"2715311445\",\"62246c1006\",\"5d09b99888\",\"6932156d55\",\"772afae34b\",\"77ddb532d0\",\"e64c8df28a\",\"bdfba9b7e3\",\"fcdcc92aa4\",\"f4128e7177\",\"87f30402f4\",\"61a9543bde\",\"23719345af\",\"fb21a08088\",\"8cbdb593ca\",\"04e0e3f413\",\"990723e1c2\",\"7bcfea039f\",\"9c0cb4725f\",\"e807310c72\",\"ffeff6df18\",\"8c1b4d4dfd\",\"901c657f2d\",\"dcce1fd896\",\"e7208bcc11\",\"30263d3611\",\"77861b5af8\",\"63c162d0f2\",\"1477718d1b\",\"30eb943629\",\"df5b139368\",\"63a35da549\",\"7d44dfbac2\",\"23f197831f\",\"2e28a34eea\",\"1477718d1b\",\"30eb943629\",\"df5b139368\",\"63a35da549\",\"7d44dfbac2\",\"23f197831f\",\"2e28a34eea\",\"77ff120d77\",\"38db4d187c\",\"ae9848d3a2\",\"8db38c23ac\",\"02064ab7d6\",\"6509b991ac\",\"1ad534500e\",\"8c7d63d1f7\",\"e8724f9047\",\"acb1fe4209\",\"3c76f50d00\",\"618740c0b5\",\"21b3c6a2ca\",\"a21d739aa7\",\"26154f113c\",\"973fecdf43\",\"8b3dfda278\",\"1b61f4b4c5\",\"9056e244c9\",\"b296b74009\",\"ab05402875\",\"5172a4733f\",\"74d5a4bc5c\",\"fab04de095\",\"e4cf11421b\",\"27d03f18d9\",\"1ea5c6be71\",\"5786d35085\",\"7eeef83f07\",\"c353e4e307\",\"40789f8a93\",\"aa5f5b0ab8\",\"ca05719cc4\",\"7379417976\",\"ad2e232613\",\"ce5c6ac0ef\",\"36d0e132b2\",\"6095d0a3d6\",\"215612252e\",\"de8930bd5f\",\"99b5357cbc\",\"58ba036ef1\",\"d52b0f372f\",\"33e99feef2\",\"ad4ea0f893\",\"2f463db8a6\",\"08c102c3e2\",\"8cb37656be\",\"c468569e6c\",\"c3217b22a7\",\"5fb92bd3e3\",\"58277cf2fd\",\"39f050982b\",\"ed303fccdb\",\"6a1a91952a\",\"68d946622a\",\"c3217b22a7\",\"5fb92bd3e3\",\"58277cf2fd\",\"39f050982b\",\"ed303fccdb\",\"6a1a91952a\",\"68d946622a\",\"9a9f5f947f\",\"b8ae47357c\",\"5e67d9f4fb\",\"a85a8ae546\",\"68620d14e7\",\"7b9cb6e639\",\"0196f1ea25\",\"710c0b3aca\",\"17ab581115\",\"75d7fecd1e\",\"dc561a8038\",\"9f9aa11ef5\",\"945879b633\",\"76d18c93bb\",\"43a3fefda4\",\"1ae0bd9134\",\"79354703ab\",\"f7965974ac\",\"321ab664e1\",\"f97939f662\",\"5e9ab0f0df\",\"5ebf365377\",\"afe49be45a\",\"617ae205cb\",\"6cd3acd60b\",\"15dfc01ad6\",\"7036e6b6c7\",\"cee150caa6\",\"013da48acb\",\"7951096dd7\",\"dcd7c16582\",\"c02e045a0c\",\"77f91c771e\",\"17e2614540\",\"f2a824fe1f\",\"25ce69c45e\",\"fce44aa607\",\"14a72f3ed9\",\"f29cb3cde2\",\"a3a66a9eaa\",\"4bddb92406\",\"97447d885a\",\"43a3fefda4\",\"1ae0bd9134\",\"79354703ab\",\"f7965974ac\",\"321ab664e1\",\"f97939f662\",\"5e9ab0f0df\",\"89582baec5\",\"a8230a0c28\",\"f187091bb6\",\"4c1aa6d607\",\"c896388df8\",\"38d45a883f\",\"81bb9cf6e4\",\"128968f512\",\"157a65c3c6\",\"9546ac8ccd\",\"656c093fbd\",\"158bc9a35f\",\"b67e1379de\",\"d064211277\",\"cb52fc2a65\",\"f4be2832e9\",\"bf4dc78bc9\",\"c783192d6b\",\"d60b28f5b4\",\"b66357fc91\",\"a1791420f9\",\"b98b7f300e\",\"9e21f8df62\",\"96f86349e7\",\"da8225f0bc\",\"5b1dbf2664\",\"99c703d180\",\"90a41e8117\",\"9c13dd8067\",\"9593ad713d\",\"ba7bdb84d5\",\"ba80026836\",\"0371428908\",\"77f1705ee2\",\"e04ee60add\",\"5bdd2ad860\",\"c01d8d02d0\",\"84eae707e0\",\"71e76c3649\",\"ce6c86231c\",\"5efb03b223\",\"c8927c1971\",\"e13d0d4adc\",\"fc0ac14a57\",\"4502912ae2\",\"fa82242f8e\",\"c951bc0125\",\"bdd10ad84f\",\"08f5efc988\",\"710c0b3aca\",\"17ab581115\",\"75d7fecd1e\",\"dc561a8038\",\"9f9aa11ef5\",\"945879b633\",\"76d18c93bb\",\"516b6e36a2\",\"56d820065c\",\"b917061287\",\"6ed28561a0\",\"072289ce16\",\"01510c13ca\",\"a9d9d59035\",\"88a6937cab\",\"a84ed39233\",\"244df6179f\",\"bae7d8d66b\",\"dfc708f50a\",\"cc22e4927c\",\"c0c582ecd2\",\"94ea45f6e2\",\"28ca495341\",\"a9b55ee7cf\",\"d6c2084080\",\"cf33a41eed\",\"7886a42c5b\",\"293439cd2f\",\"686901edc9\",\"928379721b\",\"f05e93efd0\",\"cf9bbf6d97\",\"38a512f313\",\"2fc7bb0d84\",\"17017a5018\",\"686901edc9\",\"928379721b\",\"f05e93efd0\",\"cf9bbf6d97\",\"38a512f313\",\"2fc7bb0d84\",\"17017a5018\",\"686901edc9\",\"928379721b\",\"f05e93efd0\",\"cf9bbf6d97\",\"38a512f313\",\"2fc7bb0d84\",\"17017a5018\",\"3f6966efb3\",\"8d77baf64c\",\"3d007a683c\",\"355536a312\",\"d87c1e2711\",\"38d813c946\",\"8dced95d5e\",\"bcb02aa445\",\"5e12739d7c\",\"1f884f3bd6\",\"e21307178e\",\"1ddc3f8c2b\",\"15be35d998\",\"35165e8600\",\"bcb02aa445\",\"5e12739d7c\",\"1f884f3bd6\",\"e21307178e\",\"1ddc3f8c2b\",\"15be35d998\",\"35165e8600\",\"a7cb61d3b3\",\"5b89988cdf\",\"5c134817fb\",\"ee43c68043\",\"46e5f30dad\",\"883186111c\",\"55b93e61e8\",\"606aa1a440\",\"09c854dff2\",\"895379bfa7\",\"8611e8bfca\",\"77e090dc1f\",\"6d3ca7c7bf\",\"b23b790d2d\",\"aac65deec3\",\"fcc9b8d1e2\",\"0bebf8dc7c\",\"cbdae2b591\",\"39f07c78b3\",\"479d90c844\",\"8bbd4265ea\",\"766e4d122d\",\"20609903f1\",\"2bc41c2b07\",\"f131628644\",\"1c7e267b68\",\"f338114037\",\"3dc57e7909\",\"854dc1003c\",\"6893a4795d\",\"88138d18c6\",\"b8cb0dcda7\",\"12d60a980d\",\"fba0c6c682\",\"1f780364a1\",\"48b28eb7ff\",\"a34fe6429d\",\"3efef52e2c\",\"3f56553878\",\"33a796ff33\",\"8c294839d1\",\"8c71de75b3\",\"d1a839d5b4\",\"fbb4c236c8\",\"e6cd25fe26\",\"49eff659ed\",\"8fe6937e29\",\"26a0c1848c\",\"a92abab491\",\"8b36f82c88\",\"d08f4b110d\",\"b5e485846f\",\"d70c96c805\",\"7b1d556386\",\"fc2d15f878\",\"16795d9db6\",\"1d7ac6328f\",\"a14fcfac56\",\"16115a6ff8\",\"e1ac159387\",\"1351d325f1\",\"89a66d398f\",\"d772f14f2a\",\"a5b50d1d21\",\"3b17f3e7d4\",\"025bf1f335\",\"4b03de86a7\",\"9f220677b2\",\"2bcc67db74\",\"502393588d\",\"63bce6ee0c\",\"1827c92b10\",\"eb608854fc\",\"69096ed6bc\",\"79e56af116\",\"e4743ed056\",\"faaf610402\",\"fa36540565\",\"843944ca4f\",\"644779b306\",\"8eeaa88ea4\",\"655d89ad80\",\"58c4910bf4\",\"98b5fac99b\",\"48b28eb7ff\",\"a34fe6429d\",\"3efef52e2c\",\"3f56553878\",\"33a796ff33\",\"8c294839d1\",\"8c71de75b3\",\"285dbf7cdb\",\"f5fc3aeff5\",\"d7a3202e83\",\"8e395573b2\",\"b0216ca0b6\",\"eb7aa828fd\",\"3e95472b91\",\"04f583a71c\",\"65b2f848d0\",\"7e353db159\",\"7e95657f44\",\"96ee1e547b\",\"3fb0c4d79d\",\"3c158c1023\",\"561e3c375c\",\"4c38812b2e\",\"e7da73b52f\",\"a327e6f159\",\"b77c19eb40\",\"041c931336\",\"0204d0f198\",\"69a49d3864\",\"2c50cc41ec\",\"2008d1356a\",\"d9e2f92aab\",\"779e3f4704\",\"a211d59844\",\"fadedd7edd\",\"28c3857846\",\"a84be34005\",\"c30bd20085\",\"211c4e3686\",\"4c0b9aaf0d\",\"b1696a883a\",\"7b7bc3f00d\",\"d284461df2\",\"c898e03211\",\"d44f127cb4\",\"6a0fdcce16\",\"7a55128c86\",\"e4845b07ff\",\"ab49ab7c67\",\"6800f96038\",\"d8f84ed5f4\",\"8cbef57ad2\",\"6c2d474420\",\"f0c9022bd3\",\"668419995d\",\"a6af44a270\",\"5aa81b338b\",\"67ed50fee3\",\"8d2902e2c3\",\"1ebd60798c\",\"96599ed7ad\",\"19643fb874\",\"248933ecd1\",\"5aa81b338b\",\"67ed50fee3\",\"8d2902e2c3\",\"1ebd60798c\",\"96599ed7ad\",\"19643fb874\",\"248933ecd1\",\"d3b8ebf420\",\"2e2795ce07\",\"2487a543d3\",\"7cf24117da\",\"666f09068b\",\"be1203f508\",\"ca53e2ff30\",\"e24fd78d90\",\"d9536b9f2d\",\"509803555b\",\"9374045001\",\"456632160e\",\"692c78af24\",\"7a5f365a0b\",\"3f420125ec\",\"793aad08f8\",\"973aa7260f\",\"ebe9565816\",\"2c28e1ecf3\",\"e7941c0e21\",\"80df5e0c00\",\"3f420125ec\",\"793aad08f8\",\"973aa7260f\",\"ebe9565816\",\"2c28e1ecf3\",\"e7941c0e21\",\"80df5e0c00\",\"328f605071\",\"b0f1fbbd7c\",\"41115634c3\",\"bd2f85a625\",\"ab22565abf\",\"af50b3ca09\",\"77689142e1\",\"87dbb9b765\",\"50c814e61c\",\"d4a90c7bf6\",\"2e8e004273\",\"843fb8866b\",\"500c242b61\",\"a0aac39c7e\",\"524a39c5d3\",\"b60c850fab\",\"2ca7740114\",\"4ede2293e3\",\"f3e7d01c8f\",\"6d0083c116\",\"b63ec2802d\",\"23b84d227c\",\"5937099093\",\"dd64be6dd2\",\"bcf928ce2b\",\"8d976515be\",\"0d9077777a\",\"3610323e97\",\"e004c8ab7f\",\"dc9fe5fa2d\",\"452151dc77\",\"1036b25697\",\"312127274a\",\"63d589a69d\",\"2dca5c2a88\",\"14f95e2ed6\",\"a9404769a1\",\"6b3a56f301\",\"d4390f883d\",\"5cffa03fc8\",\"19ac2901f1\",\"a92371453f\",\"e368d82258\",\"b0a9732af0\",\"a438a0aa8b\",\"dc2338c41d\",\"0274086974\",\"8a458f2950\",\"30d8b3d134\",\"e3d9a14865\",\"929d98da03\",\"ffd39e3fcc\",\"d570f7eadc\",\"35e0ce4b2f\",\"232503bd7c\",\"e2b2c5dcab\",\"1ba331e8f3\",\"175f9a0253\",\"15f8c52302\",\"e0b14cd44c\",\"2306c65526\",\"13f63c4323\",\"128831e523\",\"400c07b4c8\",\"c95f32cac7\",\"22264e04e2\",\"3a570934d1\",\"94493935c9\",\"8d4c0ad0cc\",\"b511e5fc97\",\"14f95e2ed6\",\"a9404769a1\",\"6b3a56f301\",\"d4390f883d\",\"5cffa03fc8\",\"19ac2901f1\",\"a92371453f\",\"efea521519\",\"65a923bf03\",\"2d922a40df\",\"08a69e7909\",\"4b1c99cf10\",\"a84eaf64dd\",\"49a31c2842\",\"568387bad0\",\"3ec6d869c6\",\"63b9865bb7\",\"0541e8d932\",\"cb9c63888b\",\"118c72a4ba\",\"c0da0c0fdb\",\"fa4aa06c08\",\"a316b91122\",\"5984f564cb\",\"e60ce4dc1c\",\"869398cd21\",\"f55d31de1c\",\"a74c198234\",\"31fd004946\",\"063174f0c4\",\"0ee1d5cf1f\",\"8d6aae3e95\",\"93b08a74bf\",\"8abc78d75e\",\"14daca94c1\",\"ff2d668a5f\",\"24c73f014c\",\"17fc850c24\",\"3052e812b4\",\"be35c2727e\",\"c8bb39e42a\",\"bcaa37ca01\",\"05dbb727bf\",\"2585720033\",\"058db19e46\",\"f4855733e2\",\"6f87812a65\",\"53c632aa73\",\"c3553bf972\",\"5e4ac578d1\",\"02300238f3\",\"ccc3d911dd\",\"72e2cfd268\",\"3bccc6d76c\",\"5e189150ac\",\"4492754e27\",\"c2f63ad3e0\",\"b378a83a39\",\"76396a8ea7\",\"783ad626b3\",\"1e25ee134f\",\"09c35d4f0c\",\"e62ad210cb\",\"63af4a48dc\",\"3a88c65ac9\",\"70a45843cd\",\"adab8be9f0\",\"4999f13045\",\"aa6030f114\",\"d4ce448083\",\"7698b93615\",\"74d0507b7f\",\"a2f6a7bd18\",\"5a5a20e7ec\",\"5dd71729bc\",\"ce4379d4c8\",\"49f3f414cf\",\"846e84547f\",\"5351d42b7e\",\"1faa669055\",\"ea87c46dd6\",\"95dcbcf41a\",\"08d840e4e9\",\"59e19a651d\",\"31d3ce28e5\",\"ba95df87f9\",\"0950ce2743\",\"99b85c99b9\",\"e98da12269\",\"4720da4fcd\",\"0870d111d3\",\"1b492c754e\",\"008db9bff3\",\"2573dc72c4\",\"e33f7e6059\",\"8439b30dc3\",\"e79389fbcb\",\"e844eea0dd\",\"51d30e4318\",\"9dcea6877e\",\"2eecaed222\",\"e70803f392\",\"301f8d87f1\",\"6ed1eb504e\",\"1954f0e597\",\"ed57fc512a\",\"5b50afac07\",\"ad26490001\",\"ce5a4c9ec1\",\"60e87b0c06\",\"2c731618cd\",\"b88d095c23\",\"1efe0b5eae\",\"2c57087db1\",\"51cfe1da75\",\"bf213001ff\",\"c4dd197a22\",\"4bf6d2af85\",\"961ffc53fc\",\"1efe0b5eae\",\"2c57087db1\",\"51cfe1da75\",\"bf213001ff\",\"c4dd197a22\",\"4bf6d2af85\",\"961ffc53fc\",\"2f94f12b06\",\"d21564eb30\",\"3109863273\",\"4b4efd4721\",\"be360f7531\",\"4c7a74171e\",\"f2f9ba4911\",\"66ad318333\",\"cb212bacb4\",\"4c2eba2a77\",\"2159185f40\",\"46ce913df2\",\"5c78125807\",\"0ba76f8d66\",\"0adcd5ee26\",\"6f4d8e9e50\",\"396f558cc1\",\"9bd177ddbe\",\"6d6f861e46\",\"2794f03d78\",\"157696bbb0\",\"471c471141\",\"a1084d3250\",\"5f8fdde2ff\",\"a4420df851\",\"effb35ff77\",\"7a197bc253\",\"9d6dba49a9\",\"bbc99c559e\",\"ea0693075c\",\"f1fb3a504d\",\"fc71903159\",\"00e083f1bc\",\"21a058b70e\",\"35ef7ea430\",\"bbc99c559e\",\"ea0693075c\",\"f1fb3a504d\",\"fc71903159\",\"00e083f1bc\",\"21a058b70e\",\"35ef7ea430\",\"a177620fea\",\"db19a5c70f\",\"d24fc60558\",\"30cf5c9114\",\"8e3a649025\",\"ab230d8438\",\"a28d0ae0af\",\"157896717c\",\"f4b34d77c7\",\"955fc3d3f5\",\"4295cdacd4\",\"47bbf5d73a\",\"f827bdaba6\",\"739305a055\",\"bbc99c559e\",\"ea0693075c\",\"f1fb3a504d\",\"fc71903159\",\"00e083f1bc\",\"21a058b70e\",\"35ef7ea430\",\"4346a9f348\",\"91b5741fac\",\"53bf3b3b73\",\"250687ae96\",\"3d2511a3fb\",\"32bb446baf\",\"1ab58e588b\",\"4401ea7606\",\"cf0738d4b0\",\"c3a77bc3ba\",\"729aa93b9b\",\"7c77fe5434\",\"bfa892d028\",\"741d2ad51f\",\"776416ca1b\",\"b966f2526f\",\"c67af611ca\",\"9d1b9bc8ba\",\"bc6592cab6\",\"1ebf5b166a\",\"a4baa563d2\",\"66fc3d15b5\",\"22b67aba6a\",\"d3efd7d003\",\"a9b3051aca\",\"e2c5a1edb6\",\"df34221c13\",\"7b5fad27b2\",\"a1b4a4b914\",\"dc4bfa0e7f\",\"ab37223787\",\"e3405fca25\",\"4e61ff89a4\",\"3ac11b1d44\",\"d221d5978b\",\"6e8c013cb1\",\"2c78bdb018\",\"062feb9bc9\",\"391e051c10\",\"fec4805165\",\"512a969903\",\"fbe1082083\",\"6e8c013cb1\",\"2c78bdb018\",\"062feb9bc9\",\"391e051c10\",\"fec4805165\",\"512a969903\",\"fbe1082083\",\"a0f7b6506c\",\"2c011983b8\",\"cbdf49abe0\",\"bbb92226d7\",\"d015d89c38\",\"ac0e159227\",\"cc2a6224f3\",\"ed01363927\",\"f32093b2ab\",\"3c95ba1f68\",\"a7822fd4aa\",\"4c7d561f21\",\"ca286d928a\",\"4cc8e2703b\",\"bea78c42aa\",\"a35a4ee39f\",\"c50bc6939b\",\"feb6d3c5bb\",\"f0614505d3\",\"e9e0479f30\",\"2e5e83dd74\",\"dd81f3f8ab\",\"5836d88a33\",\"ab1b99fc6d\",\"4809a32736\",\"be47dff976\",\"25a7fe1bb4\",\"401033677a\",\"033bd51aa2\",\"e2a4aa9a62\",\"330eb0057c\",\"7d3fa80af2\",\"bce0bb6f2e\",\"c28e993175\",\"a5032d7f0f\",\"715a27168c\",\"96e36e386f\",\"892e3bf6ea\",\"c109b8fbf4\",\"194bedabe6\",\"19ac87c636\",\"e75fa92700\",\"c7577d4976\",\"f2e4afdd8e\",\"50b4da19e8\",\"7cd57cd872\",\"87c58e5fec\",\"a41c003bf1\",\"5e007b6967\",\"22be5b387d\",\"a07c2f52b0\",\"c85b8ef019\",\"ef136193ac\",\"802ce171a4\",\"21d152c420\",\"9643de073c\",\"b48d0a6779\",\"883df6eb04\",\"5e74dcc707\",\"d497e16841\",\"2f25066016\",\"3dba84d4da\",\"110f8c4dca\",\"b48d0a6779\",\"883df6eb04\",\"5e74dcc707\",\"d497e16841\",\"2f25066016\",\"3dba84d4da\",\"110f8c4dca\",\"e77a7c475b\",\"9ddc04bf6f\",\"cf48040493\",\"127f043cf4\",\"dfd4920036\",\"6e9de48567\",\"f760d2f93a\",\"ce4ea08afe\",\"281d71491c\",\"a9e0c07f36\",\"fb336b8401\",\"5c4b96cb7b\",\"8bc2ca6b02\",\"a3a508231b\",\"89fb1a48e6\",\"2a89af19f8\",\"88a6d912a6\",\"c1cdab56bf\",\"8c7ac3a442\",\"33998146da\",\"0ccadca088\",\"e35b1024a4\",\"62c96a5234\",\"ed1fb60224\",\"dd1ba4ee29\",\"7fed3470fa\",\"ae4ccbf574\",\"d12b79df2b\",\"c4f2fbd1b1\",\"56781537d7\",\"938e6de01b\",\"77aba8575f\",\"eaebaf188b\",\"ca6a80704e\",\"c3df8ccd5e\",\"c4f2fbd1b1\",\"56781537d7\",\"938e6de01b\",\"77aba8575f\",\"eaebaf188b\",\"ca6a80704e\",\"c3df8ccd5e\",\"948c3a39f0\",\"b344be3282\",\"7b54b1b48c\",\"caa22aad4d\",\"beb1588f7f\",\"26f4f7e1d8\",\"6f80897ac4\",\"6905f3604f\",\"e567073804\",\"0c5c146992\",\"5b525ce6ed\",\"b1737281ba\",\"954f685217\",\"1fb77a1e4c\",\"bd29b884b3\",\"16cf90942f\",\"d4981e67ff\",\"a3819b306a\",\"4199fc174e\",\"40ac4b2348\",\"fc06c1692a\",\"3b7fd17093\",\"13582987e1\",\"e19f4d1344\",\"6eb69c6683\",\"195be4c217\",\"cad872c816\",\"af47c2e105\",\"31c1d79a72\",\"612b3028e8\",\"499813415c\",\"3f3b9133af\",\"0a1abb7414\",\"e5fb398edc\",\"550fa860fc\",\"bde17a0ab7\",\"c336014ad4\",\"1d7ffb8040\",\"d5cb4e090a\",\"7021938dc6\",\"1b08cdfb87\",\"ea99096977\",\"bcc0b7c8d9\",\"3128f486cf\",\"5420f9a306\",\"279fd194dc\",\"70a36c2806\",\"b7bd72b4b7\",\"d65ed1e9a1\",\"9996359f67\",\"bfb46c6635\",\"c84173c0e0\",\"3724221adf\",\"30855c2f8b\",\"1d4ddb0891\",\"506a40f0da\",\"caa1a78569\",\"0a3ef63443\",\"a70c8224af\",\"b64e34a8df\",\"42e31a6875\",\"6eb7cbece3\",\"c90f5b1107\",\"637ec8391f\",\"ebf2dafc6d\",\"b26a8a8681\",\"56bd143c6e\",\"d05aace6ff\",\"171855f499\",\"4b9991f0f9\",\"2423f360bb\",\"08df5bb7f6\",\"ae44912ebe\",\"decf861dc7\",\"397d02b267\",\"88f3483b8d\",\"f568a00256\",\"4d707de6d7\",\"82b09bb32b\",\"a637140e92\",\"ff8ff656e9\",\"f1cf73a84c\",\"760252fe41\",\"67ea72b6b5\",\"4ffe47634f\",\"5b899e7b67\",\"1b304b4758\",\"9bee8bfe0d\",\"b0182b138d\",\"dd61d5d1e5\",\"52ec062b8a\",\"ef9b7e0001\",\"53d059a4c3\",\"0ee14e3852\",\"293c27d0ad\",\"c1700ff221\",\"042ef7cc14\",\"9f56cd79d3\",\"ef9b7e0001\",\"53d059a4c3\",\"0ee14e3852\",\"293c27d0ad\",\"c1700ff221\",\"042ef7cc14\",\"9f56cd79d3\",\"d05854b162\",\"7110d17449\",\"5f9a77dde1\",\"45518446a2\",\"f24c2a51ab\",\"8ee6886a07\",\"bc1869d883\",\"8518c266e6\",\"78be23e044\",\"bef9a15328\",\"77a22926c2\",\"4817a0ae64\",\"a9e9815986\",\"3fe7c85122\",\"8518c266e6\",\"78be23e044\",\"bef9a15328\",\"77a22926c2\",\"4817a0ae64\",\"a9e9815986\",\"3fe7c85122\",\"0cf213889f\",\"b7f0ac6a9c\",\"78fe012198\",\"57cc03b47c\",\"a0fec86c52\",\"a91c584d1a\",\"62be265056\",\"3e04329658\",\"0d86d8af4f\",\"e3de02c565\",\"cffdb01fd9\",\"df98830367\",\"d55d362847\",\"7162dd95b0\",\"f85af997d7\",\"1564cdf1a1\",\"127bfe1537\",\"03d128a231\",\"1e0ef8015d\",\"62de5b2437\",\"75b63208c3\",\"d9750f693a\",\"c0e5a60886\",\"c9bf822985\",\"2aa31bbed7\",\"16347af4b1\",\"ad9a808548\",\"ce2450c4d4\",\"2966db1718\",\"5ac2cbccb1\",\"619b41c6c2\",\"b6ad8aecc2\",\"e895aa5a86\",\"1382524b02\",\"94b115ab94\",\"aa3b844bca\",\"338d75a53e\",\"d81d1be2c6\",\"0281c1276e\",\"557a5a0ae7\",\"b149c5a4e5\",\"d77f097db4\",\"bcffa6d2d5\",\"38fec68104\",\"2c3a77fbfd\",\"fa5a0d5ee7\",\"8a2e332e91\",\"ab8e84c482\",\"6ac7e773c0\",\"5363693fe7\",\"fc8d63861c\",\"200e1142d2\",\"f712f3aacd\",\"8fbe03674d\",\"f053eb488b\",\"dfa8ed614a\",\"b139b3f8be\",\"5a4ac8d1bf\",\"24e1e86ac0\",\"a7402cf241\",\"1ab4509974\",\"fcb15c4b51\",\"c128dec36b\",\"64a5f62bea\",\"bfe67b6734\",\"546941417e\",\"ca3a43f806\",\"716c052cb6\",\"05218c3a09\",\"f1c588b6ef\",\"64a5f62bea\",\"bfe67b6734\",\"546941417e\",\"ca3a43f806\",\"716c052cb6\",\"05218c3a09\",\"f1c588b6ef\",\"841b1d2583\",\"be78434d86\",\"9594b591af\",\"efaabb8a39\",\"233da64811\",\"9ac0686fd3\",\"2b83846ccd\",\"29a067f3b7\",\"30cba49c44\",\"1556aea6a7\",\"78b63164c7\",\"0fbf1bb858\",\"9370d15e5d\",\"cf5da3f580\",\"d86c535936\",\"30a599a750\",\"c265a9f5e0\",\"639c4322ec\",\"415c5f3370\",\"1ddc5dd60a\",\"81a861f8d9\",\"d86c535936\",\"30a599a750\",\"c265a9f5e0\",\"639c4322ec\",\"415c5f3370\",\"1ddc5dd60a\",\"81a861f8d9\",\"cfa4e1ceb6\",\"b43368b40a\",\"e40b9466f7\",\"130a2a9cb2\",\"f34e6e953a\",\"87a7c36035\",\"1b788cb3d3\",\"2d913b5fda\",\"14cf2421df\",\"97d7c6ea0f\",\"b6c35c8232\",\"d8dae6fd10\",\"54ee624022\",\"032ae919e7\",\"3d7e128b19\",\"16cd595d30\",\"7da6cd9852\",\"a4859b587c\",\"23ac481fb8\",\"9942707a94\",\"7461159078\",\"15f1ee1dfb\",\"ab5ed281fc\",\"df4266d9c6\",\"2e9e639fcc\",\"1777b538c9\",\"5cbb32c753\",\"f63ff73d44\",\"85ed596ee0\",\"82f3d90c43\",\"ebae0dafe5\",\"4c5b5c081b\",\"aa6fb013c8\",\"d3cf8ee2d0\",\"803503e21a\",\"83e6b8782a\",\"96fbf8491a\",\"9f77ce28bc\",\"74e8a3bf98\",\"2f6ed80232\",\"39fe242f8f\",\"a4972cb8ba\",\"db0c2ba431\",\"e3bf25ee53\",\"b0baf50efa\",\"ce08f82d7c\",\"07732715bc\",\"37907ecf26\",\"2dc9961442\",\"db0c2ba431\",\"e3bf25ee53\",\"b0baf50efa\",\"ce08f82d7c\",\"07732715bc\",\"37907ecf26\",\"2dc9961442\",\"9729c917b7\",\"a2e2b57e9d\",\"7efde0cb7e\",\"7d9864b019\",\"3877e847d0\",\"59e1e8121a\",\"48cb990105\",\"fcd0e256df\",\"8a3ecba25b\",\"858d7bfa52\",\"377b52da4f\",\"c809e45153\",\"bc5fddd751\",\"ed61541798\",\"775be28601\",\"a9f75c586e\",\"9be7d1a916\",\"84b3655782\",\"6b20545ea0\",\"92d751ba8c\",\"1bf884be53\",\"dc13dc0c88\",\"d58add9b36\",\"aadd94cc8c\",\"069451b064\",\"74bd3c257f\",\"53d6ac325f\",\"8d6b87c5bf\",\"e547b13da1\",\"991b7f706e\",\"b31d80198f\",\"79101c9c55\",\"2f2419791e\",\"34c775de0a\",\"2467043043\",\"6965db8479\",\"962f65898d\",\"a5a4080610\",\"233bdcf2d9\",\"47389de335\",\"2d218b4130\",\"96152c0c30\",\"51334d8b47\",\"fad21a32b4\",\"5f9c3227ff\",\"318fc2b634\",\"a6c53f8dd9\",\"ffcb06f0ed\",\"85ed689313\",\"15b377f573\",\"936a88e8a4\",\"706efbc848\",\"7189a57d79\",\"e7e87efbdf\",\"12a723a321\",\"753bbedba3\",\"59126db2b8\",\"b5ace0e22e\",\"fdc06ae1a9\",\"9463747f0f\",\"4f46bae4bd\",\"0543034d28\",\"2a077677e2\",\"505ec3546e\",\"017ad4c276\",\"565e1b84a0\",\"176fc2e372\",\"72e21a21a8\",\"54be3b22dc\",\"fe4518e7f5\",\"505ec3546e\",\"017ad4c276\",\"565e1b84a0\",\"176fc2e372\",\"72e21a21a8\",\"54be3b22dc\",\"fe4518e7f5\",\"7526bbf830\",\"93dd02efa1\",\"05b1086b23\",\"b0a7276dda\",\"c855784d99\",\"cfb0a73bba\",\"3ae9ff7503\",\"bb8454d360\",\"56a591b837\",\"6408b6fb65\",\"3fcf5d9269\",\"40af263f69\",\"618b53e9f4\",\"a3b637c95f\",\"46df6ad730\",\"8b6c2ecc5c\",\"37f3327585\",\"5ee5c6e987\",\"e094fd8603\",\"269f2be244\",\"0290d50adb\",\"46df6ad730\",\"8b6c2ecc5c\",\"37f3327585\",\"5ee5c6e987\",\"e094fd8603\",\"269f2be244\",\"0290d50adb\",\"7ba902807e\",\"6faf9d4064\",\"d65fc09f08\",\"5f3b0ed992\",\"286e28820e\",\"8928e392d4\",\"a63a72b787\",\"12a2e78b43\",\"19d1519039\",\"f3681efd3a\",\"bc8b672663\",\"f94b8026da\",\"f5edb154c9\",\"a33044ddaf\",\"bf2d527f61\",\"67a6d5c055\",\"d15eeefbec\",\"521543d1fd\",\"22cf659e49\",\"7a01a097d6\",\"22399f2909\",\"bf2d527f61\",\"67a6d5c055\",\"d15eeefbec\",\"521543d1fd\",\"22cf659e49\",\"7a01a097d6\",\"22399f2909\",\"462c5dcb31\",\"954a83e4c9\",\"29e05ab5fb\",\"fc44042a19\",\"26702b5c7e\",\"849abacdc0\",\"4b8d3cca13\",\"431e04bd89\",\"4f82211051\",\"70ab53d5aa\",\"72d8dc2ded\",\"47468d8606\",\"79374d3dd6\",\"65247cb65b\",\"a56d7eae57\",\"6039e59aa8\",\"eebe6fcdfa\",\"225160298b\",\"6e172968dc\",\"c77cc34d1b\",\"c7780d5b8a\",\"dba229abca\",\"a4be898b1e\",\"2b51d22ac8\",\"3b85a528ff\",\"0c4b5741be\",\"685388e686\",\"a3d0f5aab8\",\"dba229abca\",\"a4be898b1e\",\"2b51d22ac8\",\"3b85a528ff\",\"0c4b5741be\",\"685388e686\",\"a3d0f5aab8\",\"041c885fe1\",\"d838fcc4b4\",\"648a6415b3\",\"c875a3e0de\",\"a96d15078b\",\"e26f4b46f4\",\"e69d6cfabc\",\"cdd7066ab6\",\"0f553faa8a\",\"a675464f53\",\"8c7bbc46b7\",\"41a72c9e50\",\"4d6785819b\",\"448503a8fc\",\"6f62053954\",\"968c379462\",\"75d88e3111\",\"508b90c579\",\"8bec24f7d6\",\"e7ccb96a9f\",\"11250503e8\",\"c16e227ae3\",\"d369b28d25\",\"f3572029f2\",\"38bec93db9\",\"537f1be56f\",\"6cc1b9d10e\",\"fff44394ec\",\"0119cd659a\",\"44559ea854\",\"ed449c5fc6\",\"b208790165\",\"4f879fc451\",\"4f890c0ca4\",\"5e6f8d5825\",\"1838af2cd0\",\"ad7d694b98\",\"6872a0f1fd\",\"5609d10874\",\"07b2b239c1\",\"a4e89e80ee\",\"4971cb0dc2\",\"6f62053954\",\"968c379462\",\"75d88e3111\",\"508b90c579\",\"8bec24f7d6\",\"e7ccb96a9f\",\"11250503e8\",\"6f62053954\",\"968c379462\",\"75d88e3111\",\"508b90c579\",\"8bec24f7d6\",\"e7ccb96a9f\",\"11250503e8\",\"efc92ac829\",\"6cb552cf1c\",\"a8fbeda979\",\"3d5161ae91\",\"ed370b906d\",\"ab85c9ba21\",\"cd291ac94f\",\"d2d05428e3\",\"03ee614a3c\",\"7c32493e8b\",\"7b6244c7ff\",\"75a5043b6d\",\"30c2621aef\",\"2a61af7169\",\"185ee67ccb\",\"ab36faddd6\",\"d760502058\",\"bb1a92c2d1\",\"72fcf90395\",\"dbcd91f39b\",\"c9332a9cbe\",\"185ee67ccb\",\"ab36faddd6\",\"d760502058\",\"bb1a92c2d1\",\"72fcf90395\",\"dbcd91f39b\",\"c9332a9cbe\",\"185ee67ccb\",\"ab36faddd6\",\"d760502058\",\"bb1a92c2d1\",\"72fcf90395\",\"dbcd91f39b\",\"c9332a9cbe\",\"9a5afe8870\",\"da5d9434df\",\"fe05655aa8\",\"caba960151\",\"d2a5393ea3\",\"9236dd503a\",\"762f39f869\",\"2c942afec5\",\"90d51b02ec\",\"09403e7c5a\",\"d2c905bd94\",\"26a3dd0506\",\"73cd289128\",\"1fe571c7df\",\"2c942afec5\",\"90d51b02ec\",\"09403e7c5a\",\"d2c905bd94\",\"26a3dd0506\",\"73cd289128\",\"1fe571c7df\",\"9e0fb328ea\",\"cee252ae04\",\"2e28e83647\",\"7aefb89784\",\"f3f54f53c8\",\"ef1451e122\",\"2c5c1ac03c\",\"0c3ef9d5ee\",\"fb89003421\",\"3ab776d969\",\"7467282f98\",\"3ccaf6347f\",\"a3a4a1371f\",\"0924dd02aa\",\"912c8c0325\",\"b4cae86bd4\",\"56023ad90d\",\"cb02eede3b\",\"ac414f2369\",\"89be897a37\",\"8faf082f88\",\"912c8c0325\",\"b4cae86bd4\",\"56023ad90d\",\"cb02eede3b\",\"ac414f2369\",\"89be897a37\",\"8faf082f88\",\"51434d63f2\",\"177602aeb5\",\"29e020dccb\",\"ef03207dec\",\"619aaa8506\",\"d077031136\",\"e404d654a2\",\"22fb286252\",\"bf351427c8\",\"4c53581bb0\",\"f41d126f26\",\"4a82575e41\",\"da53081b3e\",\"87ce999cca\",\"7bf7747b66\",\"4a37db338f\",\"feb790141a\",\"7da0ca6713\",\"94cfa2f071\",\"56444be198\",\"8b688d5415\",\"fe27d3a991\",\"d70ee145ff\",\"0b4d31e8cd\",\"f560806612\",\"ed6c1d9587\",\"4b71ca6adf\",\"6cb779b000\",\"26d91dd554\",\"8abbe28434\",\"42679e2e49\",\"49db24c617\",\"d3fc1acd63\",\"a22550d68e\",\"a422d2cca3\",\"c7d3dd9576\",\"6d6b3d2364\",\"b7269135ec\",\"6ab952655c\",\"1272560197\",\"3b41fb8b30\",\"c124e12642\",\"480d69debd\",\"6abc93df44\",\"5d3f5de2b3\",\"07deb810f5\",\"c8e1d737be\",\"82e42c3641\",\"2799d790e8\",\"b7d8ea129b\",\"edc9144519\",\"5b0b98364e\",\"2816db0ac0\",\"680a1e3536\",\"3a6a9972e0\",\"3a6daf8234\",\"fe27d3a991\",\"d70ee145ff\",\"0b4d31e8cd\",\"f560806612\",\"ed6c1d9587\",\"4b71ca6adf\",\"6cb779b000\",\"20748967a3\",\"70c5506dbe\",\"70852dc04a\",\"0a59beefed\",\"26f7602942\",\"f52e459374\",\"2d68051ce7\",\"571ab743bd\",\"554bf91c17\",\"d53a08d0ea\",\"502ac91679\",\"319c612e17\",\"b89628c43f\",\"a5fb1c076c\",\"a671f47633\",\"155db12230\",\"0bf2a12ae0\",\"a7c8edbde4\",\"3948549727\",\"e0ed55fb5b\",\"460d6e922c\",\"6d87529937\",\"9fe070a6aa\",\"e565ccfbe3\",\"61cd365c5e\",\"c66aced1a9\",\"2c9afd856b\",\"2753aa4472\",\"a2c18e2a01\",\"09f9615892\",\"eb3035e6c4\",\"2b8da59bd9\",\"848d8f17eb\",\"29f2999e26\",\"e305fcdf6c\",\"a2c18e2a01\",\"09f9615892\",\"eb3035e6c4\",\"2b8da59bd9\",\"848d8f17eb\",\"29f2999e26\",\"e305fcdf6c\",\"b54a999031\",\"43d83ae6a4\",\"efb003c753\",\"0f97b65b33\",\"7378c72f53\",\"9e4f2e535a\",\"d45b576d26\",\"a75a16f173\",\"820726c4be\",\"2bf472959e\",\"3f7e7bf8ed\",\"bde28ebb34\",\"e028f2b100\",\"eea9b8f8bd\",\"37c0e6b724\",\"35725b2486\",\"c7423be7a1\",\"34a00d61a9\",\"a8c5471cd8\",\"129a33fa19\",\"d07ee7d054\",\"cab8d05648\",\"2be576ac60\",\"9949c7a56d\",\"7f74671ad5\",\"77d36dd6a0\",\"d31ae2ae70\",\"dbb285a7bf\",\"d2f134f005\",\"43e16fb0a3\",\"650396b358\",\"7bf9483e00\",\"9054961c8b\",\"e19163a51e\",\"95405da5ed\",\"e2a5249bde\",\"5d96862a65\",\"d3559aa413\",\"dd079b60c1\",\"ec8219889c\",\"85c55e9c61\",\"d51a147320\",\"340f481263\",\"e80feef568\",\"9407793c53\",\"5c4b1cce37\",\"eae9c65974\",\"eb5c261ada\",\"10768861e8\",\"8109055431\",\"2aeeb0e0f5\",\"801aaae7c3\",\"57dbf1f42d\",\"29d72fd338\",\"2768b93705\",\"04b920ae02\",\"ab92906b58\",\"603457dbfa\",\"a9a2c586b2\",\"1484dfef6d\",\"625f1feb5a\",\"0452420b9c\",\"906cda7505\",\"834b474d43\",\"ad3ee953b5\",\"a263193399\",\"d9aba46241\",\"f13eda2f15\",\"6766994727\",\"f64e7acf6d\",\"fa5bb1b470\",\"5a3166f271\",\"fd0d831ecb\",\"a8bafdd143\",\"d94dc975fd\",\"2cd885e50c\",\"068b7f4326\",\"7d04b1a201\",\"d00faef97a\",\"c1f2f33223\",\"2334695843\",\"1df021a488\",\"55dd15b735\",\"afd14d1b06\",\"712c27e48a\",\"2c6fb1f5c6\",\"1858d38306\",\"44577e6b39\",\"0a3aacb9b5\",\"510c3b4966\",\"db1be4342f\",\"1ab763274a\",\"2c44ce1de9\",\"b90bae83b1\",\"39eb7599e5\",\"6f5bac9176\",\"38c94cca0c\",\"66d065b9d0\",\"67bee6fe81\",\"aa80a43d46\",\"44c19b6c2c\",\"e7ca22ac05\",\"7d538f8d89\",\"0d60045797\",\"3d1578045b\",\"030432b46b\",\"4fc484b155\",\"c47a50cb04\",\"1cffeb38a5\",\"abef1fe550\",\"09d8788971\",\"6009ef5220\",\"030432b46b\",\"4fc484b155\",\"c47a50cb04\",\"1cffeb38a5\",\"abef1fe550\",\"09d8788971\",\"6009ef5220\",\"51cb6445c8\",\"0951ac09b4\",\"401a597ac3\",\"d3690a7431\",\"c5645b71d6\",\"7db18f6620\",\"86be3731a8\",\"ee50b6191e\",\"98b450978d\",\"403120acb1\",\"44214648a8\",\"007ce53d00\",\"0170071526\",\"a2edeca7c2\",\"593ff79d8d\",\"8418399855\",\"aa8adf5f33\",\"52e08dd591\",\"bfa3cb495b\",\"260fc219a1\",\"5e701058c7\",\"949cbd76ce\",\"b9ec51cf17\",\"20b1e8cc19\",\"fff45e7832\",\"b006ed36e4\",\"df11fca039\",\"9647e2b79b\",\"8d34c4440f\",\"c18f1ba677\",\"c5bf7372de\",\"ad42a957ca\",\"bc536e4c08\",\"12a16f5b92\",\"9265f3b5ec\",\"e1cf8c3208\",\"98109b1310\",\"e00c5ebda9\",\"a1b16d7c5a\",\"31129d1e93\",\"7844a3df47\",\"4590c9fad9\",\"e31e21437e\",\"7b91bc5873\",\"fe3f5cd7c9\",\"e761634fde\",\"de96d15dd6\",\"f584368ac6\",\"640b7517be\",\"6bfe1e9f5a\",\"95bc303f38\",\"41869b0088\",\"48fe42c12b\",\"2f92ca9228\",\"5f725d1eba\",\"93161cf50f\",\"79d7d8cf1d\",\"d61559ad06\",\"2d18217480\",\"664acd1f68\",\"2b18dd1da8\",\"6179b2b5bd\",\"47ec1c1fd9\",\"79d7d8cf1d\",\"d61559ad06\",\"2d18217480\",\"664acd1f68\",\"2b18dd1da8\",\"6179b2b5bd\",\"47ec1c1fd9\",\"cd0e1bb4c9\",\"fdbaa0c1ff\",\"33e2feb3dd\",\"90bf00703a\",\"97d909ead7\",\"1bfcef0614\",\"74e2d90262\",\"45e7b7f542\",\"d3818cb509\",\"dc1562bdf4\",\"245b7e6e8c\",\"9c9a74bb80\",\"22bf82df1e\",\"a043e784fa\",\"c02fde7d3b\",\"8f577183c4\",\"aef5c11221\",\"ebb0dea240\",\"757d0cf852\",\"5f3a735aaa\",\"8e2ecfd05f\",\"c02fde7d3b\",\"8f577183c4\",\"aef5c11221\",\"ebb0dea240\",\"757d0cf852\",\"5f3a735aaa\",\"8e2ecfd05f\",\"1543b0892d\",\"5c281eef31\",\"5c7e04a45f\",\"aa72e07753\",\"fb75f625ce\",\"4a49c5baa1\",\"936c34248d\",\"6d49069bbe\",\"d708d636bb\",\"e4592bc540\",\"24f24e608a\",\"12c0d6928c\",\"762de80874\",\"65699aef09\",\"210151ff05\",\"0debbe5021\",\"28637454d9\",\"267c807c08\",\"424bedc8f1\",\"0024e72c02\",\"183b3630af\",\"210151ff05\",\"0debbe5021\",\"28637454d9\",\"267c807c08\",\"424bedc8f1\",\"0024e72c02\",\"183b3630af\",\"3081cfc78d\",\"c35e04dcca\",\"4313f54a5b\",\"78a82560ee\",\"a2a4678c4e\",\"65c736a3bd\",\"d6bb98dce0\",\"eea135cd08\",\"70e14d7f43\",\"514e2ff498\",\"674711f7b8\",\"e74104bd8b\",\"75925d34bd\",\"8364db8ff0\",\"eea135cd08\",\"70e14d7f43\",\"514e2ff498\",\"674711f7b8\",\"e74104bd8b\",\"75925d34bd\",\"8364db8ff0\",\"45cc3882bb\",\"db6bdec71b\",\"78448234b5\",\"dcd366011e\",\"39d77c3128\",\"971e56be67\",\"4ad56ede64\",\"45cc3882bb\",\"db6bdec71b\",\"78448234b5\",\"dcd366011e\",\"39d77c3128\",\"971e56be67\",\"4ad56ede64\",\"a3140128d5\",\"59c05ac528\",\"6105f1c3c9\",\"606b3a4b6f\",\"78f673d3a9\",\"874014cb6b\",\"2960e13458\",\"dcd267b109\",\"47c1974902\",\"35c565b12b\",\"3d0802dfe6\",\"6c60548f73\",\"7516c824a5\",\"1a81836fcd\",\"dcd267b109\",\"47c1974902\",\"35c565b12b\",\"3d0802dfe6\",\"6c60548f73\",\"7516c824a5\",\"1a81836fcd\",\"5da3f74da6\",\"831efdd1ac\",\"ef30a17b6d\",\"d416a97434\",\"5392cdfd88\",\"af476d66b3\",\"93426be562\",\"19a51060dd\",\"8ecfd191cd\",\"db5f6014cc\",\"68b40fca3e\",\"5acb5733c0\",\"53222787a6\",\"3cd22e45a9\",\"75e287e376\",\"9137088ffd\",\"26838d555e\",\"66bbb0489a\",\"7a27aa79a8\",\"a8d2b7e65e\",\"757693924c\",\"809d548a79\",\"36271025b6\",\"02a0628cce\",\"3249be71b6\",\"89623cef1f\",\"f448edbbda\",\"05324bf0e4\",\"75e287e376\",\"9137088ffd\",\"26838d555e\",\"66bbb0489a\",\"7a27aa79a8\",\"a8d2b7e65e\",\"757693924c\",\"510ab56c1f\",\"0e19bc6695\",\"f880206ee5\",\"2676431cb6\",\"1e10b84246\",\"9489c840d5\",\"521db62efb\",\"67cfb3e66e\",\"99ef303c85\",\"cb7a1050cc\",\"09eb76d389\",\"387320362f\",\"836d63836d\",\"87db9c193b\",\"66f6e4c85b\",\"ee91e5d995\",\"79c0340f33\",\"45ca00bbba\",\"7ea6484c04\",\"9a05d7ecbb\",\"8438b8bb6f\",\"e230190ee1\",\"ac2e8083f8\",\"bf21b05f01\",\"37236490c9\",\"0cd967eb7e\",\"d38901ad7c\",\"9c7776fb8f\",\"e230190ee1\",\"ac2e8083f8\",\"bf21b05f01\",\"37236490c9\",\"0cd967eb7e\",\"d38901ad7c\",\"9c7776fb8f\",\"d581f14aac\",\"8a0c1f5aaf\",\"81da0bc742\",\"ba1d82326b\",\"e9bc9f6d0c\",\"de3af4b4a8\",\"555c1ec803\",\"050262d40d\",\"4f1d425f3d\",\"72f7a42114\",\"0cdc333e05\",\"78114770e2\",\"5310792db5\",\"992f593d81\",\"9a6901771c\",\"411dc7c416\",\"1449dbd384\",\"a4ef5d8b03\",\"478f3cb5ea\",\"6e7da1b1c0\",\"6aa0289b31\",\"df9a7fbda7\",\"6d0e7b6390\",\"ea5cd55cb6\",\"53d6f8b7f7\",\"81d78bea78\",\"f27bc78ffe\",\"889585613a\",\"ca59ad0c68\",\"fe0acef53a\",\"b4113e098f\",\"37ee24d630\",\"7c75fbea6e\",\"66ae3e9c05\",\"d3bb594749\",\"ca59ad0c68\",\"fe0acef53a\",\"b4113e098f\",\"37ee24d630\",\"7c75fbea6e\",\"66ae3e9c05\",\"d3bb594749\",\"34f1bd0766\",\"eaf179c7ed\",\"7427f1f135\",\"adfd7b288d\",\"59a7630706\",\"46c9fbce1d\",\"96a04f9aab\",\"fac8dba431\",\"aba380bd47\",\"e809014275\",\"f4391dfb04\",\"9aa6888a0e\",\"7a66ecb093\",\"94aa7c9715\",\"f78eee391d\",\"8a579051f5\",\"25e5155e5b\",\"8018f96121\",\"49e79a9529\",\"2f55de11d5\",\"e9ae14347a\",\"fc129cdf4a\",\"872410cdaf\",\"ec46b03fe4\",\"4ad07daf62\",\"55797a9670\",\"f3f2fb01ed\",\"ac08a56b90\",\"65359a6901\",\"e5a2cc1e20\",\"c46ba96b34\",\"0cc0d576a4\",\"5157c4a6eb\",\"07129915ef\",\"d9c89e58bb\",\"65359a6901\",\"e5a2cc1e20\",\"c46ba96b34\",\"0cc0d576a4\",\"5157c4a6eb\",\"07129915ef\",\"d9c89e58bb\",\"442210ce51\",\"021166e61f\",\"0a3f5506a0\",\"12fcba79ad\",\"43b21793bc\",\"3e7db54189\",\"f6cea27245\",\"442210ce51\",\"021166e61f\",\"0a3f5506a0\",\"12fcba79ad\",\"43b21793bc\",\"3e7db54189\",\"f6cea27245\",\"e1915ccae8\",\"d3acb198d6\",\"850063c247\",\"0383a78782\",\"1c07bae8cd\",\"3c81f55195\",\"50a2a84a38\",\"6cab1f30d5\",\"6d57755216\",\"89e4057dba\",\"b3af8a9c65\",\"94825406e4\",\"ffa906cbe2\",\"d635d4236c\",\"56b59a8473\",\"671ee98faa\",\"0402fd9c63\",\"22bc20b9b5\",\"2c28c72bf4\",\"e63b4ee41f\",\"f0eeaed740\",\"f4ac667996\",\"0458fe3ffc\",\"de6e6dd475\",\"ef325816d9\",\"338863eb8c\",\"c692305e07\",\"c9f7ce11f9\",\"6ef1f1b2f7\",\"226ff001fd\",\"3e3ab14ba8\",\"fa63c81772\",\"b25060c271\",\"de208a2835\",\"7c4372781e\",\"c366481a19\",\"a6bc212fc2\",\"3b0c1e9ef9\",\"32776544b3\",\"ee0b2597b0\",\"65ffc06db1\",\"a5dab8cc13\",\"c366481a19\",\"a6bc212fc2\",\"3b0c1e9ef9\",\"32776544b3\",\"ee0b2597b0\",\"65ffc06db1\",\"a5dab8cc13\",\"6311ddd9af\",\"d5309e5e50\",\"9413d1d5ab\",\"2401b7964c\",\"e05ecb38a3\",\"a5093859b8\",\"c20197642f\",\"3c4e108def\",\"bca2c21d87\",\"7b61246993\",\"cd28279281\",\"3947b377ce\",\"333c3c1926\",\"38971b289c\",\"3c4e108def\",\"bca2c21d87\",\"7b61246993\",\"cd28279281\",\"3947b377ce\",\"333c3c1926\",\"38971b289c\",\"f7bec58f64\",\"ed8dedc491\",\"0fe5b3598d\",\"4a895686b2\",\"9346def4a7\",\"bfdd99533a\",\"793d5cbd39\",\"99aaa18dc4\",\"c93325fa2d\",\"40fe83fe1f\",\"3c5bf5fb8f\",\"1fd81ff9bb\",\"f4895162db\",\"a4c3f6b88f\",\"9ed510b3b5\",\"8d553db8c9\",\"6e12549f55\",\"ed045df945\",\"dee72c158b\",\"0c593dbac1\",\"a204da61e2\",\"969bdcbf3b\",\"c65cafc5b4\",\"bc2ceb7f91\",\"d6d4b98188\",\"89df164ecd\",\"8bbb2310cc\",\"b706723eb0\",\"4caad5c8b5\",\"82339ce7bc\",\"6e459d090e\",\"75f8676fbc\",\"dd96d4684d\",\"ff39f8d5b0\",\"93c47d48d6\",\"7c809c263b\",\"f6202619e5\",\"d1d8278472\",\"eb9f66d146\",\"e3e8b1584b\",\"526f1ee9db\",\"7e4a7fb871\",\"69ab1e1412\",\"262f09359b\",\"7bb8824720\",\"97707fd874\",\"5f3af23a13\",\"8d85b63345\",\"560d825f2b\",\"26b5cb3698\",\"3a27a2e041\",\"fef9197595\",\"30f2acb313\",\"5faf5ab9a8\",\"9f2f561128\",\"93bf922f08\",\"7c809c263b\",\"f6202619e5\",\"d1d8278472\",\"eb9f66d146\",\"e3e8b1584b\",\"526f1ee9db\",\"7e4a7fb871\",\"7c809c263b\",\"f6202619e5\",\"d1d8278472\",\"eb9f66d146\",\"e3e8b1584b\",\"526f1ee9db\",\"7e4a7fb871\",\"1d000696e1\",\"715f84ba61\",\"ce3508a814\",\"c685eac206\",\"afd4227317\",\"4cc44e2def\",\"93e9cdccb4\",\"9691ac83e3\",\"c0178108c4\",\"e9ea14f8ee\",\"ff4cfb7113\",\"9716409e5b\",\"99156fa842\",\"a455f41958\",\"89336eb271\",\"1d4979ea58\",\"43370623c8\",\"78530601bc\",\"4ae8976fe6\",\"185810a921\",\"41e0afc850\",\"e2bb36d00b\",\"640937d770\",\"0381eb98cf\",\"a8c09f7bb1\",\"706d2ff5ab\",\"c52de44043\",\"46367ff114\",\"3593d9ac77\",\"5f5a4c5458\",\"acc6fb527f\",\"d87d760503\",\"4b84bc7170\",\"5ccbdc9368\",\"e4a5df3f1b\",\"219c40f4de\",\"6b627a94cb\",\"d5d3e38c3f\",\"4a030b868d\",\"0a8e21f0c7\",\"3daa787b4e\",\"b39fa04a38\",\"678aed5094\",\"1d7ec38a0e\",\"2c94f36988\",\"422dde6b5a\",\"7cea8071b9\",\"edb77714fa\",\"436471ad4f\",\"678aed5094\",\"1d7ec38a0e\",\"2c94f36988\",\"422dde6b5a\",\"7cea8071b9\",\"edb77714fa\",\"436471ad4f\",\"6372613ecc\",\"7e8b71bf84\",\"557e45a293\",\"d8a441b44b\",\"dd98bdc781\",\"198046354e\",\"54f66745ae\",\"80eea1bfc6\",\"27ed5d03f5\",\"d829abe795\",\"4733c17fc1\",\"c981efd7f2\",\"e792e6e439\",\"b785cce5d2\",\"0e17f84851\",\"8b3569b8a6\",\"288c3f24b9\",\"bce0016894\",\"ec05b1eff6\",\"fa2a37c70e\",\"15c0870b23\",\"a14d1a0ca6\",\"077162f9d3\",\"0263b44a4e\",\"5fdadf13b9\",\"96e9df4935\",\"d92968f657\",\"0c0f8952d6\",\"2eb246c4b4\",\"7306f19102\",\"1664f884ce\",\"c5bfb3b71f\",\"91c432e7bf\",\"13432c5129\",\"31d6844ee9\",\"5a385a4559\",\"684dfe8a1b\",\"e68fce7dd3\",\"e3b5dcfa1b\",\"62790c0f81\",\"22ead61282\",\"5f0ebe595b\",\"96d2e348aa\",\"5c745e4952\",\"ccc2ee3c94\",\"0c64ea6c2c\",\"c515f3ca8e\",\"38f7e61a14\",\"887691be09\",\"ba5da5aa7a\",\"7aebf6c965\",\"97da970e0a\",\"6280fb905f\",\"3b8e047fed\",\"7f4aa43af6\",\"4d9196f9df\",\"a28a575a4c\",\"2b9d01b8b6\",\"067590c7b2\",\"de7a090be0\",\"6bc48db4d9\",\"f732940e86\",\"00ce7ace4c\",\"6372613ecc\",\"7e8b71bf84\",\"557e45a293\",\"d8a441b44b\",\"dd98bdc781\",\"198046354e\",\"54f66745ae\",\"ffe2d12db3\",\"3459b324d4\",\"d9ac487006\",\"c83d5ae078\",\"9c981507cd\",\"2359bdd5e7\",\"e03cc167b0\",\"08b1d6d2b6\",\"b4f2b99d40\",\"7e38017e86\",\"ea446fd753\",\"eb170cac28\",\"431f66b590\",\"f679fcac1a\",\"cd9fef00f6\",\"3e916bb60e\",\"e1d825e4a5\",\"91ef5f949a\",\"cb8904cfc0\",\"a1fd6df5a5\",\"e48435f61c\",\"654226f68a\",\"4a03e5f2cc\",\"b74dfcc183\",\"cc432f20fc\",\"5b5ca03d8a\",\"cfede9144e\",\"20900a7063\",\"ad3f594c77\",\"8142d6182d\",\"ae890bdb22\",\"3ddff67cee\",\"378ae88eae\",\"517a217b22\",\"39de99143f\",\"d2913bb0af\",\"b0b8fead22\",\"dd1e780b30\",\"22a80d33c4\",\"7cc324fff6\",\"6e50476e25\",\"fbf5d9dc53\",\"161ec8fd7d\",\"ec28baef1e\",\"d215f23ee6\",\"709b5a8acb\",\"b09e1e4d1e\",\"2fb465c86a\",\"83afdb9ad6\",\"331f31b2df\",\"4bdbe1b0a8\",\"e2082dd664\",\"fa8d488846\",\"fae79573e4\",\"e240f1e669\",\"582bc4757d\",\"9fcbb2f48c\",\"222069e744\",\"646dcdecab\",\"b2c76b2e84\",\"0fd56319fd\",\"82ffb1bfac\",\"4c4b9f863c\",\"47d2192cab\",\"542f99a904\",\"fa29fb0102\",\"738d8a68b5\",\"2307001cdf\",\"8c6923b68c\",\"324f706202\",\"47d2192cab\",\"542f99a904\",\"fa29fb0102\",\"738d8a68b5\",\"2307001cdf\",\"8c6923b68c\",\"324f706202\",\"60b9e24dcf\",\"09f94cf0d5\",\"91aa46f1e1\",\"2a159840c8\",\"ed8dda8240\",\"dda6d47872\",\"32f37ced9e\",\"8fc5a2785b\",\"b0ae66d635\",\"f08e61f8d0\",\"e20ca5b307\",\"85a8a4bcc4\",\"b93afd73a5\",\"85688b22d2\",\"e8eb85f671\",\"c137c8b3c6\",\"a02523541b\",\"74c5967acf\",\"1f38d5610c\",\"8f7717ce75\",\"7bfce60b9a\",\"e8eb85f671\",\"c137c8b3c6\",\"a02523541b\",\"74c5967acf\",\"1f38d5610c\",\"8f7717ce75\",\"7bfce60b9a\",\"f8c07b5ab8\",\"5f39c4512f\",\"7ab279e717\",\"ffaec5e70f\",\"f9d7bf934e\",\"790b89ad08\",\"008c78d5e8\",\"a984c28a80\",\"9e861b7e0d\",\"f6b485e78f\",\"bd5192c1b8\",\"7bb4e2a6d8\",\"8f6f6d5c55\",\"e08c784f96\",\"c3b7da2662\",\"addf9dc908\",\"4d8e3c961a\",\"7e20d1c6df\",\"0a5d82da6f\",\"e335217fa2\",\"edc952e46d\",\"c3b7da2662\",\"addf9dc908\",\"4d8e3c961a\",\"7e20d1c6df\",\"0a5d82da6f\",\"e335217fa2\",\"edc952e46d\",\"67a06b83d2\",\"04829dd4de\",\"9b6fa31240\",\"5a342a892c\",\"47399cad59\",\"c2173b8610\",\"81f24b051c\",\"fc60aa028c\",\"c986e03208\",\"a279681d4c\",\"1be044666d\",\"b03b294a63\",\"d92815a01e\",\"db3be15ba8\",\"1e02244f9e\",\"888d47f5d1\",\"704704a9d8\",\"f85242a528\",\"be75f7fb7d\",\"b969c31c66\",\"e9b1ff71fc\",\"877bfeebc7\",\"a1828b2b01\",\"7ad3220da8\",\"44c9047696\",\"c51e8857ec\",\"92cf9571a3\",\"f25540083e\",\"33c39c7902\",\"488b818c94\",\"c5daf34bf8\",\"19bf1aeaaf\",\"d5cfa8d921\",\"188d7c679a\",\"5cbdfe8d62\",\"33c39c7902\",\"488b818c94\",\"c5daf34bf8\",\"19bf1aeaaf\",\"d5cfa8d921\",\"188d7c679a\",\"5cbdfe8d62\",\"704631063c\",\"10325dcfc1\",\"70b4915bac\",\"fce643e282\",\"7ddc6e9c20\",\"46b0696aa1\",\"6b8f74c698\",\"aca0d356d8\",\"edf8ba84d1\",\"78422d3f2a\",\"135b3aab95\",\"425d1370ed\",\"c08960c422\",\"acc232c85e\",\"aca0d356d8\",\"edf8ba84d1\",\"78422d3f2a\",\"135b3aab95\",\"425d1370ed\",\"c08960c422\",\"acc232c85e\",\"98b1615dd4\",\"08e8ee7e85\",\"8b8c840877\",\"bbffa863b0\",\"bdefa01b15\",\"fe24af8c0e\",\"9c2b8601fa\",\"baaddd571d\",\"f0c8bfb162\",\"6dcc230234\",\"87f7ea5944\",\"802e4e2e3d\",\"4bf0a94332\",\"ca6bba1485\",\"c56f190827\",\"f9fb7d611b\",\"dfdcbef88c\",\"faebdedba5\",\"62403cd9b6\",\"00fa82b011\",\"045e4a0265\",\"ac8463e943\",\"77a1699aa8\",\"5853f565a0\",\"171b97d239\",\"97fc615063\",\"ad327e288a\",\"432aeec623\",\"ee02843062\",\"179f32090d\",\"d39a52febd\",\"93cff489bb\",\"2f465f5888\",\"b6a722e4df\",\"258de295ec\",\"c6f33a61b3\",\"252fd5b999\",\"88a054a982\",\"cdab486db5\",\"def568c74c\",\"66b7ce5cbd\",\"042eb0d773\",\"907c98f0ff\",\"c5feb58374\",\"5da8a3d79d\",\"143b4f1535\",\"5fe748d045\",\"6709750810\",\"8f993fcdc5\",\"6179ab1967\",\"5dc59aac05\",\"4cfc55258f\",\"d62dc8a7e0\",\"b683810eec\",\"948f40ec73\",\"6e2582133c\",\"65fbbf105a\",\"4117639ca4\",\"ce0c4292dd\",\"c11078c2f3\",\"7a7fcdf9d7\",\"07e56efbf5\",\"140b0a3e2c\",\"127dc007f8\",\"07090fd1a2\",\"b7bd5d0fed\",\"adb010526e\",\"9837635d66\",\"e1b92d7dbd\",\"2323afa53e\",\"127dc007f8\",\"07090fd1a2\",\"b7bd5d0fed\",\"adb010526e\",\"9837635d66\",\"e1b92d7dbd\",\"2323afa53e\",\"5a0fa90a09\",\"8c9e36689e\",\"88f07bd116\",\"e6d52dc72f\",\"7ecf990370\",\"c68bf249c4\",\"a766a9bdc6\",\"2a7ddfc983\",\"1a213994d9\",\"f08db807ee\",\"941157edc9\",\"aa8624c6f2\",\"135981b474\",\"26a4d76174\",\"18bddd59de\",\"ac044fd3c2\",\"173e843a3a\",\"09cba7e906\",\"f6487503e5\",\"d8004652a0\",\"c907dd9bc7\",\"cb4baa21d5\",\"78b23520ac\",\"da62c6a518\",\"d52d7056d0\",\"36b9d09f15\",\"beadef732a\",\"219edec441\",\"c0ca47ca29\",\"6e6708421b\",\"e0be11bc6d\",\"fdb59f1208\",\"5de973b348\",\"c3ec77958f\",\"4702f0b08a\",\"cc324922d3\",\"076273d8a5\",\"06d2609c0a\",\"90bafbf280\",\"d1150c0761\",\"37a877237f\",\"9febb88a3b\",\"18bddd59de\",\"ac044fd3c2\",\"173e843a3a\",\"09cba7e906\",\"f6487503e5\",\"d8004652a0\",\"c907dd9bc7\",\"e144d5deb9\",\"91ac920294\",\"4541a66bf0\",\"f9f44a6f13\",\"bd01814361\",\"09b7dacc6d\",\"deecf048c2\",\"e144d5deb9\",\"91ac920294\",\"4541a66bf0\",\"f9f44a6f13\",\"bd01814361\",\"09b7dacc6d\",\"deecf048c2\",\"cc00138675\",\"fc31f446b5\",\"b3fbd13f78\",\"f00e8ec548\",\"a693d4602a\",\"f8a785d107\",\"a7d05f0a7b\",\"cc00138675\",\"fc31f446b5\",\"b3fbd13f78\",\"f00e8ec548\",\"a693d4602a\",\"f8a785d107\",\"a7d05f0a7b\",\"54fb4e2a0b\",\"4cb2129f35\",\"57c50d0042\",\"fea6d08537\",\"4885e729cd\",\"88d661ef1b\",\"8b84ccb263\",\"92e3a63d4b\",\"52bb84651b\",\"caa3a88a53\",\"2d459f9a59\",\"af461c2aa8\",\"82e3114f5f\",\"ad474eebae\",\"c5df8e26d2\",\"8743c1cef7\",\"d02520043e\",\"9f821302d6\",\"c5260d4efe\",\"56e9abdfff\",\"1615bd6ae0\",\"c5df8e26d2\",\"8743c1cef7\",\"d02520043e\",\"9f821302d6\",\"c5260d4efe\",\"56e9abdfff\",\"1615bd6ae0\",\"817f533393\",\"fc2c0de52e\",\"427ab0f667\",\"c062432b56\",\"0bd55f0973\",\"da9b9c6d68\",\"37530a760f\",\"c4cd2b5402\",\"ac3d8796ac\",\"cdb923fb97\",\"7112fecb59\",\"9d08067264\",\"92780ae72a\",\"b3fd8ec48e\",\"c4cd2b5402\",\"ac3d8796ac\",\"cdb923fb97\",\"7112fecb59\",\"9d08067264\",\"92780ae72a\",\"b3fd8ec48e\",\"c4cd2b5402\",\"ac3d8796ac\",\"cdb923fb97\",\"7112fecb59\",\"9d08067264\",\"92780ae72a\",\"b3fd8ec48e\",\"a8e4a7537e\",\"76fea38597\",\"dc200c0f64\",\"250153463f\",\"d6230b8dab\",\"e299263e2d\",\"72070cc1d5\",\"787aaea01a\",\"6621cfad3b\",\"da5d055e9d\",\"9a64d333bc\",\"b19c95c7ed\",\"6bd3f9d629\",\"ef46ef6375\",\"7a29b2b14f\",\"c3827d0348\",\"e326a4a0db\",\"49391e8d33\",\"f3869784eb\",\"f246f8e259\",\"2881cf6fb1\",\"2b984132be\",\"b4aec944ae\",\"a13349f4ed\",\"0ed5540174\",\"83370056c5\",\"ede9d85465\",\"3d66eb6ad6\",\"826c7ce9e8\",\"ebc1435116\",\"3d6ad796ef\",\"fa6211b61c\",\"4ae5016d71\",\"3f7500643e\",\"9ea60d785e\",\"d5d9e2a9f3\",\"3f96a6368f\",\"4ac2abf618\",\"321f333953\",\"4a84496b98\",\"3ca654c359\",\"fc963b65c0\",\"ab175ca4cd\",\"e11e5e5650\",\"71a8e3b5db\",\"b0bd201a6b\",\"7dadeb1627\",\"bb6f4de27c\",\"0b235985f2\",\"ab175ca4cd\",\"e11e5e5650\",\"71a8e3b5db\",\"b0bd201a6b\",\"7dadeb1627\",\"bb6f4de27c\",\"0b235985f2\",\"4d852abe3a\",\"3045a5d943\",\"17dc863aa4\",\"11efd6d121\",\"b2c474b695\",\"686400828c\",\"de81d47ad3\",\"55fdce9f88\",\"9278ebc7f6\",\"5b9c527238\",\"8894981dd3\",\"8f210f12af\",\"66daa68bb4\",\"cad298674d\",\"55fdce9f88\",\"9278ebc7f6\",\"5b9c527238\",\"8894981dd3\",\"8f210f12af\",\"66daa68bb4\",\"cad298674d\",\"efdf350096\",\"955e215f7c\",\"cf490d2fef\",\"204aaa07c1\",\"b81c639cd9\",\"1fe65473d5\",\"ff85caad4a\",\"ee89feeaaf\",\"bc4c22bdd6\",\"9d27653e43\",\"833253139b\",\"0761375dd4\",\"7bb19a85da\",\"5a5dfa90c2\",\"ee89feeaaf\",\"bc4c22bdd6\",\"9d27653e43\",\"833253139b\",\"0761375dd4\",\"7bb19a85da\",\"5a5dfa90c2\",\"37744774e6\",\"086551db37\",\"d3baac374b\",\"87fd6d2eb8\",\"b44f582b8b\",\"a2979fec82\",\"967737aca6\",\"ee89feeaaf\",\"bc4c22bdd6\",\"9d27653e43\",\"833253139b\",\"0761375dd4\",\"7bb19a85da\",\"5a5dfa90c2\",\"df3d4e32c9\",\"aab1a2a48e\",\"0f8ffc9970\",\"ae7eda9d5a\",\"06694685d1\",\"b26d3ee638\",\"a7f81ce289\",\"df3d4e32c9\",\"aab1a2a48e\",\"0f8ffc9970\",\"ae7eda9d5a\",\"06694685d1\",\"b26d3ee638\",\"a7f81ce289\",\"92ed61579a\",\"fda50304e5\",\"128e42ddb7\",\"66a546bc2a\",\"36dd70b47e\",\"292b8b555d\",\"497f1db262\",\"92ed61579a\",\"fda50304e5\",\"128e42ddb7\",\"66a546bc2a\",\"36dd70b47e\",\"292b8b555d\",\"497f1db262\",\"21ae359b42\",\"5c1e0f895d\",\"2fdccc2353\",\"c14e250634\",\"a88db8768b\",\"18dece6a70\",\"531f1cf2fc\",\"21ae359b42\",\"5c1e0f895d\",\"2fdccc2353\",\"c14e250634\",\"a88db8768b\",\"18dece6a70\",\"531f1cf2fc\",\"9a8d0af728\",\"21f09893a8\",\"75eb86d1b9\",\"03859b1662\",\"f0170e8691\",\"64ba82ce3f\",\"42fd3aa3d6\",\"96208e5810\",\"5db0e77b3a\",\"dfa138ca0e\",\"332cd5951a\",\"9e22bde00e\",\"7a8e44b106\",\"cdfd6bb8bb\",\"edc3740b8d\",\"d85ceaeabf\",\"6468f73c24\",\"a3698a7459\",\"10608f1e1c\",\"b5260fc1e9\",\"3567d39809\",\"edc3740b8d\",\"d85ceaeabf\",\"6468f73c24\",\"a3698a7459\",\"10608f1e1c\",\"b5260fc1e9\",\"3567d39809\",\"edc3740b8d\",\"d85ceaeabf\",\"6468f73c24\",\"a3698a7459\",\"10608f1e1c\",\"b5260fc1e9\",\"3567d39809\",\"17d62372b9\",\"f2a502a35a\",\"f30bc69c4e\",\"1fefc1bc90\",\"ff19e0647b\",\"b6666fef35\",\"ab1c84ac8b\",\"f22f32890a\",\"f0b7f1652d\",\"0e033722fd\",\"e17eb12d8e\",\"13f2f2ed77\",\"ff6bb4c82a\",\"34eac819e9\",\"65dfbe1149\",\"203d65ce17\",\"bb8d803623\",\"cc08b66e17\",\"706f3f512a\",\"4867037e46\",\"fc41dcbf5d\",\"17d62372b9\",\"f2a502a35a\",\"f30bc69c4e\",\"1fefc1bc90\",\"ff19e0647b\",\"b6666fef35\",\"ab1c84ac8b\",\"e3d1dbd6c7\",\"2bceb21325\",\"2942fb4266\",\"a893e8023d\",\"752a50578a\",\"ac81ddbaca\",\"9612b3843a\",\"5a95d24875\",\"533f889ad0\",\"478b2e12a2\",\"11c68f4538\",\"70e43f65a9\",\"36b32c6d12\",\"21ca7dbd9e\",\"81571bbcc2\",\"476ea1e36f\",\"68a8fefbb7\",\"6cd6c62035\",\"1cd5d36e78\",\"6e2f3413f0\",\"6454d458ee\",\"b9191c71e6\",\"97f9b12837\",\"859c9c9ecc\",\"b5de4a3a9e\",\"0d8b479603\",\"b019e36ca3\",\"4e63676541\",\"0bd444151b\",\"939da76c7d\",\"16635da17a\",\"09e248c145\",\"b46be00fd3\",\"8d8914a0fe\",\"67fc3fe7cb\",\"0bd444151b\",\"939da76c7d\",\"16635da17a\",\"09e248c145\",\"b46be00fd3\",\"8d8914a0fe\",\"67fc3fe7cb\",\"fe7ad9862d\",\"b43a85cab3\",\"e7e33c680e\",\"325403e532\",\"161ea24a0a\",\"ee1f11509d\",\"5fa8ced04d\",\"7816332754\",\"c87b14937a\",\"fd7477c65e\",\"c376e6d3bb\",\"0443ced658\",\"a53e751b32\",\"16ddeb2f3f\",\"7816332754\",\"c87b14937a\",\"fd7477c65e\",\"c376e6d3bb\",\"0443ced658\",\"a53e751b32\",\"16ddeb2f3f\",\"1fb8196592\",\"1de007dd03\",\"6cdf084263\",\"104140e13f\",\"090b6128bd\",\"6b4e3acc42\",\"0260041fd1\",\"f6e95d2bf9\",\"9596779e92\",\"d2222c997c\",\"93746aca4c\",\"0ed1500e97\",\"c3dbf14895\",\"fe9b93bd66\",\"08d38b8862\",\"2a3d43b618\",\"0a9ca5708e\",\"111a7fa249\",\"e8d15653da\",\"1090a38873\",\"7f839b4b92\",\"ccecfc507e\",\"acc8502d14\",\"42c4e1554f\",\"91a4926ee7\",\"7efabb6100\",\"33c566635a\",\"f3d578b3ca\",\"ff186466fd\",\"55e96eac1c\",\"5da7971186\",\"d33d5c57c5\",\"36c319a4a6\",\"14150f3915\",\"51cd1aeeb6\",\"c253b2c9e7\",\"ccab57ae9f\",\"4682c4d3dd\",\"bd3c9666ee\",\"25972c335b\",\"97e2bd442e\",\"03a79589d2\",\"4bb1432e44\",\"9cb771eefb\",\"cf6ff0b56d\",\"3f7fb11fef\",\"212aa590cc\",\"96d77b1a4b\",\"2e5fb465c3\",\"4443cb5931\",\"87b30ff778\",\"720eafdf90\",\"8d11f0dcf1\",\"401458685c\",\"2dff213f3b\",\"1c97df0ad8\",\"78c97eb1b5\",\"886f601ac4\",\"8e3403b1f0\",\"4f4de333be\",\"c66a12d6d7\",\"28b56f289f\",\"000e5afc37\",\"f6e95d2bf9\",\"9596779e92\",\"d2222c997c\",\"93746aca4c\",\"0ed1500e97\",\"c3dbf14895\",\"fe9b93bd66\",\"1ba42802ba\",\"dcd0457d7a\",\"3fcc77b4b1\",\"0d102e8f85\",\"d9b2f0de30\",\"0e4ea5d4c0\",\"22ba42eaf6\",\"1ba42802ba\",\"dcd0457d7a\",\"3fcc77b4b1\",\"0d102e8f85\",\"d9b2f0de30\",\"0e4ea5d4c0\",\"22ba42eaf6\",\"9ad5f0ad98\",\"b4a6cf5ef6\",\"371f157318\",\"7f567f63d9\",\"267c705d30\",\"26a5a07305\",\"5e44dd48b4\",\"2d2897e34d\",\"8dcf00badd\",\"ae82700d42\",\"5b5988d2f6\",\"22c0a36c2f\",\"8326bbf13a\",\"2a10d37375\",\"2d2897e34d\",\"8dcf00badd\",\"ae82700d42\",\"5b5988d2f6\",\"22c0a36c2f\",\"8326bbf13a\",\"2a10d37375\",\"2d2897e34d\",\"8dcf00badd\",\"ae82700d42\",\"5b5988d2f6\",\"22c0a36c2f\",\"8326bbf13a\",\"2a10d37375\",\"f3e6dadc59\",\"ef549524ab\",\"d0be099724\",\"c6827700b9\",\"84f96e89da\",\"c33951bf6c\",\"e78a74d2ec\",\"405f9291f8\",\"23a6725d21\",\"49e3b037a7\",\"a879ce60d9\",\"d6999a5eb6\",\"a959fc0dc5\",\"b6fc164394\",\"5ca3b5b285\",\"a35cab3bd8\",\"c20696c7b5\",\"d3f1468ff6\",\"de453a456f\",\"6486b55928\",\"fbb2270bfc\",\"4de06659f1\",\"61f28f5e84\",\"d3307e01c8\",\"5b419a4e46\",\"f01b0a2e5d\",\"77bde365d3\",\"9a0e877c5c\",\"5ca3b5b285\",\"a35cab3bd8\",\"c20696c7b5\",\"d3f1468ff6\",\"de453a456f\",\"6486b55928\",\"fbb2270bfc\",\"7195750034\",\"b0f7d2d0a8\",\"97b6aac2e9\",\"c84a9f1e6c\",\"9635e786a0\",\"593874c57e\",\"1ddc836e67\",\"a173a07f71\",\"1b1e3bf3ff\",\"866a41436b\",\"c280b74f21\",\"c95c857234\",\"f84bb709fb\",\"09743dc234\",\"372865061e\",\"4611384a59\",\"34ff3102a2\",\"25a3ee158f\",\"974ea76bfe\",\"8bb300b91e\",\"e8e0cf01c7\",\"8ab0570dd7\",\"56a61bcaad\",\"c6ad5903ad\",\"a0df990d2a\",\"0df284fc25\",\"eaab2e12cf\",\"db8fb0f7f0\",\"335c8de804\",\"e00f0b803e\",\"84872daabc\",\"538b4eddcc\",\"ec95f1558e\",\"137eefc095\",\"15179af7ed\",\"c1da848183\",\"c54068eb33\",\"2903d5dfee\",\"8e031f0535\",\"a27b4edc0f\",\"1c8192ba5e\",\"598725fbdb\",\"1f7a11a060\",\"87d9627f97\",\"4077f08d61\",\"fcc8895588\",\"33102d1e54\",\"f544a2db03\",\"1649b2424e\",\"335c8de804\",\"e00f0b803e\",\"84872daabc\",\"538b4eddcc\",\"ec95f1558e\",\"137eefc095\",\"15179af7ed\",\"d9afaf7565\",\"9b4cc0b168\",\"ae9c245a87\",\"c63348dcd7\",\"1c8029ee6d\",\"2dd95d4d96\",\"93d50f56e0\",\"d9afaf7565\",\"9b4cc0b168\",\"ae9c245a87\",\"c63348dcd7\",\"1c8029ee6d\",\"2dd95d4d96\",\"93d50f56e0\",\"e113cc83c0\",\"6875d45fea\",\"23f5c4e054\",\"6ff9790646\",\"1d77081ef6\",\"d752734ed7\",\"6918a4cb6a\",\"1132e9fe9d\",\"1a2ea35e93\",\"8ed25db18f\",\"3ceea50fae\",\"06a135135f\",\"f669bae7d0\",\"6ccf73cbff\",\"1132e9fe9d\",\"1a2ea35e93\",\"8ed25db18f\",\"3ceea50fae\",\"06a135135f\",\"f669bae7d0\",\"6ccf73cbff\",\"e74d78c4a8\",\"2dcf13a133\",\"2218d25163\",\"480dd8cf91\",\"0e25c78cb8\",\"d6b6782efa\",\"ec2960d7c6\",\"e74d78c4a8\",\"2dcf13a133\",\"2218d25163\",\"480dd8cf91\",\"0e25c78cb8\",\"d6b6782efa\",\"ec2960d7c6\",\"884ca64677\",\"56c0beef93\",\"519bf7f3ec\",\"5602d032d5\",\"45735e0a69\",\"c219f5fde6\",\"86036241d4\",\"1d3dfbfb33\",\"b04761d832\",\"7387ef79dc\",\"98cd3952f9\",\"46a6328c17\",\"7337ad3e29\",\"76e08d551e\",\"e74d78c4a8\",\"2dcf13a133\",\"2218d25163\",\"480dd8cf91\",\"0e25c78cb8\",\"d6b6782efa\",\"ec2960d7c6\",\"c05c4d1cad\",\"1ee6205122\",\"96ca5ee12e\",\"b18d8c16d5\",\"e5776474c2\",\"1aafc74cc2\",\"18221396da\",\"00bd71ac50\",\"496db4b672\",\"32cd8963f8\",\"8665bd80b2\",\"4a5bffb414\",\"c8ad30b07e\",\"689721b6b6\",\"00bd71ac50\",\"496db4b672\",\"32cd8963f8\",\"8665bd80b2\",\"4a5bffb414\",\"c8ad30b07e\",\"689721b6b6\",\"47cd52dbae\",\"b51d396823\",\"858a0bc497\",\"80f581109f\",\"0504be8bdc\",\"a0c6fac59d\",\"08fd885f0b\",\"52ac238656\",\"08f965d731\",\"6af3e63466\",\"67c68e1552\",\"f0bea33854\",\"01359ce71e\",\"e8f253de5e\",\"e74d78c4a8\",\"2dcf13a133\",\"2218d25163\",\"480dd8cf91\",\"0e25c78cb8\",\"d6b6782efa\",\"ec2960d7c6\",\"306c3291a7\",\"e92f503a66\",\"8e8885b19b\",\"26d8d59ac9\",\"11f8614a8d\",\"a7f241c001\",\"a7fc235f2b\",\"7683c86160\",\"9b9ff25a26\",\"d45ac9db23\",\"10e8d68a22\",\"e0c3c5cedc\",\"2c6b15def1\",\"2c7abf67c4\",\"fe864b159a\",\"89c3cc395d\",\"a5984cfb3d\",\"2ef77eaaa0\",\"3ee9f7a803\",\"39768d6fdb\",\"8637e6918b\",\"03d7df73b0\",\"a04fb0c12b\",\"6d6ff5e808\",\"caa07c8724\",\"2b2c0275f7\",\"60f16886b1\",\"bce523b9f4\",\"03d7df73b0\",\"a04fb0c12b\",\"6d6ff5e808\",\"caa07c8724\",\"2b2c0275f7\",\"60f16886b1\",\"bce523b9f4\",\"40f8bf73c9\",\"63779b03b0\",\"392d3cd60b\",\"c54d916fb0\",\"58cf54859d\",\"097e296646\",\"160ac2e5d1\",\"b56040f541\",\"077182c47a\",\"2b0bdda341\",\"9d5428a637\",\"872ef84276\",\"c48ff42dc7\",\"bfd2329dc2\",\"41a28f23f2\",\"335bf40e6c\",\"6d272053e5\",\"62f9a492e7\",\"531d16feb7\",\"8928b23056\",\"4c3ee466ad\",\"0afb100584\",\"5fb28a4c4d\",\"68f78e8cac\",\"535992225c\",\"29583fa62b\",\"0854a6b059\",\"957f76a7d3\",\"6cb9395fda\",\"984ed8d558\",\"f4f6153dd5\",\"17e0dcf15a\",\"2baebd817a\",\"04c9fd772d\",\"1ca4bbfa0b\",\"6cb9395fda\",\"984ed8d558\",\"f4f6153dd5\",\"17e0dcf15a\",\"2baebd817a\",\"04c9fd772d\",\"1ca4bbfa0b\",\"aa405ea687\",\"cf0124ad4f\",\"deca2d6f01\",\"4dd480e77c\",\"5504ce9de6\",\"8c8ebc8f04\",\"fc5dfc5b64\",\"eec29ede7a\",\"f9030d260d\",\"c56037cf31\",\"672772bd3b\",\"df065f9783\",\"e9e393f974\",\"21cde6f000\",\"77eff4262a\",\"a822a88674\",\"a0b5041af1\",\"eb5f4441ca\",\"d2dd1b7c64\",\"9eb17bc069\",\"ecc7a71d6a\",\"81932a8721\",\"ccb01b6fa8\",\"f9b70b4f33\",\"923bb5aba5\",\"8f1738b197\",\"457e1f5e24\",\"8d7137596c\",\"156b982f7d\",\"b78db141a3\",\"9686fcc7fe\",\"dfe70a1d2d\",\"465c7eb4ca\",\"75e4a776c3\",\"b37e36fb4a\",\"497098b8d0\",\"45b1d5695e\",\"b5818f1e8e\",\"ac7cf270e5\",\"03700ae1dc\",\"753759a1fd\",\"4e27cb4e64\",\"cddc68885f\",\"1e4b057f59\",\"2eb9b91208\",\"6a3102e183\",\"47a6ee9594\",\"46232ad41a\",\"1fd8719e61\",\"77eff4262a\",\"a822a88674\",\"a0b5041af1\",\"eb5f4441ca\",\"d2dd1b7c64\",\"9eb17bc069\",\"ecc7a71d6a\",\"77eff4262a\",\"a822a88674\",\"a0b5041af1\",\"eb5f4441ca\",\"d2dd1b7c64\",\"9eb17bc069\",\"ecc7a71d6a\",\"9bc447d3b5\",\"b879813ec7\",\"fb52be9b0c\",\"acede39883\",\"3d1cd870a1\",\"cdd4de50c8\",\"018391e9be\",\"53c310faf2\",\"5e63c651d9\",\"a303c6ef93\",\"0e54d8b7c8\",\"0696e9758f\",\"ac4b12a116\",\"d1f181b7a4\",\"9bc447d3b5\",\"b879813ec7\",\"fb52be9b0c\",\"acede39883\",\"3d1cd870a1\",\"cdd4de50c8\",\"018391e9be\",\"bdf6b9db28\",\"0b8ad628ae\",\"aea2d5619a\",\"4daf5411e8\",\"e7f8c6d470\",\"a735f2d328\",\"439e874c3b\",\"842df4118a\",\"8860a8d3ec\",\"60c18ea101\",\"4ec86b530b\",\"7dbd8cd326\",\"c1338327b3\",\"9aa4d20bcb\",\"bdf6b9db28\",\"0b8ad628ae\",\"aea2d5619a\",\"4daf5411e8\",\"e7f8c6d470\",\"a735f2d328\",\"439e874c3b\",\"c84515b2b2\",\"3b8d482bb4\",\"11041aee1e\",\"0fcea75713\",\"b3ff80051c\",\"c1552ece4a\",\"b2cfa527ca\",\"ef12943fcb\",\"1bf334d19c\",\"1a3f329620\",\"ebe3b41035\",\"ffbd499e22\",\"85360e0036\",\"c71980b6cb\",\"effddbe136\",\"3ab2bbdb9e\",\"7f161e7fb7\",\"9333e985ff\",\"fda5287510\",\"f91e3ff637\",\"16637f3454\",\"bb40a4b9bd\",\"05b53e030c\",\"7abb36ddf4\",\"70851c42d2\",\"a08b2820de\",\"cd941d2453\",\"204a67804f\",\"20b34b158d\",\"5fda49b2b6\",\"8ff8515617\",\"bafea53550\",\"76dd1aa77c\",\"70af5d490d\",\"8add62846d\",\"bb191f04ef\",\"a376445fb1\",\"0d43d9a2fe\",\"b17cdf1947\",\"6c20226c65\",\"51b3b88a66\",\"1f4673c015\",\"351e545abb\",\"06c60d7d64\",\"888b91ea8b\",\"eb030b9d16\",\"cec33203bf\",\"72ce0a41df\",\"798b11dd6f\",\"351e545abb\",\"06c60d7d64\",\"888b91ea8b\",\"eb030b9d16\",\"cec33203bf\",\"72ce0a41df\",\"798b11dd6f\",\"5fa08d228b\",\"ed4e1c6894\",\"783c5d5ba2\",\"072d486198\",\"3b9caa454e\",\"a485c4adac\",\"bd3d0b46bb\",\"28068774dd\",\"3e5afc914d\",\"2199c59f76\",\"1d3e5a8d9b\",\"2c8eb61971\",\"d53161c674\",\"7a82c4638a\",\"49dc03c680\",\"5bdec14663\",\"04b872f79e\",\"57bf34354f\",\"542c4de20f\",\"643e408714\",\"54c54f20e6\",\"3e1dda2578\",\"3db413a518\",\"4adc8e4ed0\",\"1ac8e02742\",\"a5c9872bf7\",\"ca6e58bbab\",\"fbbee6ae7f\",\"f18e26d088\",\"54bd94994f\",\"1a0d7a644b\",\"18537762cb\",\"d98b9e1fea\",\"c7098bfa0d\",\"dacd407a83\",\"c560079dea\",\"e7d02a85c0\",\"2d0416e490\",\"29e9629347\",\"d3a4acb5fd\",\"0dc2183141\",\"3eb5bed929\",\"c560079dea\",\"e7d02a85c0\",\"2d0416e490\",\"29e9629347\",\"d3a4acb5fd\",\"0dc2183141\",\"3eb5bed929\",\"c2d8f06ebb\",\"1703965416\",\"a1d691e320\",\"3fa692f809\",\"d85acac9b7\",\"60692018d4\",\"10f4b07da1\",\"d1bb3fcebc\",\"0c02d3f878\",\"7e467a5cb2\",\"691e4e4d74\",\"63c843f159\",\"85687379e8\",\"26aa4aebad\",\"d1bb3fcebc\",\"0c02d3f878\",\"7e467a5cb2\",\"691e4e4d74\",\"63c843f159\",\"85687379e8\",\"26aa4aebad\",\"77ca78490f\",\"643754dfc0\",\"1b539cf64b\",\"f339479c7c\",\"14f1b0dbd2\",\"369cbb54f4\",\"736a20b2c9\",\"ba652c01b1\",\"190bc05c03\",\"75f771c494\",\"ed13d3af6c\",\"2e76cdc425\",\"a2ad05d30f\",\"323af48f9a\",\"078778380a\",\"871b96e630\",\"653a8c5639\",\"fe9ae9d88a\",\"b7ad880c8c\",\"5dc2c57e00\",\"939bdbea86\",\"c10768cfd3\",\"3c5ff6dea4\",\"76b32af6c0\",\"5aef86e761\",\"6d90fe2250\",\"55eb8dfc0b\",\"2e9af01d71\",\"11bedca118\",\"3cac5d0c2e\",\"ff709eac42\",\"cc75e8b68d\",\"eb66b42a0e\",\"0a633f986a\",\"b213701e79\",\"c10768cfd3\",\"3c5ff6dea4\",\"76b32af6c0\",\"5aef86e761\",\"6d90fe2250\",\"55eb8dfc0b\",\"2e9af01d71\",\"2206d03d83\",\"f8c1f4459c\",\"d9695ebf22\",\"a9fec2b9be\",\"0a4a2abc51\",\"5b60f9ed78\",\"684a6da4a2\",\"b29e34136b\",\"e347024785\",\"19d8b8de3c\",\"582866703b\",\"ac25157f49\",\"3e34f3058d\",\"79043fc040\",\"2206d03d83\",\"f8c1f4459c\",\"d9695ebf22\",\"a9fec2b9be\",\"0a4a2abc51\",\"5b60f9ed78\",\"684a6da4a2\",\"2206d03d83\",\"f8c1f4459c\",\"d9695ebf22\",\"a9fec2b9be\",\"0a4a2abc51\",\"5b60f9ed78\",\"684a6da4a2\",\"aa45b98a64\",\"ebd7388be9\",\"f480a6a645\",\"ce1f1d80b5\",\"3535ad117c\",\"45a2b2c480\",\"a8b730e7fe\",\"13aaf8837b\",\"6a1fc027e4\",\"e525bac4bc\",\"5dacda4de5\",\"d130339b40\",\"326f98ff53\",\"bc1a089186\",\"f3bffe435a\",\"178b277b45\",\"d54a519207\",\"72022a49e0\",\"92f43a7983\",\"d30c59a59b\",\"dd60427956\",\"e69e3d4987\",\"a7635af62b\",\"86df6042d5\",\"a7d9086ba1\",\"cd4a2064b4\",\"026cb6b8cf\",\"bf8fff4a20\",\"e69e3d4987\",\"a7635af62b\",\"86df6042d5\",\"a7d9086ba1\",\"cd4a2064b4\",\"026cb6b8cf\",\"bf8fff4a20\",\"733dec7487\",\"73e24a9ae9\",\"18df818872\",\"8dd327df80\",\"9598e81ec8\",\"324ecc1cc6\",\"4d5d65ee38\",\"83314e51cf\",\"99bbaec08a\",\"732402d4d4\",\"4e254ee352\",\"35e347577c\",\"c6acfc2282\",\"8dd0749bba\",\"83314e51cf\",\"99bbaec08a\",\"732402d4d4\",\"4e254ee352\",\"35e347577c\",\"c6acfc2282\",\"8dd0749bba\",\"0a7ae253f5\",\"01738bec81\",\"55b956f594\",\"b95a035b5b\",\"7695698776\",\"f48a9cda94\",\"4418370923\",\"a83a277bec\",\"f88c7ae91d\",\"b3e942062b\",\"34fd78433f\",\"8f3a4301a4\",\"236d2fea89\",\"dfe0dedca1\",\"49fdf35102\",\"707124ddfb\",\"d010a9c2a2\",\"f635e10fd0\",\"ee365071a8\",\"9a73fbe13c\",\"4af79bb7ab\",\"8a8203dea0\",\"8a182efdf1\",\"ab52ae5ff7\",\"2a295b2aa0\",\"e93e4f60a3\",\"bdd3e2fbb5\",\"c18611f56c\",\"1c00b31668\",\"b15094d8cc\",\"408c3037c1\",\"c6acde08e0\",\"984c53a3ed\",\"c33dfdba03\",\"0dfaab7e37\",\"da349c0e06\",\"f426128085\",\"3e813a38ae\",\"3ef20af68a\",\"b52667812c\",\"771b717e0b\",\"46d7a4d31d\",\"da349c0e06\",\"f426128085\",\"3e813a38ae\",\"3ef20af68a\",\"b52667812c\",\"771b717e0b\",\"46d7a4d31d\",\"9513c9512e\",\"9e81e19067\",\"3798582378\",\"99692dc5db\",\"f16b23ba1d\",\"9c8f6d177f\",\"4936eb313b\",\"2e7c22925b\",\"082f5de2eb\",\"93297ccb05\",\"9aaf4b4a7e\",\"7592530a8d\",\"60bfcd858f\",\"2773099f96\",\"9513c9512e\",\"9e81e19067\",\"3798582378\",\"99692dc5db\",\"f16b23ba1d\",\"9c8f6d177f\",\"4936eb313b\",\"8fd43cd961\",\"b43a3c2fec\",\"a63558e1bb\",\"f424c96c52\",\"0963a5cbc1\",\"51d842db67\",\"09b715585d\",\"0c769dd977\",\"755e6a0cf2\",\"032569c413\",\"735b32c88c\",\"2eb7c3db48\",\"a1ad518f4d\",\"7544a6eefc\",\"9417a28ed6\",\"1c732df729\",\"77734ca664\",\"3fc7662510\",\"d48a5b6826\",\"f0102777a5\",\"5ad1cf5f2c\",\"ac08cd74dc\",\"63f7757e25\",\"a04d0d974b\",\"7a2c8024e8\",\"84bc1ed5f9\",\"e14f76bdcd\",\"0ac704ed7a\",\"fa69b3d21e\",\"d2539c2c3f\",\"dd45ecfe93\",\"8cf7ec0be8\",\"597de9cc3f\",\"6776bdfb26\",\"d3acaf0be6\",\"9513c9512e\",\"9e81e19067\",\"3798582378\",\"99692dc5db\",\"f16b23ba1d\",\"9c8f6d177f\",\"4936eb313b\",\"652510cb1d\",\"4d9c5a175f\",\"d0a976c4e8\",\"064b57eb39\",\"0fd51e807b\",\"f592c14ea8\",\"0dcd7ca55d\",\"a18bd888e8\",\"8a911308d0\",\"5db1eeb85e\",\"a7fcf6404d\",\"27c7665610\",\"ec0d5c037b\",\"85389bfc28\",\"ff1e93376c\",\"b95ef6787e\",\"5016ad5171\",\"79bd88c378\",\"e0b4f503ca\",\"f2c44b1c56\",\"3021a35d76\",\"f7c1cb887e\",\"f4c8845960\",\"7eb6a51793\",\"bfa97b2e86\",\"29ffacd89b\",\"32bf2afb39\",\"c4cefab96e\",\"f7c1cb887e\",\"f4c8845960\",\"7eb6a51793\",\"bfa97b2e86\",\"29ffacd89b\",\"32bf2afb39\",\"c4cefab96e\",\"59679c743d\",\"0fade61a50\",\"6f0ee8bf92\",\"c2e6b632b4\",\"df0b2fb416\",\"e86a860d7a\",\"71f051783e\",\"7b10a50c82\",\"cc081e3ec0\",\"5eba8eef07\",\"a0db79db14\",\"71866ff3ca\",\"9ab6286623\",\"e3ba0529c5\",\"a79504b8fd\",\"39d7d4ab19\",\"464efe7604\",\"59de1be25b\",\"e64a11446c\",\"e645e019e3\",\"89ca749d8e\",\"2e6553682a\",\"7c0297bc1b\",\"5dd5d8c0f3\",\"8748297a0f\",\"15d9417129\",\"e8756fe33f\",\"a09f35b9d7\",\"fc5785e72c\",\"1fb5f8d381\",\"bb2a8ba44a\",\"071caf591c\",\"cf6cab93c2\",\"2ded5d276d\",\"2d1ebaa8e2\",\"3e70021b42\",\"6176c37793\",\"524fa404cd\",\"8d1322101d\",\"d9ca49a499\",\"52d1fe1a48\",\"d105d2d17b\",\"3e70021b42\",\"6176c37793\",\"524fa404cd\",\"8d1322101d\",\"d9ca49a499\",\"52d1fe1a48\",\"d105d2d17b\",\"25a332e3e3\",\"a190ea874a\",\"b8612735b2\",\"8eaee5d651\",\"b105744238\",\"7129549278\",\"355a835f7a\",\"25a332e3e3\",\"a190ea874a\",\"b8612735b2\",\"8eaee5d651\",\"b105744238\",\"7129549278\",\"355a835f7a\",\"cdd1dd2498\",\"6e0f1dfb59\",\"25ee5395be\",\"6bce90f549\",\"b4ceb70ad9\",\"754e07e890\",\"6438bd3e28\",\"50aa742ae6\",\"33cb739f6d\",\"4dae893121\",\"0cc7067eeb\",\"5b6630b887\",\"50e4783b19\",\"130042c6e1\",\"0acbd8c00a\",\"eeb028429e\",\"a3bd9588c5\",\"f2c13d6bdc\",\"c7be69a25a\",\"148727fc15\",\"ae6200e886\",\"ecd80648bf\",\"3e5a60ec61\",\"6f103b7dd5\",\"c611be9c9a\",\"7dc19fb511\",\"e77f3e149f\",\"369c6938b1\",\"638031844c\",\"5b5138dd26\",\"42651cd410\",\"a4b2343316\",\"1f0f9ba612\",\"96ebbdb982\",\"ebbcf00e85\",\"638031844c\",\"5b5138dd26\",\"42651cd410\",\"a4b2343316\",\"1f0f9ba612\",\"96ebbdb982\",\"ebbcf00e85\",\"8e4cb134f1\",\"03ac7c7c76\",\"aca8e5eb72\",\"a8783397be\",\"8c270993e6\",\"3b55289319\",\"e15818ef7c\",\"015d4eaad7\",\"2594400baf\",\"a0f2d5375d\",\"9fb13a185e\",\"2d8bf30e51\",\"8213f4a7fd\",\"955843a73e\",\"0380218c19\",\"1c36cb9600\",\"b1a25b8753\",\"8aeba1d21f\",\"496daa0250\",\"e03f124a92\",\"45ebdc2a0c\",\"76595e2f70\",\"d640d9a7be\",\"c54a55575f\",\"dcd8084e90\",\"26372af820\",\"cee6110659\",\"a2758eae22\",\"76595e2f70\",\"d640d9a7be\",\"c54a55575f\",\"dcd8084e90\",\"26372af820\",\"cee6110659\",\"a2758eae22\",\"56cfa2abc3\",\"f4d6bd89df\",\"10ccdf47a6\",\"61b460db53\",\"84278e56b1\",\"e1b8798af8\",\"8a4877729a\",\"dc7da607a4\",\"8ec41ceb26\",\"16a4b371a6\",\"dccafbff7e\",\"577cd8792f\",\"5c5539b1e4\",\"4b38b54b09\",\"8cf5d5484f\",\"3001c5cb90\",\"10683a2fae\",\"baf3ea722a\",\"aea5f75ce9\",\"60c85d807f\",\"2934be30ba\",\"b86736f097\",\"4d5bf10a49\",\"2b4766b6bf\",\"313ba3ea7b\",\"57a4fbcc4f\",\"751f1766a6\",\"9328a74276\",\"8cf5d5484f\",\"3001c5cb90\",\"10683a2fae\",\"baf3ea722a\",\"aea5f75ce9\",\"60c85d807f\",\"2934be30ba\",\"5ce01efd49\",\"a7564e9f03\",\"776e2edd8f\",\"8945779221\",\"fab4e7cee9\",\"0ed5d98ddd\",\"05a0ef1fdb\",\"359a0d9621\",\"48578df6b0\",\"0fc2f6ce57\",\"7ddc5fc89f\",\"10af52baf7\",\"352cd5b7ae\",\"9d02b105e4\",\"359a0d9621\",\"48578df6b0\",\"0fc2f6ce57\",\"7ddc5fc89f\",\"10af52baf7\",\"352cd5b7ae\",\"9d02b105e4\",\"15d261e858\",\"13ff543f5f\",\"709f118aa6\",\"1c7d056e34\",\"e2b7ea0992\",\"57a79e9d38\",\"3c66bdc14b\",\"1626f4dbb1\",\"ef9c3eed6c\",\"f8f044acf5\",\"9c761f5763\",\"9cd1c0e9b5\",\"20e1f2f8ff\",\"f422789363\",\"67c2cf2ba5\",\"72c33614a5\",\"44b930f3a4\",\"d1b4cc87ae\",\"087e9dbe2c\",\"b2c1fd5f2d\",\"dd981f1d14\",\"b4514b03ea\",\"41c03d33a3\",\"1a8258f535\",\"5cae017abb\",\"fa095bea01\",\"f0f24a0fa6\",\"d753da2ae0\",\"7b5ae9dbdc\",\"39605dc32c\",\"0b14f63fa6\",\"cb96ff6d1c\",\"766a009c44\",\"c292fad88a\",\"a02342679f\",\"bd9e38957d\",\"cd320e9aa1\",\"a15a6fb145\",\"fcf0f49144\",\"91effde266\",\"21bce26cf7\",\"3ce7c24b6b\",\"72b2f5e9c9\",\"c5e3b27a5a\",\"1fbf13ddb8\",\"b5d79c6152\",\"ea089af7ee\",\"007dbe9082\",\"77a1203264\",\"1552c57d16\",\"94639bf0dd\",\"1b79d60388\",\"a2157ca893\",\"a25d3e36ed\",\"183510c57f\",\"6e09321f01\",\"539493cb75\",\"f3277127d0\",\"39ad22433c\",\"32d2ad6b0d\",\"c52293a837\",\"9c192e5b79\",\"82af3d1127\",\"a7526511b6\",\"478f974d15\",\"a14ccaccef\",\"847f11e1e6\",\"4374db4865\",\"122779d2a0\",\"4ec0138ecb\",\"a7526511b6\",\"478f974d15\",\"a14ccaccef\",\"847f11e1e6\",\"4374db4865\",\"122779d2a0\",\"4ec0138ecb\",\"0466084ffa\",\"6c98039e8d\",\"deb0fd8405\",\"cec6a18c4c\",\"529742fa71\",\"6c339cb740\",\"533d376942\",\"0466084ffa\",\"6c98039e8d\",\"deb0fd8405\",\"cec6a18c4c\",\"529742fa71\",\"6c339cb740\",\"533d376942\",\"d4a443ba19\",\"c80381c559\",\"32720a7fe3\",\"7b95f05201\",\"39f53fe410\",\"f2af4671b0\",\"69ff50feac\",\"aa340ff631\",\"3e3e9e937f\",\"b0a948dfa2\",\"013e2fb29b\",\"bcad953d38\",\"23290f667a\",\"3dffc1836e\",\"07d266e5ea\",\"1b1ade26ba\",\"8ab4c1b9e7\",\"e65955ae7e\",\"41bb957585\",\"ce34d09638\",\"883f8c729e\",\"25d0f69037\",\"584aa3eaba\",\"f93151bb9c\",\"21e9a75ec4\",\"8116af7752\",\"2c582d8439\",\"1479a5a7ad\",\"fae9071c03\",\"43c72441ef\",\"e46051a4dd\",\"e718613519\",\"719199d5f5\",\"4327d28356\",\"611abe7a3d\",\"0aeda36f3e\",\"bc472b1782\",\"7b9b303ce2\",\"e50b67bdac\",\"21431010ef\",\"c05cb32123\",\"4712551bf5\",\"94bf10b80e\",\"91ad0e99ee\",\"fce3117a3f\",\"59eb4062fa\",\"a72d125807\",\"2780e53cb3\",\"88f9480d2d\",\"94bf10b80e\",\"91ad0e99ee\",\"fce3117a3f\",\"59eb4062fa\",\"a72d125807\",\"2780e53cb3\",\"88f9480d2d\"]}\n```\n",
  "findings": [
    {
      "severity": "Medium",
      "title": "Minting in a loop may lead to a DOS",
      "description": "The signature being used appears to require that all NFTs be minted at once. If there are a lot of them, the there may be too many to mint in one block",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit fighters[] : claimFighters()\n209          nftsClaimed[msg.sender][0] += numToMint[0];\n210          nftsClaimed[msg.sender][1] += numToMint[1];\n211          for (uint16 i = 0; i < totalToMint; i++) {\n212              _createNewFighter(\n213                  msg.sender, \n214                  uint256(keccak256(abi.encode(msg.sender, fighters.length))),\n215                  modelHashes[i], \n216                  modelTypes[i],\n217                  i < numToMint[0] ? 0 : 1,\n218                  0,\n219                  [uint256(100), uint256(100)]\n220              );\n221:         }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L209-L221"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`tokenURI()` does not follow EIP-721",
      "description": "The [EIP](https://eips.ethereum.org/EIPS/eip-721) states that `tokenURI()` \"Throws if `_tokenId` is not a valid NFT\", which the code below does not do. If the NFT has not yet been minted, `tokenURI()` should revert",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n402      function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {\n403          return _tokenURIs[tokenId];\n404:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L402-L404"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Code does not follow the best practice of check-effects-interaction",
      "description": "Code should follow the best-practice of [check-effects-interaction](https://blockchain-academy.hs-mittweida.de/courses/solidity-coding-beginners-to-intermediate/lessons/solidity-11-coding-patterns/topic/checks-effects-interactions/), where state variables are updated before any external calls are made. Doing so prevents a large class of reentrancy bugs.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit transferFrom() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit approveSpender() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit balanceOf() called prior to this assignment in reRoll(), via: reRoll()\n378:             numRerolls[tokenId] += 1;\n\n/// @audit transferFrom() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit approveSpender() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit balanceOf() called prior to this assignment in reRoll(), via: reRoll()\n381:             fighters[tokenId].element = element;\n\n/// @audit transferFrom() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit approveSpender() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit balanceOf() called prior to this assignment in reRoll(), via: reRoll()\n382:             fighters[tokenId].weight = weight;\n\n/// @audit transferFrom() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit approveSpender() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit balanceOf() called prior to this assignment in reRoll(), via: reRoll()\n383              fighters[tokenId].physicalAttributes = _aiArenaHelperInstance.createPhysicalAttributes(\n384                  newDna,\n385                  generation[fighterType],\n386                  fighters[tokenId].iconsType,\n387                  fighters[tokenId].dendroidBool\n388:             );\n\n/// @audit createPhysicalAttributes() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit transferFrom() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit approveSpender() called prior to this assignment in reRoll(), via: reRoll()\n/// @audit balanceOf() called prior to this assignment in reRoll(), via: reRoll()\n389:             _tokenURIs[tokenId] = \"\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L378-L378",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L378-L378",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L378-L378",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L381-L381",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L381-L381",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L381-L381",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L382-L382",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L382-L382",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L382-L382",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L383-L388",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L383-L388",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L383-L388",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L389-L389",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L389-L389",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L389-L389",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L389-L389"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit transferFrom() called prior to this assignment in mint(), via: mint()\n/// @audit approveSpender() called prior to this assignment in mint(), via: mint()\n/// @audit balanceOf() called prior to this assignment in mint(), via: mint()\n169:             allowanceRemaining[msg.sender][tokenId] -= quantity;\n\n/// @audit transferFrom() called prior to this assignment in mint(), via: mint()\n/// @audit approveSpender() called prior to this assignment in mint(), via: mint()\n/// @audit balanceOf() called prior to this assignment in mint(), via: mint()\n171:                 allGameItemAttributes[tokenId].itemsRemaining -= quantity;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L169-L169",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L169-L169",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L169-L169",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L171-L171",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L171-L171",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L171-L171"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit ownerOf() called prior to this assignment in pickWinner(), via: pickWinner()\n126:             totalPoints -= fighterPoints[winners[i]];\n\n/// @audit ownerOf() called prior to this assignment in pickWinner(), via: pickWinner()\n127:             fighterPoints[winners[i]] = 0;\n\n/// @audit ownerOf() called prior to this assignment in pickWinner(), via: pickWinner()\n129:         winnerAddresses[roundId] = currentWinnerAddresses;\n\n/// @audit ownerOf() called prior to this assignment in pickWinner(), via: pickWinner()\n130:         isSelectionComplete[roundId] = true;\n\n/// @audit ownerOf() called prior to this assignment in pickWinner(), via: pickWinner()\n131:         roundId += 1;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L126-L126",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L127-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L129-L129",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L130-L130",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L131-L131"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit setNewRound() called prior to this assignment in setNewRound(), via: setNewRound()\n238:         rankedNrnDistribution[roundId] = rankedNrnDistribution[roundId - 1];\n\n/// @audit transferFrom() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit approveStaker() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit balanceOf() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit ownerOf() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit updateFighterStaking() called prior to this assignment in stakeNRN(), via: stakeNRN()\n256:             amountStaked[tokenId] += amount;\n\n/// @audit transferFrom() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit approveStaker() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit balanceOf() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit ownerOf() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit updateFighterStaking() called prior to this assignment in stakeNRN(), via: stakeNRN()\n257:             globalStakedAmount += amount;\n\n/// @audit transferFrom() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit approveStaker() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit balanceOf() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit ownerOf() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit updateFighterStaking() called prior to this assignment in stakeNRN(), via: stakeNRN()\n258              stakingFactor[tokenId] = _getStakingFactor(\n259                  tokenId, \n260                  _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n261:             );\n\n/// @audit transferFrom() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit approveStaker() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit getStakeAtRisk() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit balanceOf() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit ownerOf() called prior to this assignment in stakeNRN(), via: stakeNRN()\n/// @audit updateFighterStaking() called prior to this assignment in stakeNRN(), via: stakeNRN()\n262:             _calculatedStakingFactor[tokenId][roundId] = true;\n\n/// @audit ownerOf() called prior to this assignment in unstakeNRN(), via: unstakeNRN()\n275:         amountStaked[tokenId] -= amount;\n\n/// @audit ownerOf() called prior to this assignment in unstakeNRN(), via: unstakeNRN()\n276:         globalStakedAmount -= amount;\n\n/// @audit ownerOf() called prior to this assignment in unstakeNRN(), via: unstakeNRN()\n277          stakingFactor[tokenId] = _getStakingFactor(\n278              tokenId, \n279              _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n280:         );\n\n/// @audit getStakeAtRisk() called prior to this assignment in unstakeNRN(), via: unstakeNRN()\n/// @audit ownerOf() called prior to this assignment in unstakeNRN(), via: unstakeNRN()\n281:         _calculatedStakingFactor[tokenId][roundId] = true;\n\n/// @audit getStakeAtRisk() called prior to this assignment in unstakeNRN(), via: unstakeNRN()\n/// @audit ownerOf() called prior to this assignment in unstakeNRN(), via: unstakeNRN()\n282:         hasUnstaked[tokenId][roundId] = true;\n\n/// @audit spendVoltage() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord()\n/// @audit getStakeAtRisk() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord(), _addResultPoints()\n/// @audit addPoints() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord(), _addResultPoints()\n/// @audit reclaimNRN() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord(), _addResultPoints()\n/// @audit transfer() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord(), _addResultPoints()\n/// @audit updateAtRiskRecords() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord(), _addResultPoints()\n/// @audit getStakeAtRisk() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord()\n/// @audit ownerVoltage() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord()\n/// @audit ownerVoltageReplenishTime() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord()\n/// @audit ownerOf() called prior to this assignment in updateBattleRecord(), via: updateBattleRecord()\n348:         totalBattles += 1;\n\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n434:             stakingFactor[tokenId] = _getStakingFactor(tokenId, stakeAtRisk);\n\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n435:             _calculatedStakingFactor[tokenId][roundId] = true;\n\n/// @audit addPoints() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit reclaimNRN() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n462:                 amountStaked[tokenId] += curStakeAtRisk;\n\n/// @audit reclaimNRN() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit addPoints() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n466:             accumulatedPointsPerFighter[tokenId][roundId] += points;\n\n/// @audit reclaimNRN() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit addPoints() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n467:             accumulatedPointsPerAddress[fighterOwner][roundId] += points;\n\n/// @audit reclaimNRN() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit addPoints() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n468:             totalAccumulatedPoints[roundId] += points;\n\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n485:                 accumulatedPointsPerFighter[tokenId][roundId] -= points;\n\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n486:                 accumulatedPointsPerAddress[fighterOwner][roundId] -= points;\n\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n487:                 totalAccumulatedPoints[roundId] -= points;\n\n/// @audit getStakeAtRisk() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit updateAtRiskRecords() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n/// @audit transfer() called prior to this assignment in _addResultPoints(), via: _addResultPoints()\n496:                     amountStaked[tokenId] -= curStakeAtRisk;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L238-L238",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L256-L256",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L256-L256",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L256-L256",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L256-L256",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L256-L256",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L257-L257",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L257-L257",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L257-L257",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L257-L257",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L257-L257",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L258-L261",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L258-L261",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L258-L261",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L258-L261",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L258-L261",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L262-L262",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L262-L262",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L262-L262",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L262-L262",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L262-L262",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L262-L262",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L275-L275",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L276-L276",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L277-L280",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L281-L281",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L281-L281",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L282-L282",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L282-L282",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L434-L434",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L435-L435",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L462-L462",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L462-L462",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L462-L462",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L466-L466",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L466-L466",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L466-L466",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L467-L467",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L467-L467",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L467-L467",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L468-L468",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L468-L468",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L468-L468",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L485-L485",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L486-L486",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L487-L487",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L496-L496",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L496-L496",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L496-L496"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit transfer() called prior to this assignment in setNewRound(), via: setNewRound(), _sweepLostStake()\n82:              roundId = roundId_;\n\n/// @audit transfer() called prior to this assignment in reclaimNRN(), via: reclaimNRN()\n102:             stakeAtRisk[roundId][fighterId] -= nrnToReclaim;\n\n/// @audit transfer() called prior to this assignment in reclaimNRN(), via: reclaimNRN()\n103:             totalStakeAtRisk[roundId] -= nrnToReclaim;\n\n/// @audit transfer() called prior to this assignment in reclaimNRN(), via: reclaimNRN()\n104:             amountLost[fighterOwner] -= nrnToReclaim;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L82-L82",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L103-L103",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L104-L104"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit burn() called prior to this assignment in useVoltageBattery(), via: useVoltageBattery()\n/// @audit balanceOf() called prior to this assignment in useVoltageBattery(), via: useVoltageBattery()\n97:          ownerVoltage[msg.sender] = 100;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L97-L97",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L97-L97"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Consider implementing two-step procedure for updating protocol addresses",
      "description": "A copy-paste error or a typo may end up bricking protocol functionality, or sending tokens to an address with no known private key. Consider implementing a two-step procedure for updating protocol addresses, where the recipient is set as pending, and must 'accept' the assignment by making an affirmative call. A straight forward way of doing this would be to have the target contracts implement [EIP-165](https://eips.ethereum.org/EIPS/eip-165), and to have the 'set' functions ensure that the recipient is of the right interface type.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit _mergingPoolAddress:  setMergingPoolAddress()\n171      function setMergingPoolAddress(address mergingPoolAddress) external {\n172          require(msg.sender == _ownerAddress);\n173          _mergingPoolAddress = mergingPoolAddress;\n174:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L171-L174"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit _gameServerAddress:  setGameServerAddress()\n184      function setGameServerAddress(address gameServerAddress) external {\n185          require(msg.sender == _ownerAddress);\n186          _gameServerAddress = gameServerAddress;\n187:     }\n\n/// @audit _stakeAtRiskAddress:  setStakeAtRiskAddress()\n192      function setStakeAtRiskAddress(address stakeAtRiskAddress) external {\n193          require(msg.sender == _ownerAddress);\n194          _stakeAtRiskAddress = stakeAtRiskAddress;\n195          _stakeAtRiskInstance = StakeAtRisk(_stakeAtRiskAddress);\n196:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L184-L187",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L192-L196"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Events may be emitted out of order due to reentrancy",
      "description": "Ensure that events follow the best practice of check-effects-interaction, and are emitted before external calls",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit transferFrom() called prior to this emission in mint(), via: mint()\n/// @audit approveSpender() called prior to this emission in mint(), via: mint()\n/// @audit onERC1155Received() called prior to this emission in mint(), via: mint(), _mint(), _doSafeTransferAcceptanceCheck()\n/// @audit balanceOf() called prior to this emission in mint(), via: mint()\n174:             emit BoughtItem(msg.sender, tokenId, quantity);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L174-L174",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L174-L174",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L174-L174",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L174-L174"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit mintFromMergingPool() called prior to this emission in claimRewards(), via: claimRewards()\n165:             emit Claimed(msg.sender, claimIndex);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L165-L165"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit transferFrom() called prior to this emission in stakeNRN(), via: stakeNRN()\n/// @audit approveStaker() called prior to this emission in stakeNRN(), via: stakeNRN()\n/// @audit getStakeAtRisk() called prior to this emission in stakeNRN(), via: stakeNRN()\n/// @audit balanceOf() called prior to this emission in stakeNRN(), via: stakeNRN()\n/// @audit ownerOf() called prior to this emission in stakeNRN(), via: stakeNRN()\n/// @audit updateFighterStaking() called prior to this emission in stakeNRN(), via: stakeNRN()\n263:             emit Staked(msg.sender, amount);\n\n/// @audit transfer() called prior to this emission in unstakeNRN(), via: unstakeNRN()\n/// @audit getStakeAtRisk() called prior to this emission in unstakeNRN(), via: unstakeNRN()\n/// @audit updateFighterStaking() called prior to this emission in unstakeNRN(), via: unstakeNRN()\n/// @audit ownerOf() called prior to this emission in unstakeNRN(), via: unstakeNRN()\n288:             emit Unstaked(msg.sender, amount);\n\n/// @audit mint() called prior to this emission in claimNRN(), via: claimNRN()\n309:             emit Claimed(msg.sender, claimableNRN);\n\n/// @audit reclaimNRN() called prior to this emission in _addResultPoints(), via: _addResultPoints()\n/// @audit addPoints() called prior to this emission in _addResultPoints(), via: _addResultPoints()\n/// @audit getStakeAtRisk() called prior to this emission in _addResultPoints(), via: _addResultPoints()\n470:                 emit PointsChanged(tokenId, points, true);\n\n/// @audit getStakeAtRisk() called prior to this emission in _addResultPoints(), via: _addResultPoints()\n489:                     emit PointsChanged(tokenId, points, false);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L263-L263",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L263-L263",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L263-L263",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L263-L263",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L263-L263",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L263-L263",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L288-L288",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L288-L288",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L288-L288",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L288-L288",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L309-L309",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L470-L470",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L470-L470",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L470-L470",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L489-L489"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit transfer() called prior to this emission in reclaimNRN(), via: reclaimNRN()\n105:             emit ReclaimedStake(fighterId, nrnToReclaim);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L105-L105"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit burn() called prior to this emission in useVoltageBattery(), via: useVoltageBattery()\n/// @audit balanceOf() called prior to this emission in useVoltageBattery(), via: useVoltageBattery()\n98:          emit VoltageRemaining(msg.sender, ownerVoltage[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L98-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L98-L98"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "External calls in an un-bounded `for-`loop may result in a DOS",
      "description": "Consider limiting the number of iterations in `for-`loops that make external calls",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit createPhysicalAttributes() :  _createNewFighter()\n211          for (uint16 i = 0; i < totalToMint; i++) {\n212              _createNewFighter(\n213                  msg.sender, \n214                  uint256(keccak256(abi.encode(msg.sender, fighters.length))),\n215                  modelHashes[i], \n216                  modelTypes[i],\n217                  i < numToMint[0] ? 0 : 1,\n218                  0,\n219                  [uint256(100), uint256(100)]\n220              );\n221:         }\n\n/// @audit onERC721Received() :  _checkOnERC721Received(), _safeMint(), _safeMint(), _createNewFighter()\n/// @audit createPhysicalAttributes() :  _createNewFighter()\n/// @audit burn() : \n/// @audit ownerOf() : \n249          for (uint16 i = 0; i < mintpassIdsToBurn.length; i++) {\n250              require(msg.sender == _mintpassInstance.ownerOf(mintpassIdsToBurn[i]));\n251              _mintpassInstance.burn(mintpassIdsToBurn[i]);\n252              _createNewFighter(\n253                  msg.sender, \n254                  uint256(keccak256(abi.encode(mintPassDnas[i]))), \n255                  modelHashes[i], \n256                  modelTypes[i],\n257                  fighterTypes[i],\n258                  iconsTypes[i],\n259                  [uint256(100), uint256(100)]\n260              );\n261:         }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L211-L221",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249-L261",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249-L261",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249-L261",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249-L261"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit ownerOf() : \n124          for (uint256 i = 0; i < winnersLength; i++) {\n125              currentWinnerAddresses[i] = _fighterFarmInstance.ownerOf(winners[i]);\n126              totalPoints -= fighterPoints[winners[i]];\n127              fighterPoints[winners[i]] = 0;\n128:         }\n\n/// @audit onERC721Received() :  _checkOnERC721Received(), _safeMint(), _safeMint(), _createNewFighter(), mintFromMergingPool()\n/// @audit mintFromMergingPool() : \n/// @audit createPhysicalAttributes() :  _createNewFighter(), mintFromMergingPool()\n152              for (uint32 j = 0; j < winnersLength; j++) {\n153                  if (msg.sender == winnerAddresses[currentRound][j]) {\n154                      _fighterFarmInstance.mintFromMergingPool(\n155                          msg.sender,\n156                          modelURIs[claimIndex],\n157                          modelTypes[claimIndex],\n158                          customAttributes[claimIndex]\n159                      );\n160                      claimIndex += 1;\n161                  }\n162:             }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L124-L128",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L152-L162",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L152-L162",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L152-L162"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Input array lengths may differ",
      "description": "If the caller makes a copy-paste error, the lengths may be mismatched and an operation believed to have been completed may not in fact have been completed (e.g. if the array being iterated over is shorter than the one being indexed into).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit probabilities[]\n49:              attributeProbabilities[0][attributes[i]] = probabilities[i];\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L49-L49"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit iconsTypes[]\n258:                 iconsTypes[i],\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L258-L258"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit modelURIs[]\n156:                         modelURIs[claimIndex],\n\n/// @audit modelTypes[]\n157:                         modelTypes[claimIndex],\n\n/// @audit customAttributes[]\n158:                         customAttributes[claimIndex]\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L156-L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L157-L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L158-L158"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for `address(0x0)` when updating `address` state variables",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit transferOwnership(newOwnerAddress)\n63:          _ownerAddress = newOwnerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L61-L61"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit 0(ownerAddress)\n107:         _ownerAddress = ownerAddress;\n\n/// @audit 0(delegatedAddress)\n108:         _delegatedAddress = delegatedAddress;\n\n/// @audit 0(treasuryAddress_)\n109:         treasuryAddress = treasuryAddress_;\n\n/// @audit transferOwnership(newOwnerAddress)\n122:         _ownerAddress = newOwnerAddress;\n\n/// @audit setMergingPoolAddress(mergingPoolAddress)\n173:         _mergingPoolAddress = mergingPoolAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L104-L104",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L104-L104",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L104-L104",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L120-L120",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L171-L171"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit 0(ownerAddress)\n96:          _ownerAddress = ownerAddress;\n\n/// @audit 0(treasuryAddress_)\n97:          treasuryAddress = treasuryAddress_;\n\n/// @audit transferOwnership(newOwnerAddress)\n110:         _ownerAddress = newOwnerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L95-L95",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L95-L95",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L108-L108"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit 0(ownerAddress)\n76:          _ownerAddress = ownerAddress;\n\n/// @audit 0(rankedBattleAddress)\n77:          _rankedBattleAddress = rankedBattleAddress;\n\n/// @audit transferOwnership(newOwnerAddress)\n91:          _ownerAddress = newOwnerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L72-L72",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L73-L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L89-L89"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit 0(ownerAddress)\n71:          _ownerAddress = ownerAddress;\n\n/// @audit 0(treasuryAddress_)\n72:          treasuryAddress = treasuryAddress_;\n\n/// @audit transferOwnership(newOwnerAddress)\n87:          _ownerAddress = newOwnerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L68-L68",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L68-L68",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L85-L85"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit 0(ownerAddress)\n152:         _ownerAddress = ownerAddress;\n\n/// @audit 0(gameServerAddress)\n153:         _gameServerAddress = gameServerAddress;\n\n/// @audit transferOwnership(newOwnerAddress)\n169:         _ownerAddress = newOwnerAddress;\n\n/// @audit setGameServerAddress(gameServerAddress)\n186:         _gameServerAddress = gameServerAddress;\n\n/// @audit setStakeAtRiskAddress(stakeAtRiskAddress)\n194:         _stakeAtRiskAddress = stakeAtRiskAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L147-L147",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L167-L167",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L184-L184",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L192-L192"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit 0(treasuryAddress_)\n65:          treasuryAddress = treasuryAddress_;\n\n/// @audit 0(rankedBattleAddress)\n66:          _rankedBattleAddress = rankedBattleAddress;   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L61-L61",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L63-L63"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit 0(ownerAddress)\n52:          _ownerAddress = ownerAddress;\n\n/// @audit transferOwnership(newOwnerAddress)\n66:          _ownerAddress = newOwnerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L51-L51",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L64-L64"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "NFT doesn't handle hard forks",
      "description": "When there are hard forks, users often have to go through [many hoops](https://twitter.com/elerium115/status/1558471934924431363) to ensure that they control ownership on every fork. Consider adding `require(1 == chain.chainId)`, or the chain ID of whichever chain you prefer, to the functions below, or at least include the chain ID in the URI, so that there is no confusion about which chain is the owner of the NFT.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n402      function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {\n403          return _tokenURIs[tokenId];\n404:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L402-L404"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Solidity version 0.8.20 may not work on other chains due to `PUSH0`",
      "description": "The compiler for Solidity 0.8.20 switches the default target EVM version to [Shanghai](https://blog.soliditylang.org/2023/05/10/solidity-0.8.20-release-announcement/#important-note), which includes the new `PUSH0` op code. This op code may not yet be implemented on all L2s, so deployment on these chains will fail. To work around this issue, use an earlier [EVM](https://docs.soliditylang.org/en/v0.8.20/using-the-compiler.html?ref=zaryabs.com#setting-the-evm-version-to-target) [version](https://book.getfoundry.sh/reference/config/solidity-compiler#evm_version). While the project itself may or may not compile with 0.8.20, other projects with which it integrates, or which extend this project may, and those projects will have problems deploying these contracts/libraries.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n3:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L3-L3"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "State variables not capped at reasonable values",
      "description": "Consider adding minimum/maximum value checks to ensure that the state variables below can never be used to excessively harm users, including via griefing",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit newWinnersPerPeriodAmount\n108:         winnersPerPeriod = newWinnersPerPeriodAmount;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L106-L106"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit bpsLostPerLoss_\n228:         bpsLostPerLoss = bpsLostPerLoss_;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L226-L226"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "The `owner` is a single point of failure and a centralization risk",
      "description": "Having a single EOA as the only owner of contracts is a large centralization risk and a single point of failure. A single private key may be taken in a hack, or the sole holder of the key may become unable to retrieve the key when necessary, or the single owner can become malicious and perform a rug-pull. Consider changing to a multi-signature setup, and or having a role-based authorization model.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n41:      constructor(uint8[][] memory probabilities) {\n\n61:      function transferOwnership(address newOwnerAddress) external {\n\n68:      function addAttributeDivisor(uint8[] memory attributeDivisors) external {\n\n131:     function addAttributeProbabilities(uint256 generation, uint8[][] memory probabilities) public {\n\n144:     function deleteAttributeProbabilities(uint8 generation) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L41-L41",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L61-L61",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L68-L68",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L131-L131",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L144-L144"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n120:     function transferOwnership(address newOwnerAddress) external {\n\n129:     function incrementGeneration(uint8 fighterType) external returns (uint8) {\n\n139:     function addStaker(address newStaker) external {\n\n147:     function instantiateAIArenaHelperContract(address aiArenaHelperAddress) external {\n\n155:     function instantiateMintpassContract(address mintpassAddress) external {\n\n163:     function instantiateNeuronContract(address neuronAddress) external {\n\n171:     function setMergingPoolAddress(address mergingPoolAddress) external {\n\n180:     function setTokenURI(uint256 tokenId, string calldata newTokenURI) external {\n\n268:     function updateFighterStaking(uint256 tokenId, bool stakingStatus) external {\n\n313      function mintFromMergingPool(\n314          address to, \n315          string calldata modelHash, \n316          string calldata modelType, \n317          uint256[2] calldata customAttributes\n318      ) \n319          public \n320:     {\n\n370:     function reRoll(uint8 tokenId, uint8 fighterType) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L120-L120",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L129-L129",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L139-L139",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L147-L147",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L155-L155",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L163-L163",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L171-L171",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L180-L180",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L268-L268",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L313-L320",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L370-L370"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n108:     function transferOwnership(address newOwnerAddress) external {\n\n117:     function adjustAdminAccess(address adminAddress, bool access) external {\n\n126:     function adjustTransferability(uint256 tokenId, bool transferable) external {\n\n139:     function instantiateNeuronContract(address nrnAddress) external {\n\n147:     function mint(uint256 tokenId, uint256 quantity) external {\n\n185:     function setAllowedBurningAddresses(address newBurningAddress) public {\n\n194:     function setTokenURI(uint256 tokenId, string memory _tokenURI) public {\n\n208      function createGameItem(\n209          string memory name_,\n210          string memory tokenURI,\n211          bool finiteSupply,\n212          bool transferable,\n213          uint256 itemsRemaining,\n214          uint256 itemPrice,\n215          uint16 dailyAllowance\n216      ) \n217          public \n218:     {\n\n242:     function burn(address account, uint256 tokenId, uint256 amount) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L108-L108",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L117-L117",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L126-L126",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L139-L139",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L147-L147",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L185-L185",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L194-L194",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L208-L218",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L242-L242"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n89:      function transferOwnership(address newOwnerAddress) external {\n\n98:      function adjustAdminAccess(address adminAddress, bool access) external {\n\n106:     function updateWinnersPerPeriod(uint256 newWinnersPerPeriodAmount) external {\n\n118:     function pickWinner(uint256[] calldata winners) external {\n\n195:     function addPoints(uint256 tokenId, uint256 points) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L89-L89",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L98-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L106-L106",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L195-L195"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n85:      function transferOwnership(address newOwnerAddress) external {\n\n93:      function addMinter(address newMinterAddress) external {\n\n101:     function addStaker(address newStakerAddress) external {\n\n109:     function addSpender(address newSpenderAddress) external {\n\n118:     function adjustAdminAccess(address adminAddress, bool access) external {\n\n127:     function setupAirdrop(address[] calldata recipients, uint256[] calldata amounts) external {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L85-L85",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L93-L93",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L101-L101",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L109-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L127-L127"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n167:     function transferOwnership(address newOwnerAddress) external {\n\n176:     function adjustAdminAccess(address adminAddress, bool access) external {\n\n184:     function setGameServerAddress(address gameServerAddress) external {\n\n192:     function setStakeAtRiskAddress(address stakeAtRiskAddress) external {\n\n201:     function instantiateNeuronContract(address nrnAddress) external {\n\n209:     function instantiateMergingPoolContract(address mergingPoolAddress) external {\n\n218:     function setRankedNrnDistribution(uint256 newDistribution) external {\n\n226:     function setBpsLostPerLoss(uint256 bpsLostPerLoss_) external {\n\n233:     function setNewRound() external {\n\n294:     function claimNRN() external {\n\n322      function updateBattleRecord(\n323          uint256 tokenId, \n324          uint256 mergingPortion,\n325          uint8 battleResult,\n326          uint256 eloFactor,\n327          bool initiatorBool\n328      ) \n329          external \n330:     {   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L167-L167",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L176-L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L184-L184",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L192-L192",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L201-L201",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L209-L209",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L218-L218",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L226-L226",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L233-L233",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L294-L294",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L322-L330"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n78:      function setNewRound(uint256 roundId_) external {\n\n93:      function reclaimNRN(uint256 nrnToReclaim, uint256 fighterId, address fighterOwner) external {\n\n115      function updateAtRiskRecords(\n116          uint256 nrnToPlaceAtRisk, \n117          uint256 fighterId, \n118          address fighterOwner\n119      ) \n120          external \n121:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L78-L78",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L93-L93",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L121"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n64:      function transferOwnership(address newOwnerAddress) external {\n\n73:      function adjustAdminAccess(address adminAddress, bool access) external {\n\n82:      function adjustAllowedVoltageSpenders(address allowedVoltageSpender, bool allowed) external {\n\n93:      function useVoltageBattery() public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L64-L64",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L73-L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L82-L82",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L93-L93"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Tokens may be minted to `address(0x0)`",
      "description": "Neither the listed functions, nor `_mint()` prevent minting to `address(0x0)`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit  _mint(), _safeMint(), _safeMint(), _createNewFighter(), claimFighters()\n191      function claimFighters(\n192          uint8[2] calldata numToMint,\n193          bytes calldata signature,\n194          string[] calldata modelHashes,\n195          string[] calldata modelTypes\n196      ) \n197          external \n198:     {\n\n/// @audit  _mint(), _safeMint(), _safeMint(), _createNewFighter(), redeemMintPass()\n233      function redeemMintPass(\n234          uint256[] calldata mintpassIdsToBurn,\n235          uint8[] calldata fighterTypes,\n236          uint8[] calldata iconsTypes,\n237          string[] calldata mintPassDnas,\n238          string[] calldata modelHashes,\n239          string[] calldata modelTypes\n240      ) \n241          external \n242:     {\n\n/// @audit  _mint(), _safeMint(), _safeMint(), _createNewFighter(), mintFromMergingPool()\n313      function mintFromMergingPool(\n314          address to, \n315          string calldata modelHash, \n316          string calldata modelType, \n317          uint256[2] calldata customAttributes\n318      ) \n319          public \n320:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L191-L198",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L233-L242",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L313-L320"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit  _mint(), mint()\n147:     function mint(uint256 tokenId, uint256 quantity) external {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L147-L147"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit  _mint(), ()\n68       constructor(address ownerAddress, address treasuryAddress_, address contributorAddress)\n69           ERC20(\"Neuron\", \"NRN\")\n70:      {\n\n/// @audit  _mint(), mint()\n155:     function mint(address to, uint256 amount) public virtual {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L68-L70",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L155-L155"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`constant`s should be defined rather than using magic numbers",
      "description": "Even [assembly](https://github.com/code-423n4/2022-05-opensea-seaport/blob/9d7ce4d08bf3c3010304a0476a785c70c0e90ae7/contracts/lib/TokenTransferrer.sol#L35-L39) can benefit from using readable constants instead of hex/numeric literals",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit 3\n/// @audit 5\n/// @audit 7\n/// @audit 11\n/// @audit 13\n20:      uint8[] public defaultAttributeDivisor = [2, 3, 5, 7, 11, 13];\n\n/// @audit 99\n/// @audit 99\n/// @audit 99\n/// @audit 99\n/// @audit 99\n/// @audit 99\n94:              return FighterOps.FighterPhysicalAttributes(99, 99, 99, 99, 99, 99);\n\n/// @audit 4\n/// @audit 3\n103:                   i == 4 && iconsType == 3 // Custom icons hands (bowling ball)\n\n/// @audit 50\n105:                     finalAttributeProbabilityIndexes[i] = 50;\n\n/// @audit 100\n107:                     uint256 rarityRank = (dna / attributeToDnaDivisor[attributes[i]]) % 100;\n\n/// @audit 3\n116:                 finalAttributeProbabilityIndexes[3],\n\n/// @audit 4\n117:                 finalAttributeProbabilityIndexes[4],\n\n/// @audit 5\n118:                 finalAttributeProbabilityIndexes[5]\n\n/// @audit 6\n133:         require(probabilities.length == 6, \"Invalid number of attribute arrays\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L20-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L20-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L20-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L20-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L20-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L103-L103",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L103-L103",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L105-L105",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L107-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L116-L116",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L117-L117",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L133-L133"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit 3\n/// @audit 3\n36:      uint8[2] public maxRerollsAllowed = [3, 3];\n\n/// @audit 1000\n/// @audit 18\n39:      uint256 public rerollCost = 1000 * 10**18;    \n\n/// @audit 3\n110:         numElements[0] = 3;\n\n/// @audit 100\n/// @audit 100\n219:                 [uint256(100), uint256(100)]\n\n/// @audit 100\n/// @audit 100\n259:                 [uint256(100), uint256(100)]\n\n/// @audit 6\n428:             uint256[6] memory,\n\n/// @audit 31\n/// @audit 65\n471:         uint256 weight = dna % 31 + 65;\n\n/// @audit 100\n499:         if (customAttributes[0] == 100) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L36-L36",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L36-L36",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L39-L39",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L39-L39",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L219-L219",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L219-L219",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L259-L259",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L259-L259",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L428-L428",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L471-L471",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L471-L471",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L499-L499"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit 5000\n/// @audit 18\n157:         rankedNrnDistribution[0] = 5000 * 10**18;\n\n/// @audit 18\n220:         rankedNrnDistribution[roundId] = newDistribution * 10**18;\n\n/// @audit 100\n332:         require(mergingPortion <= 100);\n\n/// @audit 4\n439:         curStakeAtRisk = (bpsLostPerLoss * (amountStaked[tokenId] + stakeAtRisk)) / 10**4;\n\n/// @audit 100\n449:             uint256 mergingPoints = (points * mergingPortion) / 100;\n\n/// @audit 18\n528:           (amountStaked[tokenId] + stakeAtRisk) / 10**18\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L157-L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L157-L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L220-L220",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L332-L332",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L439-L439",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L449-L449",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L528-L528"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit 100\n94:          require(ownerVoltage[msg.sender] < 100);\n\n/// @audit 100\n97:          ownerVoltage[msg.sender] = 100;\n\n/// @audit 100\n118:         ownerVoltage[owner] = 100;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L97-L97",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L118-L118"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`public` functions not called by the contract should be declared `external` instead",
      "description": "Contracts [are allowed](https://docs.soliditylang.org/en/latest/contracts.html#function-overriding) to override their parents' functions and change the visibility from `external` to `public`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n144:      function deleteAttributeProbabilities(uint8 generation) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L144"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n313       function mintFromMergingPool(\n314           address to, \n315           string calldata modelHash, \n316           string calldata modelType, \n317:          uint256[2] calldata customAttributes\n\n355       function safeTransferFrom(\n356           address from, \n357           address to, \n358:          uint256 tokenId\n\n370:      function reRoll(uint8 tokenId, uint8 fighterType) public {\n\n395:      function contractURI() public pure returns (string memory) {\n\n402:      function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {\n\n410       function supportsInterface(bytes4 _interfaceId)\n411           public\n412           view\n413           override(ERC721, ERC721Enumerable)\n414:          returns (bool)\n\n421       function getAllFighterInfo(\n422           uint256 tokenId\n423       )\n424           public\n425           view\n426           returns (\n427               address,\n428               uint256[6] memory,\n429               uint256,\n430               uint256,\n431               string memory,\n432               string memory,\n433:              uint16\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L313-L317",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L355-L358",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L370",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L395",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L402",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L410-L414",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L421-L433"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n185:      function setAllowedBurningAddresses(address newBurningAddress) public {\n\n208       function createGameItem(\n209           string memory name_,\n210           string memory tokenURI,\n211           bool finiteSupply,\n212           bool transferable,\n213           uint256 itemsRemaining,\n214           uint256 itemPrice,\n215:          uint16 dailyAllowance\n\n242:      function burn(address account, uint256 tokenId, uint256 amount) public {\n\n249:      function contractURI() public pure returns (string memory) {\n\n256:      function uri(uint256 tokenId) public view override returns (string memory) {\n\n268:      function getAllowanceRemaining(address owner, uint256 tokenId) public view returns (uint256) {\n\n279:      function remainingSupply(uint256 tokenId) public view returns (uint256) {\n\n285:      function uniqueTokensOutstanding() public view returns (uint256) {\n\n291       function safeTransferFrom(\n292           address from, \n293           address to, \n294           uint256 tokenId,\n295           uint256 amount,\n296:          bytes memory data\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L185",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L208-L215",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L242",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L249",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L256",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L268",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L279",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L285",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L291-L296"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n195:      function addPoints(uint256 tokenId, uint256 points) public {\n\n205:      function getFighterPoints(uint256 maxId) public view returns(uint256[] memory) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L195",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L205"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n155:      function mint(address to, uint256 amount) public virtual {\n\n163:      function burn(uint256 amount) public virtual {\n\n171:      function approveSpender(address account, uint256 amount) public {\n\n184:      function approveStaker(address owner, address spender, uint256 amount) public {\n\n196:      function burnFrom(address account, uint256 amount) public virtual {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L155",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L163",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L171",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L184",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L196"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n386:      function getUnclaimedNRN(address claimer) public view returns(uint256) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L386"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n93        function useVoltageBattery() public {\n94:           require(ownerVoltage[msg.sender] < 100);\n\n105:      function spendVoltage(address spender, uint8 voltageSpent) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L93-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L105"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`require()`/`revert()` statements should have descriptive reason strings",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n62:          require(msg.sender == _ownerAddress);\n\n69:          require(msg.sender == _ownerAddress);\n\n70:          require(attributeDivisors.length == attributes.length);\n\n132:         require(msg.sender == _ownerAddress);\n\n145:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L62-L62",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L69-L69",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L70-L70",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L132-L132",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L145-L145"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n121:         require(msg.sender == _ownerAddress);\n\n130:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n148:         require(msg.sender == _ownerAddress);\n\n156:         require(msg.sender == _ownerAddress);\n\n164:         require(msg.sender == _ownerAddress);\n\n172:         require(msg.sender == _ownerAddress);\n\n181:         require(msg.sender == _delegatedAddress);\n\n206:         require(Verification.verify(msgHash, signature, _delegatedAddress));\n\n208:         require(modelHashes.length == totalToMint && modelTypes.length == totalToMint);\n\n243          require(\n244              mintpassIdsToBurn.length == mintPassDnas.length && \n245              mintPassDnas.length == fighterTypes.length && \n246              fighterTypes.length == modelHashes.length &&\n247              modelHashes.length == modelTypes.length\n248:         );\n\n250:             require(msg.sender == _mintpassInstance.ownerOf(mintpassIdsToBurn[i]));\n\n269:         require(hasStakerRole[msg.sender]);\n\n290:         require(msg.sender == ownerOf(tokenId));\n\n321:         require(msg.sender == _mergingPoolAddress);\n\n346:         require(_ableToTransfer(tokenId, to));\n\n363:         require(_ableToTransfer(tokenId, to));\n\n371:         require(msg.sender == ownerOf(tokenId));\n\n372:         require(numRerolls[tokenId] < maxRerollsAllowed[fighterType]);\n\n495:         require(balanceOf(to) < MAX_FIGHTERS_ALLOWED);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L121-L121",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L130-L130",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L140-L140",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L156-L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L164-L164",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L172-L172",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L181-L181",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L206-L206",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L208-L208",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L243-L248",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L250-L250",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L269-L269",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L290-L290",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L321-L321",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L346-L346",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L363-L363",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L371-L371",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L372-L372",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L495-L495"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n109:         require(msg.sender == _ownerAddress);\n\n118:         require(msg.sender == _ownerAddress);\n\n127:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n148:         require(tokenId < _itemCount);\n\n151          require(\n152              allGameItemAttributes[tokenId].finiteSupply == false || \n153              (\n154                  allGameItemAttributes[tokenId].finiteSupply == true && \n155                  quantity <= allGameItemAttributes[tokenId].itemsRemaining\n156              )\n157:         );\n\n158          require(\n159              dailyAllowanceReplenishTime[msg.sender][tokenId] <= block.timestamp || \n160              quantity <= allowanceRemaining[msg.sender][tokenId]\n161:         );\n\n186:         require(isAdmin[msg.sender]);\n\n195:         require(isAdmin[msg.sender]);\n\n219:         require(isAdmin[msg.sender]);\n\n243:         require(allowedBurningAddresses[msg.sender]);\n\n301:         require(allGameItemAttributes[tokenId].transferable);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L109-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L127-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L140-L140",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L151-L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L158-L161",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L186-L186",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L195-L195",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L219-L219",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L243-L243",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L301-L301"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n90:          require(msg.sender == _ownerAddress);\n\n99:          require(msg.sender == _ownerAddress);\n\n107:         require(isAdmin[msg.sender]);\n\n119:         require(isAdmin[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L90-L90",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L99-L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L107-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L119-L119"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n86:          require(msg.sender == _ownerAddress);\n\n94:          require(msg.sender == _ownerAddress);\n\n102:         require(msg.sender == _ownerAddress);\n\n110:         require(msg.sender == _ownerAddress);\n\n119:         require(msg.sender == _ownerAddress);\n\n128:         require(isAdmin[msg.sender]);\n\n129:         require(recipients.length == amounts.length);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L86-L86",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L119-L119",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L128-L128",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L129-L129"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n168:         require(msg.sender == _ownerAddress);\n\n177:         require(msg.sender == _ownerAddress);\n\n185:         require(msg.sender == _ownerAddress);\n\n193:         require(msg.sender == _ownerAddress);\n\n202:         require(msg.sender == _ownerAddress);\n\n210:         require(msg.sender == _ownerAddress);\n\n219:         require(isAdmin[msg.sender]);\n\n227:         require(isAdmin[msg.sender]);\n\n234:         require(isAdmin[msg.sender]);\n\n235:         require(totalAccumulatedPoints[roundId] > 0);\n\n331:         require(msg.sender == _gameServerAddress);\n\n332:         require(mergingPortion <= 100);\n\n334          require(\n335              !initiatorBool ||\n336              _voltageManagerInstance.ownerVoltageReplenishTime(fighterOwner) <= block.timestamp || \n337              _voltageManagerInstance.ownerVoltage(fighterOwner) >= VOLTAGE_COST\n338:         );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L168-L168",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L177-L177",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L185-L185",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L193-L193",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L202-L202",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L210-L210",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L219-L219",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L227-L227",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L234-L234",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L235-L235",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L331-L331",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L332-L332",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L334-L338"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n65:          require(msg.sender == _ownerAddress);\n\n74:          require(msg.sender == _ownerAddress);\n\n83:          require(isAdmin[msg.sender]);\n\n94:          require(ownerVoltage[msg.sender] < 100);\n\n95:          require(_gameItemsContractInstance.balanceOf(msg.sender, 0) > 0);\n\n106:         require(spender == msg.sender || allowedVoltageSpenders[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L65-L65",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L74-L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L83-L83",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L95-L95",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L106-L106"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Adding a `return` statement when the function defines a named return variable, is redundant",
      "description": "Once the return variable has been assigned (or has its default value), there is no need to explicitly return it at the end of the function, since it's returned automatically.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n185          return attributeProbabilityIndex;\n186      }\n187  }\n188: \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L185-L188"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Array indices should be referenced via `enum`s rather than via numeric literals",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n49:              attributeProbabilities[0][attributes[i]] = probabilities[i];\n\n113:                 finalAttributeProbabilityIndexes[0],\n\n114:                 finalAttributeProbabilityIndexes[1],\n\n115:                 finalAttributeProbabilityIndexes[2],\n\n116:                 finalAttributeProbabilityIndexes[3],\n\n117:                 finalAttributeProbabilityIndexes[4],\n\n118:                 finalAttributeProbabilityIndexes[5]\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L49-L49",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L113-L113",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L114-L114",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L115-L115",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L116-L116",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L117-L117",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L118-L118"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n110:         numElements[0] = 3;\n\n201:             numToMint[0], \n\n202:             numToMint[1],\n\n203:             nftsClaimed[msg.sender][0],\n\n204:             nftsClaimed[msg.sender][1]\n\n207:         uint16 totalToMint = uint16(numToMint[0] + numToMint[1]);\n\n207:         uint16 totalToMint = uint16(numToMint[0] + numToMint[1]);\n\n209:         nftsClaimed[msg.sender][0] += numToMint[0];\n\n209:         nftsClaimed[msg.sender][0] += numToMint[0];\n\n210:         nftsClaimed[msg.sender][1] += numToMint[1];\n\n210:         nftsClaimed[msg.sender][1] += numToMint[1];\n\n217:                 i < numToMint[0] ? 0 : 1,\n\n499:         if (customAttributes[0] == 100) {\n\n503:             element = customAttributes[0];\n\n504:             weight = customAttributes[1];\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L201-L201",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L202-L202",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L203-L203",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L204-L204",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L207-L207",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L207-L207",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L209-L209",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L209-L209",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L210-L210",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L210-L210",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L217-L217",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L499-L499",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L503-L503",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L504-L504"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n157:         rankedNrnDistribution[0] = 5000 * 10**18;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L157-L157"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Array is `push()`ed but not `pop()`ed",
      "description": "Array entries are added but are never removed. Consider whether this should be the case, or whether there should be a maximum, or whether old entries should be removed. Cases where there are specific potential problems will be flagged separately under a different issue.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n516:         fighters.push(\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L516-L516"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n220:         allGameItemAttributes.push(\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L220-L220"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Common functions should be refactored to a common base contract",
      "description": "The functions below have the same implementation as is seen in other files. The functions should be refactored into functions of a common base contract",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n61       function transferOwnership(address newOwnerAddress) external {\n62           require(msg.sender == _ownerAddress);\n63           _ownerAddress = newOwnerAddress;\n64:      }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L61-L64"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n120      function transferOwnership(address newOwnerAddress) external {\n121          require(msg.sender == _ownerAddress);\n122          _ownerAddress = newOwnerAddress;\n123:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L120-L123"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n108      function transferOwnership(address newOwnerAddress) external {\n109          require(msg.sender == _ownerAddress);\n110          _ownerAddress = newOwnerAddress;\n111:     }\n\n117      function adjustAdminAccess(address adminAddress, bool access) external {\n118          require(msg.sender == _ownerAddress);\n119          isAdmin[adminAddress] = access;\n120:     }  \n\n139      function instantiateNeuronContract(address nrnAddress) external {\n140          require(msg.sender == _ownerAddress);\n141          _neuronInstance = Neuron(nrnAddress);\n142:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L108-L111",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L117-L120",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L139-L142"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n89       function transferOwnership(address newOwnerAddress) external {\n90           require(msg.sender == _ownerAddress);\n91           _ownerAddress = newOwnerAddress;\n92:      }\n\n98       function adjustAdminAccess(address adminAddress, bool access) external {\n99           require(msg.sender == _ownerAddress);\n100          isAdmin[adminAddress] = access;\n101:     }   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L89-L92",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L98-L101"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n85       function transferOwnership(address newOwnerAddress) external {\n86           require(msg.sender == _ownerAddress);\n87           _ownerAddress = newOwnerAddress;\n88:      }\n\n118      function adjustAdminAccess(address adminAddress, bool access) external {\n119          require(msg.sender == _ownerAddress);\n120          isAdmin[adminAddress] = access;\n121:     }  \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L85-L88",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L118-L121"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n167      function transferOwnership(address newOwnerAddress) external {\n168          require(msg.sender == _ownerAddress);\n169          _ownerAddress = newOwnerAddress;\n170:     }\n\n176      function adjustAdminAccess(address adminAddress, bool access) external {\n177          require(msg.sender == _ownerAddress);\n178          isAdmin[adminAddress] = access;\n179:     }  \n\n201      function instantiateNeuronContract(address nrnAddress) external {\n202          require(msg.sender == _ownerAddress);\n203          _neuronInstance = Neuron(nrnAddress);\n204:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L167-L170",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L176-L179",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L201-L204"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n64       function transferOwnership(address newOwnerAddress) external {\n65           require(msg.sender == _ownerAddress);\n66           _ownerAddress = newOwnerAddress;\n67:      }\n\n73       function adjustAdminAccess(address adminAddress, bool access) external {\n74           require(msg.sender == _ownerAddress);\n75           isAdmin[adminAddress] = access;\n76:      }  \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L64-L67",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L73-L76"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding a block/deny-list",
      "description": "Doing so will significantly increase centralization, but will help to prevent hackers from using stolen tokens",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit IERC721 handles tokens\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit IERC1155 handles tokens\n10   contract GameItems is ERC1155 {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16       /// @notice Event emitted when a game item is bought.\n17       /// @param buyer The address of the buyer.\n18       /// @param tokenId The id of the game item.\n19:      /// @param quantity The quantity of the game item.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit IERC20 handles tokens\n11   contract Neuron is ERC20, AccessControl {\n12   \n13       /*//////////////////////////////////////////////////////////////\n14                                   EVENTS\n15       //////////////////////////////////////////////////////////////*/\n16   \n17:      /// @notice Event emitted when tokens are claimed.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L11-L17"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit RankedBattle handles tokens\n16   contract RankedBattle {\n17   \n18:      /// @dev Extend functionality of the FixedPointMathLib library to the uint data type.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit StakeAtRisk handles tokens\n10   contract StakeAtRisk {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice Event emitted when NRNs are reclaimed from this contract (after a win in ranked).\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit VoltageManager handles tokens\n9    contract VoltageManager {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when voltage amount is altered.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L9-L15"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding emergency-stop functionality",
      "description": "Adding a way to quickly halt protocol functionality in an emergency, rather than having to pause individual contracts one-by-one, will make in-progress hack mitigation faster and much less stressful.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n10   contract AiArenaHelper {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                               STATE VARIABLES\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice List of attributes\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n9    contract MergingPool {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when merging pool points are added.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L9-L15"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n16   contract RankedBattle {\n17   \n18:      /// @dev Extend functionality of the FixedPointMathLib library to the uint data type.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n9    contract VoltageManager {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when voltage amount is altered.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L9-L15"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding formal verification proofs",
      "description": "Consider using formal verification to mathematically prove that your code does what is intended, and does not have any edge cases with unexpected behavior. The solidity compiler itself has this functionality [built in](https://docs.soliditylang.org/en/latest/smtchecker.html#smtchecker-and-formal-verification)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: Various Files\n```\n",
          "loc": []
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding validation of user inputs",
      "description": "There are no validations done on the arguments below. Consider that the Solidity [documentation](https://docs.soliditylang.org/en/latest/control-structures.html#panic-via-assert-and-error-via-require) states that `Properly functioning code should never create a Panic, not even on invalid external input. If this happens, then there is a bug in your contract which you should fix`. This means that there should be explicit checks for expected ranges of inputs. Underflows/overflows result in panics should not be used as range checks, and allowing funds to be sent to  `0x0`, which is the default value of address variables and has many gotchas, should be avoided.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit newOwnerAddress\n61       function transferOwnership(address newOwnerAddress) external {\n62           require(msg.sender == _ownerAddress);\n63           _ownerAddress = newOwnerAddress;\n64:      }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L61-L64"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit newOwnerAddress\n120      function transferOwnership(address newOwnerAddress) external {\n121          require(msg.sender == _ownerAddress);\n122          _ownerAddress = newOwnerAddress;\n123:     }\n\n/// @audit newStaker\n139      function addStaker(address newStaker) external {\n140          require(msg.sender == _ownerAddress);\n141          hasStakerRole[newStaker] = true;\n142:     }\n\n/// @audit aiArenaHelperAddress\n147      function instantiateAIArenaHelperContract(address aiArenaHelperAddress) external {\n148          require(msg.sender == _ownerAddress);\n149          _aiArenaHelperInstance = AiArenaHelper(aiArenaHelperAddress);\n150:     }\n\n/// @audit mintpassAddress\n155      function instantiateMintpassContract(address mintpassAddress) external {\n156          require(msg.sender == _ownerAddress);\n157          _mintpassInstance = AAMintPass(mintpassAddress);\n158:     }\n\n/// @audit neuronAddress\n163      function instantiateNeuronContract(address neuronAddress) external {\n164          require(msg.sender == _ownerAddress);\n165          _neuronInstance = Neuron(neuronAddress);\n166:     }\n\n/// @audit mergingPoolAddress\n171      function setMergingPoolAddress(address mergingPoolAddress) external {\n172          require(msg.sender == _ownerAddress);\n173          _mergingPoolAddress = mergingPoolAddress;\n174:     }\n\n/// @audit from\n338      function transferFrom(\n339          address from, \n340          address to, \n341          uint256 tokenId\n342      ) \n343          public \n344          override(ERC721, IERC721)\n345      {\n346          require(_ableToTransfer(tokenId, to));\n347          _transfer(from, to, tokenId);\n348:     }\n\n/// @audit from\n355      function safeTransferFrom(\n356          address from, \n357          address to, \n358          uint256 tokenId\n359      ) \n360          public \n361          override(ERC721, IERC721)\n362      {\n363          require(_ableToTransfer(tokenId, to));\n364          _safeTransfer(from, to, tokenId, \"\");\n365:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L120-L123",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L139-L142",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L147-L150",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L155-L158",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L163-L166",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L171-L174",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L338-L348",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L355-L365"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit newOwnerAddress\n108      function transferOwnership(address newOwnerAddress) external {\n109          require(msg.sender == _ownerAddress);\n110          _ownerAddress = newOwnerAddress;\n111:     }\n\n/// @audit adminAddress\n117      function adjustAdminAccess(address adminAddress, bool access) external {\n118          require(msg.sender == _ownerAddress);\n119          isAdmin[adminAddress] = access;\n120:     }  \n\n/// @audit nrnAddress\n139      function instantiateNeuronContract(address nrnAddress) external {\n140          require(msg.sender == _ownerAddress);\n141          _neuronInstance = Neuron(nrnAddress);\n142:     }\n\n/// @audit newBurningAddress\n185      function setAllowedBurningAddresses(address newBurningAddress) public {\n186          require(isAdmin[msg.sender]);\n187          allowedBurningAddresses[newBurningAddress] = true;\n188:     }\n\n/// @audit account\n242      function burn(address account, uint256 tokenId, uint256 amount) public {\n243          require(allowedBurningAddresses[msg.sender]);\n244          _burn(account, tokenId, amount);\n245:     }\n\n/// @audit owner\n268      function getAllowanceRemaining(address owner, uint256 tokenId) public view returns (uint256) {\n269          uint256 remaining = allowanceRemaining[owner][tokenId];\n270          if (dailyAllowanceReplenishTime[owner][tokenId] <= block.timestamp) {\n271              remaining = allGameItemAttributes[tokenId].dailyAllowance;\n272          }\n273          return remaining;\n274:     }\n\n/// @audit to\n/// @audit data\n/// @audit from\n291      function safeTransferFrom(\n292          address from, \n293          address to, \n294          uint256 tokenId,\n295          uint256 amount,\n296          bytes memory data\n297      ) \n298          public \n299          override(ERC1155)\n300      {\n301          require(allGameItemAttributes[tokenId].transferable);\n302          super.safeTransferFrom(from, to, tokenId, amount, data);\n303:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L108-L111",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L117-L120",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L139-L142",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L185-L188",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L242-L245",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L268-L274",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L291-L303",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L291-L303",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L291-L303"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit newOwnerAddress\n89       function transferOwnership(address newOwnerAddress) external {\n90           require(msg.sender == _ownerAddress);\n91           _ownerAddress = newOwnerAddress;\n92:      }\n\n/// @audit adminAddress\n98       function adjustAdminAccess(address adminAddress, bool access) external {\n99           require(msg.sender == _ownerAddress);\n100          isAdmin[adminAddress] = access;\n101:     }   \n\n/// @audit claimer\n172      function getUnclaimedRewards(address claimer) external view returns(uint256) {\n173          uint256 winnersLength;\n174          uint256 numRewards = 0;\n175          uint32 lowerBound = numRoundsClaimed[claimer];\n176          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n177              winnersLength = winnerAddresses[currentRound].length;\n178              for (uint32 j = 0; j < winnersLength; j++) {\n179                  if (claimer == winnerAddresses[currentRound][j]) {\n180                      numRewards += 1;\n181                  }\n182              }\n183          }\n184          return numRewards;\n185:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L89-L92",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L98-L101",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L172-L185"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit newOwnerAddress\n85       function transferOwnership(address newOwnerAddress) external {\n86           require(msg.sender == _ownerAddress);\n87           _ownerAddress = newOwnerAddress;\n88:      }\n\n/// @audit newMinterAddress\n93       function addMinter(address newMinterAddress) external {\n94           require(msg.sender == _ownerAddress);\n95           _setupRole(MINTER_ROLE, newMinterAddress);\n96:      }\n\n/// @audit newStakerAddress\n101      function addStaker(address newStakerAddress) external {\n102          require(msg.sender == _ownerAddress);\n103          _setupRole(STAKER_ROLE, newStakerAddress);\n104:     }\n\n/// @audit newSpenderAddress\n109      function addSpender(address newSpenderAddress) external {\n110          require(msg.sender == _ownerAddress);\n111          _setupRole(SPENDER_ROLE, newSpenderAddress);\n112:     }\n\n/// @audit adminAddress\n118      function adjustAdminAccess(address adminAddress, bool access) external {\n119          require(msg.sender == _ownerAddress);\n120          isAdmin[adminAddress] = access;\n121:     }  \n\n/// @audit to\n155      function mint(address to, uint256 amount) public virtual {\n156          require(totalSupply() + amount < MAX_SUPPLY, \"Trying to mint more than the max supply\");\n157          require(hasRole(MINTER_ROLE, msg.sender), \"ERC20: must have minter role to mint\");\n158          _mint(to, amount);\n159:     }\n\n/// @audit account\n171      function approveSpender(address account, uint256 amount) public {\n172          require(\n173              hasRole(SPENDER_ROLE, msg.sender), \n174              \"ERC20: must have spender role to approve spending\"\n175          );\n176          _approve(account, msg.sender, amount);\n177:     }\n\n/// @audit spender\n/// @audit owner\n184      function approveStaker(address owner, address spender, uint256 amount) public {\n185          require(\n186              hasRole(STAKER_ROLE, msg.sender), \n187              \"ERC20: must have staker role to approve staking\"\n188          );\n189          _approve(owner, spender, amount);\n190:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L85-L88",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L93-L96",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L101-L104",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L109-L112",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L118-L121",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L155-L159",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L171-L177",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L184-L190",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L184-L190"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit newOwnerAddress\n167      function transferOwnership(address newOwnerAddress) external {\n168          require(msg.sender == _ownerAddress);\n169          _ownerAddress = newOwnerAddress;\n170:     }\n\n/// @audit adminAddress\n176      function adjustAdminAccess(address adminAddress, bool access) external {\n177          require(msg.sender == _ownerAddress);\n178          isAdmin[adminAddress] = access;\n179:     }  \n\n/// @audit gameServerAddress\n184      function setGameServerAddress(address gameServerAddress) external {\n185          require(msg.sender == _ownerAddress);\n186          _gameServerAddress = gameServerAddress;\n187:     }\n\n/// @audit stakeAtRiskAddress\n192      function setStakeAtRiskAddress(address stakeAtRiskAddress) external {\n193          require(msg.sender == _ownerAddress);\n194          _stakeAtRiskAddress = stakeAtRiskAddress;\n195          _stakeAtRiskInstance = StakeAtRisk(_stakeAtRiskAddress);\n196:     }\n\n/// @audit nrnAddress\n201      function instantiateNeuronContract(address nrnAddress) external {\n202          require(msg.sender == _ownerAddress);\n203          _neuronInstance = Neuron(nrnAddress);\n204:     }\n\n/// @audit mergingPoolAddress\n209      function instantiateMergingPoolContract(address mergingPoolAddress) external {\n210          require(msg.sender == _ownerAddress);\n211          _mergingPoolInstance = MergingPool(mergingPoolAddress);\n212:     }\n\n/// @audit claimer\n386      function getUnclaimedNRN(address claimer) public view returns(uint256) {\n387          uint256 claimableNRN = 0;\n388          uint256 nrnDistribution;   \n389          uint32 lowerBound = numRoundsClaimed[claimer];\n390          for (uint32 i = lowerBound; i < roundId; i++) {\n391              nrnDistribution = getNrnDistribution(i);\n392              claimableNRN += (\n393                  accumulatedPointsPerAddress[claimer][i] * nrnDistribution\n394              ) / totalAccumulatedPoints[i];\n395          }\n396          return claimableNRN;\n397:     } \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L167-L170",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L176-L179",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L184-L187",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L192-L196",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L201-L204",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L209-L212",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L386-L397"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit fighterOwner\n93       function reclaimNRN(uint256 nrnToReclaim, uint256 fighterId, address fighterOwner) external {\n94           require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n95           require(\n96               stakeAtRisk[roundId][fighterId] >= nrnToReclaim, \n97               \"Fighter does not have enough stake at risk\"\n98           );\n99   \n100          bool success = _neuronInstance.transfer(_rankedBattleAddress, nrnToReclaim);\n101          if (success) {\n102              stakeAtRisk[roundId][fighterId] -= nrnToReclaim;\n103              totalStakeAtRisk[roundId] -= nrnToReclaim;\n104              amountLost[fighterOwner] -= nrnToReclaim;\n105              emit ReclaimedStake(fighterId, nrnToReclaim);\n106          }\n107:     }\n\n/// @audit fighterOwner\n115      function updateAtRiskRecords(\n116          uint256 nrnToPlaceAtRisk, \n117          uint256 fighterId, \n118          address fighterOwner\n119      ) \n120          external \n121      {\n122          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n123          stakeAtRisk[roundId][fighterId] += nrnToPlaceAtRisk;\n124          totalStakeAtRisk[roundId] += nrnToPlaceAtRisk;\n125          amountLost[fighterOwner] += nrnToPlaceAtRisk;\n126          emit IncreasedStakeAtRisk(fighterId, nrnToPlaceAtRisk);\n127:     }   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L93-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit newOwnerAddress\n64       function transferOwnership(address newOwnerAddress) external {\n65           require(msg.sender == _ownerAddress);\n66           _ownerAddress = newOwnerAddress;\n67:      }\n\n/// @audit adminAddress\n73       function adjustAdminAccess(address adminAddress, bool access) external {\n74           require(msg.sender == _ownerAddress);\n75           isAdmin[adminAddress] = access;\n76:      }  \n\n/// @audit allowedVoltageSpender\n82       function adjustAllowedVoltageSpenders(address allowedVoltageSpender, bool allowed) external {\n83           require(isAdmin[msg.sender]);\n84           allowedVoltageSpenders[allowedVoltageSpender] = allowed;\n85:      }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L64-L67",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L73-L76",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L82-L85"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider bounding input array length",
      "description": "The functions below take in an unbounded array, and make function calls for entries in the array. While the function will revert if it eventually runs out of gas, it may be a nicer user experience to `require()` that the length of the array is below some reasonable maximum, so that the user doesn't have to use up a full transaction's gas only to see that the transaction reverts.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n99               for (uint8 i = 0; i < attributesLength; i++) {\n100                  if (\n101                    i == 0 && iconsType == 2 || // Custom icons head (beta helmet)\n102                    i == 1 && iconsType > 0 || // Custom icons eyes (red diamond)\n103                    i == 4 && iconsType == 3 // Custom icons hands (bowling ball)\n104                  ) {\n105                      finalAttributeProbabilityIndexes[i] = 50;\n106                  } else {\n107                      uint256 rarityRank = (dna / attributeToDnaDivisor[attributes[i]]) % 100;\n108                      uint256 attributeIndex = dnaToIndex(generation, rarityRank, attributes[i]);\n109                      finalAttributeProbabilityIndexes[i] = attributeIndex;\n110                  }\n111:             }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L99-L111"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n211          for (uint16 i = 0; i < totalToMint; i++) {\n212              _createNewFighter(\n213                  msg.sender, \n214                  uint256(keccak256(abi.encode(msg.sender, fighters.length))),\n215                  modelHashes[i], \n216                  modelTypes[i],\n217                  i < numToMint[0] ? 0 : 1,\n218                  0,\n219                  [uint256(100), uint256(100)]\n220              );\n221:         }\n\n249          for (uint16 i = 0; i < mintpassIdsToBurn.length; i++) {\n250              require(msg.sender == _mintpassInstance.ownerOf(mintpassIdsToBurn[i]));\n251              _mintpassInstance.burn(mintpassIdsToBurn[i]);\n252              _createNewFighter(\n253                  msg.sender, \n254                  uint256(keccak256(abi.encode(mintPassDnas[i]))), \n255                  modelHashes[i], \n256                  modelTypes[i],\n257                  fighterTypes[i],\n258                  iconsTypes[i],\n259                  [uint256(100), uint256(100)]\n260              );\n261:         }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L211-L221",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249-L261"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n131          for (uint32 i = 0; i < recipientsLength; i++) {\n132              _approve(treasuryAddress, recipients[i], amounts[i]);\n133:         }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L131-L133"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider defining system-wide constants in a single file",
      "description": "`ContA.X = 0`, `ContB.Y = 1`, `ContC.Z = 2` -> `ContConstants.X = 0`, `ContConstants.Y = 1`, `ContConstants.Z = 2`; `ContA.X = X`, `ContB.Y = Y`, `ContC.Z = Z`,",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n33:      uint8 public constant MAX_FIGHTERS_ALLOWED = 10;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L33-L33"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n53:      uint8 public constant VOLTAGE_COST = 10;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L53-L53"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider disallowing transfers to `address(this)`",
      "description": "Consider preventing a contract's tokens from being transferred to the contract itself",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n338      function transferFrom(\n339          address from, \n340          address to, \n341          uint256 tokenId\n342      ) \n343          public \n344          override(ERC721, IERC721)\n345:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L338-L345"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider emitting an event at the end of the constructor",
      "description": "This will allow users to easily exactly pinpoint when and by whom a contract was constructed",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n41:      constructor(uint8[][] memory probabilities) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L41-L41"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n104      constructor(address ownerAddress, address delegatedAddress, address treasuryAddress_)\n105          ERC721(\"AI Arena Fighter\", \"FTR\")\n106:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L104-L106"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n95:      constructor(address ownerAddress, address treasuryAddress_) ERC1155(\"https://ipfs.io/ipfs/\") {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L95-L95"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n71       constructor(\n72           address ownerAddress, \n73           address rankedBattleAddress, \n74           address fighterFarmAddress\n75:      ) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L71-L75"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n68       constructor(address ownerAddress, address treasuryAddress_, address contributorAddress)\n69           ERC20(\"Neuron\", \"NRN\")\n70:      {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L68-L70"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n146      constructor(\n147        address ownerAddress, \n148        address gameServerAddress,\n149        address fighterFarmAddress,\n150        address voltageManagerAddress\n151:     ) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L146-L151"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n60       constructor(\n61           address treasuryAddress_,\n62           address nrnAddress,\n63           address rankedBattleAddress\n64:      ) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L60-L64"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n51:      constructor(address ownerAddress, address gameItemsContractAddress) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L51-L51"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider making contracts `Upgradeable`",
      "description": "This allows for bugs to be fixed in production, at the expense of _significantly_ increasing centralization.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n10   contract AiArenaHelper {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                               STATE VARIABLES\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice List of attributes\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n10   contract GameItems is ERC1155 {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16       /// @notice Event emitted when a game item is bought.\n17       /// @param buyer The address of the buyer.\n18       /// @param tokenId The id of the game item.\n19:      /// @param quantity The quantity of the game item.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n9    contract MergingPool {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when merging pool points are added.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L9-L15"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n11   contract Neuron is ERC20, AccessControl {\n12   \n13       /*//////////////////////////////////////////////////////////////\n14                                   EVENTS\n15       //////////////////////////////////////////////////////////////*/\n16   \n17:      /// @notice Event emitted when tokens are claimed.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L11-L17"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n16   contract RankedBattle {\n17   \n18:      /// @dev Extend functionality of the FixedPointMathLib library to the uint data type.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n10   contract StakeAtRisk {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice Event emitted when NRNs are reclaimed from this contract (after a win in ranked).\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n9    contract VoltageManager {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when voltage amount is altered.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L9-L15"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider moving `msg.sender` checks to common `modifier`s",
      "description": "Note that these may not be specifically checks against the _address_ of `msg.sender`, but may also be checks against behavior of the address, such as ERC165 checks.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n62:          require(msg.sender == _ownerAddress);\n\n69:          require(msg.sender == _ownerAddress);\n\n132:         require(msg.sender == _ownerAddress);\n\n145:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L62-L62",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L69-L69",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L132-L132",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L145-L145"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n121:         require(msg.sender == _ownerAddress);\n\n130:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n148:         require(msg.sender == _ownerAddress);\n\n156:         require(msg.sender == _ownerAddress);\n\n164:         require(msg.sender == _ownerAddress);\n\n172:         require(msg.sender == _ownerAddress);\n\n181:         require(msg.sender == _delegatedAddress);\n\n250:             require(msg.sender == _mintpassInstance.ownerOf(mintpassIdsToBurn[i]));\n\n269:         require(hasStakerRole[msg.sender]);\n\n290:         require(msg.sender == ownerOf(tokenId));\n\n321:         require(msg.sender == _mergingPoolAddress);\n\n371:         require(msg.sender == ownerOf(tokenId));\n\n373:         require(_neuronInstance.balanceOf(msg.sender) >= rerollCost, \"Not enough NRN for reroll\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L121-L121",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L130-L130",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L140-L140",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L156-L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L164-L164",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L172-L172",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L181-L181",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L250-L250",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L269-L269",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L290-L290",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L321-L321",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L371-L371",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L373-L373"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n109:         require(msg.sender == _ownerAddress);\n\n118:         require(msg.sender == _ownerAddress);\n\n127:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n150:         require(_neuronInstance.balanceOf(msg.sender) >= price, \"Not enough NRN for purchase\");\n\n158          require(\n159              dailyAllowanceReplenishTime[msg.sender][tokenId] <= block.timestamp || \n160              quantity <= allowanceRemaining[msg.sender][tokenId]\n161:         );\n\n186:         require(isAdmin[msg.sender]);\n\n195:         require(isAdmin[msg.sender]);\n\n219:         require(isAdmin[msg.sender]);\n\n243:         require(allowedBurningAddresses[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L109-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L127-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L140-L140",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L150-L150",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L158-L161",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L186-L186",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L195-L195",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L219-L219",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L243-L243"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n90:          require(msg.sender == _ownerAddress);\n\n99:          require(msg.sender == _ownerAddress);\n\n107:         require(isAdmin[msg.sender]);\n\n119:         require(isAdmin[msg.sender]);\n\n196:         require(msg.sender == _rankedBattleAddress, \"Not Ranked Battle contract address\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L90-L90",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L99-L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L107-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L119-L119",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L196-L196"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n86:          require(msg.sender == _ownerAddress);\n\n94:          require(msg.sender == _ownerAddress);\n\n102:         require(msg.sender == _ownerAddress);\n\n110:         require(msg.sender == _ownerAddress);\n\n119:         require(msg.sender == _ownerAddress);\n\n128:         require(isAdmin[msg.sender]);\n\n139          require(\n140              allowance(treasuryAddress, msg.sender) >= amount, \n141              \"ERC20: claim amount exceeds allowance\"\n142:         );\n\n157:         require(hasRole(MINTER_ROLE, msg.sender), \"ERC20: must have minter role to mint\");\n\n172          require(\n173              hasRole(SPENDER_ROLE, msg.sender), \n174              \"ERC20: must have spender role to approve spending\"\n175:         );\n\n185          require(\n186              hasRole(STAKER_ROLE, msg.sender), \n187              \"ERC20: must have staker role to approve staking\"\n188:         );\n\n197          require(\n198              allowance(account, msg.sender) >= amount, \n199              \"ERC20: burn amount exceeds allowance\"\n200:         );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L86-L86",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L119-L119",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L128-L128",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L139-L142",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L157-L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L172-L175",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L185-L188",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L197-L200"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n168:         require(msg.sender == _ownerAddress);\n\n177:         require(msg.sender == _ownerAddress);\n\n185:         require(msg.sender == _ownerAddress);\n\n193:         require(msg.sender == _ownerAddress);\n\n202:         require(msg.sender == _ownerAddress);\n\n210:         require(msg.sender == _ownerAddress);\n\n219:         require(isAdmin[msg.sender]);\n\n227:         require(isAdmin[msg.sender]);\n\n234:         require(isAdmin[msg.sender]);\n\n246:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n247:         require(_neuronInstance.balanceOf(msg.sender) >= amount, \"Stake amount exceeds balance\");\n\n271:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n295:         require(numRoundsClaimed[msg.sender] < roundId, \"Already claimed NRNs for this period\");\n\n331:         require(msg.sender == _gameServerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L168-L168",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L177-L177",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L185-L185",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L193-L193",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L202-L202",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L210-L210",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L219-L219",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L227-L227",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L234-L234",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L246-L246",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L247-L247",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L271-L271",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L295-L295",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L331-L331"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n79:          require(msg.sender == _rankedBattleAddress, \"Not authorized to set new round\");\n\n94:          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n122:         require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L79-L79",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L122-L122"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n65:          require(msg.sender == _ownerAddress);\n\n74:          require(msg.sender == _ownerAddress);\n\n83:          require(isAdmin[msg.sender]);\n\n94:          require(ownerVoltage[msg.sender] < 100);\n\n95:          require(_gameItemsContractInstance.balanceOf(msg.sender, 0) > 0);\n\n106:         require(spender == msg.sender || allowedVoltageSpenders[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L65-L65",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L74-L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L83-L83",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L95-L95",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L106-L106"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider moving duplicated strings to constants",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n246:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n271:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L246-L246",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L271-L271"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n94:          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n122:         require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L122-L122"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider providing a ranged getter for array state variables",
      "description": "While the compiler automatically provides a getter for accessing single elements within a public state variable array, it doesn't provide a way to fetch the whole array, or subsets thereof. Consider adding a function to allow the fetching of slices of the array, especially if the contract doesn't already have multicall functionality.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n17:      string[] public attributes = [\"head\", \"eyes\", \"mouth\", \"body\", \"hands\", \"feet\"];\n\n20:      uint8[] public defaultAttributeDivisor = [2, 3, 5, 7, 11, 13];\n\n30:      mapping(uint256 => mapping(string => uint8[])) public attributeProbabilities;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L17-L17",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L20-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L30-L30"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n36:      uint8[2] public maxRerollsAllowed = [3, 3];\n\n42:      uint8[2] public generation = [0, 0];\n\n69:      FighterOps.Fighter[] public fighters;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L36-L36",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L42-L42",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L69-L69"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n55:      GameItemAttributes[] public allGameItemAttributes;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L55-L55"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n54:      mapping(uint256 => address[]) public winnerAddresses;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L54-L54"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider returning a `struct` rather than having multiple `return` values",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n421      function getAllFighterInfo(\n422          uint256 tokenId\n423      )\n424          public\n425          view\n426          returns (\n427              address,\n428              uint256[6] memory,\n429              uint256,\n430              uint256,\n431              string memory,\n432              string memory,\n433              uint16\n434          )\n435:     {\n\n462      function _createFighterBase(\n463          uint256 dna, \n464          uint8 fighterType\n465      ) \n466          private \n467          view \n468          returns (uint256, uint256, uint256) \n469:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L421-L435",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L462-L469"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n354:     function getBattleRecord(uint256 tokenId) external view returns(uint32, uint32, uint32) {\n\n364:     function getCurrentStakingData() external view returns(uint256, uint256, uint256) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L354-L354",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L364-L364"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider splitting complex checks into multiple steps",
      "description": "Assign the expression's parts to intermediate local variables, and check against those instead",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n152              allGameItemAttributes[tokenId].finiteSupply == false || \n153              (\n154                  allGameItemAttributes[tokenId].finiteSupply == true && \n155                  quantity <= allGameItemAttributes[tokenId].itemsRemaining\n156:             )\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L152-L156"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using `AccessControlDefaultAdminRules` rather than `AccessControl`",
      "description": "`AccessControlDefaultAdminRules` implements multiple [security best practices](https://docs.openzeppelin.com/contracts/4.x/api/access#AccessControlDefaultAdminRules) on top of the normal `AccessControl` rules, so consider using it instead, or adding it to the contract inheritance constructor tree of any contract that extends it",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n11   contract Neuron is ERC20, AccessControl {\n12   \n13       /*//////////////////////////////////////////////////////////////\n14                                   EVENTS\n15       //////////////////////////////////////////////////////////////*/\n16   \n17:      /// @notice Event emitted when tokens are claimed.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L11-L17"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using `delete` rather than assigning zero/false to clear values",
      "description": "The `delete` keyword more closely matches the semantics of what is being done, and draws more attention to the changing of state, which may lead to a more thorough audit of its associated logic",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n127:             fighterPoints[winners[i]] = 0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L127-L127"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using a `struct` rather than having many function input parameters",
      "description": "Often times, a subset of the parameters would be more clear if they were passed as a struct",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n233      function redeemMintPass(\n234          uint256[] calldata mintpassIdsToBurn,\n235          uint8[] calldata fighterTypes,\n236          uint8[] calldata iconsTypes,\n237          string[] calldata mintPassDnas,\n238          string[] calldata modelHashes,\n239          string[] calldata modelTypes\n240      ) \n241          external \n242:     {\n\n484      function _createNewFighter(\n485          address to, \n486          uint256 dna, \n487          string memory modelHash,\n488          string memory modelType, \n489          uint8 fighterType,\n490          uint8 iconsType,\n491          uint256[2] memory customAttributes\n492      ) \n493          private \n494:     {  \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L233-L242",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L484-L494"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n208      function createGameItem(\n209          string memory name_,\n210          string memory tokenURI,\n211          bool finiteSupply,\n212          bool transferable,\n213          uint256 itemsRemaining,\n214          uint256 itemPrice,\n215          uint16 dailyAllowance\n216      ) \n217          public \n218:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L208-L218"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n322      function updateBattleRecord(\n323          uint256 tokenId, \n324          uint256 mergingPortion,\n325          uint8 battleResult,\n326          uint256 eloFactor,\n327          bool initiatorBool\n328      ) \n329          external \n330:     {   \n\n416      function _addResultPoints(\n417          uint8 battleResult, \n418          uint256 tokenId, \n419          uint256 eloFactor, \n420          uint256 mergingPortion,\n421          address fighterOwner\n422      ) \n423          private \n424:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L322-L330",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L416-L424"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using descriptive `constant`s when passing zero as a function argument",
      "description": "Passing zero as a function argument can sometimes result in a security issue (e.g. passing zero as the slippage parameter). Consider using a `constant` variable with a descriptive name, so it's clear that the argument is intentionally being used, and for the right reasons.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n45:          addAttributeProbabilities(0, probabilities);\n\n149:             attributeProbabilities[generation][attributes[i]] = new uint8[](0);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L45-L45",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L149-L149"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n218:                 0,\n\n327:             0,\n\n328:             0,\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L218-L218",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L327-L327",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L328-L328"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n95:          require(_gameItemsContractInstance.balanceOf(msg.sender, 0) > 0);\n\n96:          _gameItemsContractInstance.burn(msg.sender, 0, 1);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L95-L95",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named function arguments",
      "description": "When calling functions in external contracts with multiple arguments, consider using [named](https://docs.soliditylang.org/en/latest/control-structures.html#function-calls-with-named-parameters) function parameters, rather than positional ones.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n383              fighters[tokenId].physicalAttributes = _aiArenaHelperInstance.createPhysicalAttributes(\n384                  newDna,\n385                  generation[fighterType],\n386                  fighters[tokenId].iconsType,\n387                  fighters[tokenId].dendroidBool\n388:             );\n\n510          FighterOps.FighterPhysicalAttributes memory attrs = _aiArenaHelperInstance.createPhysicalAttributes(\n511              newDna,\n512              generation[fighterType],\n513              iconsType,\n514              dendroidBool\n515:         );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L383-L388",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L510-L515"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n154                      _fighterFarmInstance.mintFromMergingPool(\n155                          msg.sender,\n156                          modelURIs[claimIndex],\n157                          modelTypes[claimIndex],\n158                          customAttributes[claimIndex]\n159:                     );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L154-L159"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n254:                 _fighterFarmInstance.updateFighterStaking(tokenId, true);\n\n286:                 _fighterFarmInstance.updateFighterStaking(tokenId, false);\n\n308:             _neuronInstance.mint(msg.sender, claimableNRN);\n\n346:             _voltageManagerInstance.spendVoltage(fighterOwner, VOLTAGE_COST);\n\n451:             _mergingPoolInstance.addPoints(tokenId, mergingPoints);\n\n461:                 _stakeAtRiskInstance.reclaimNRN(curStakeAtRisk, tokenId, fighterOwner);\n\n495:                     _stakeAtRiskInstance.updateAtRiskRecords(curStakeAtRisk, tokenId, fighterOwner);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L254-L254",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L286-L286",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L308-L308",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L346-L346",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L451-L451",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L461-L461",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L495-L495"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n95:          require(_gameItemsContractInstance.balanceOf(msg.sender, 0) > 0);\n\n96:          _gameItemsContractInstance.burn(msg.sender, 0, 1);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L95-L95",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named mappings",
      "description": "Consider moving to solidity version 0.8.18 or later, and using [named mappings](https://ethereum.stackexchange.com/a/145555) to make it easier to understand the purpose of each mapping",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n30:      mapping(uint256 => mapping(string => uint8[])) public attributeProbabilities;\n\n30:      mapping(uint256 => mapping(string => uint8[])) public attributeProbabilities;\n\n33:      mapping(string => uint8) public attributeToDnaDivisor;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L30-L30",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L30-L30",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L33-L33"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n76:      mapping(uint256 => bool) public fighterStaked;\n\n79:      mapping(uint256 => uint8) public numRerolls;\n\n82:      mapping(address => bool) public hasStakerRole;\n\n85:      mapping(uint8 => uint8) public numElements;\n\n88:      mapping(address => mapping(uint8 => uint8)) public nftsClaimed;\n\n88:      mapping(address => mapping(uint8 => uint8)) public nftsClaimed;\n\n91:      mapping(uint256 => uint32) public numTrained;\n\n94:      mapping(uint256 => string) private _tokenURIs;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L76-L76",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L79-L79",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L82-L82",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L85-L85",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L88-L88",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L88-L88",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L91-L91",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L94-L94"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n74:      mapping(address => mapping(uint256 => uint256)) public allowanceRemaining;\n\n74:      mapping(address => mapping(uint256 => uint256)) public allowanceRemaining;\n\n77:      mapping(address => mapping(uint256 => uint256)) public dailyAllowanceReplenishTime;\n\n77:      mapping(address => mapping(uint256 => uint256)) public dailyAllowanceReplenishTime;\n\n80:      mapping(address => bool) public allowedBurningAddresses;\n\n83:      mapping(address => bool) public isAdmin;\n\n86:      mapping(uint256 => string) private _tokenURIs;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L74-L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L74-L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L77-L77",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L77-L77",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L80-L80",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L83-L83",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L86-L86"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n48:      mapping(address => uint32) public numRoundsClaimed;\n\n51:      mapping(uint256 => uint256) public fighterPoints;\n\n54:      mapping(uint256 => address[]) public winnerAddresses;    \n\n57:      mapping(uint256 => bool) public isSelectionComplete;\n\n60:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L48-L48",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L51-L51",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L54-L54",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L57-L57",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L60-L60"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n56:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L56-L56"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n101:     mapping(address => bool) public isAdmin;\n\n104:     mapping(uint256 => BattleRecord) public fighterBattleRecord;\n\n107:     mapping(address => uint256) public amountClaimed;\n\n110:     mapping(address => uint32) public numRoundsClaimed;\n\n113:     mapping(address => mapping(uint256 => uint256)) public accumulatedPointsPerAddress;\n\n113:     mapping(address => mapping(uint256 => uint256)) public accumulatedPointsPerAddress;\n\n116:     mapping(uint256 => mapping(uint256 => uint256)) public accumulatedPointsPerFighter;\n\n116:     mapping(uint256 => mapping(uint256 => uint256)) public accumulatedPointsPerFighter;\n\n119:     mapping(uint256 => uint256) public totalAccumulatedPoints;\n\n122:     mapping(uint256 => uint256) public rankedNrnDistribution;\n\n125:     mapping(uint256 => mapping(uint256 => bool)) public hasUnstaked;\n\n125:     mapping(uint256 => mapping(uint256 => bool)) public hasUnstaked;\n\n128:     mapping(uint256 => uint256) public amountStaked;\n\n131:     mapping(uint256 => uint256) public stakingFactor;\n\n134:     mapping(uint256 => mapping(uint256 => bool)) _calculatedStakingFactor;\n\n134:     mapping(uint256 => mapping(uint256 => bool)) _calculatedStakingFactor;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L101-L101",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L104-L104",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L107-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L113-L113",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L113-L113",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L116-L116",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L116-L116",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L119-L119",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L122-L122",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L125-L125",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L125-L125",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L128-L128",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L131-L131",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L134-L134",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L134-L134"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n43:      mapping(uint256 => uint256) public totalStakeAtRisk;\n\n46:      mapping(uint256 => mapping(uint256 => uint256)) public stakeAtRisk;\n\n46:      mapping(uint256 => mapping(uint256 => uint256)) public stakeAtRisk;\n\n49:      mapping(address => uint256) public amountLost;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L43-L43",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L46-L46",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L46-L46",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L49-L49"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n33:      mapping(address => bool) public allowedVoltageSpenders;\n\n36:      mapping(address => uint32) public ownerVoltageReplenishTime;\n\n39:      mapping(address => uint8) public ownerVoltage;\n\n42:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L33-L33",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L36-L36",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L39-L39",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L42-L42"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named returns",
      "description": "Using named returns makes the code more self-documenting, makes it easier to fill out NatSpec, and in some cases can save gas. The cases below are where there currently is at most one return statement, which is ideal for named returns.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n157      function getAttributeProbabilities(uint256 generation, string memory attribute) \n158          public \n159          view \n160          returns (uint8[] memory) \n161:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L157-L161"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n129:     function incrementGeneration(uint8 fighterType) external returns (uint8) {\n\n299:     function doesTokenExist(uint256 tokenId) external view returns (bool) {\n\n395:     function contractURI() public pure returns (string memory) {\n\n402:     function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {\n\n410      function supportsInterface(bytes4 _interfaceId)\n411          public\n412          view\n413          override(ERC721, ERC721Enumerable)\n414          returns (bool)\n415:     {\n\n421      function getAllFighterInfo(\n422          uint256 tokenId\n423      )\n424          public\n425          view\n426          returns (\n427              address,\n428              uint256[6] memory,\n429              uint256,\n430              uint256,\n431              string memory,\n432              string memory,\n433              uint16\n434          )\n435:     {\n\n462      function _createFighterBase(\n463          uint256 dna, \n464          uint8 fighterType\n465      ) \n466          private \n467          view \n468          returns (uint256, uint256, uint256) \n469:     {\n\n539:     function _ableToTransfer(uint256 tokenId, address to) private view returns(bool) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L129-L129",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L299-L299",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L395-L395",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L402-L402",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L410-L415",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L421-L435",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L462-L469",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L539-L539"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n249:     function contractURI() public pure returns (string memory) {\n\n268:     function getAllowanceRemaining(address owner, uint256 tokenId) public view returns (uint256) {\n\n279:     function remainingSupply(uint256 tokenId) public view returns (uint256) {\n\n285:     function uniqueTokensOutstanding() public view returns (uint256) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L249-L249",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L268-L268",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L279-L279",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L285-L285"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n172:     function getUnclaimedRewards(address claimer) external view returns(uint256) {\n\n205:     function getFighterPoints(uint256 maxId) public view returns(uint256[] memory) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L172-L172",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L205-L205"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n354:     function getBattleRecord(uint256 tokenId) external view returns(uint32, uint32, uint32) {\n\n364:     function getCurrentStakingData() external view returns(uint256, uint256, uint256) {\n\n379:     function getNrnDistribution(uint256 roundId_) public view returns(uint256) {\n\n386:     function getUnclaimedNRN(address claimer) public view returns(uint256) {\n\n519      function _getStakingFactor(\n520          uint256 tokenId, \n521          uint256 stakeAtRisk\n522      ) \n523          private \n524          view \n525          returns (uint256) \n526:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L354-L354",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L364-L364",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L379-L379",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L386-L386",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L519-L526"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n132:     function getStakeAtRisk(uint256 fighterId) external view returns(uint256) {\n\n142:     function _sweepLostStake() private returns(bool) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L132-L132",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L142-L142"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using the `using`-`for` syntax",
      "description": "The `using`-`for` [syntax](https://docs.soliditylang.org/en/latest/contracts.html#using-for) is the more common way of calling library functions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n206:         require(Verification.verify(msgHash, signature, _delegatedAddress));\n\n436:         return FighterOps.viewFighterInfo(fighters[tokenId], ownerOf(tokenId));\n\n530:         FighterOps.fighterCreatedEmitter(newId, weight, element, generation[fighterType]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L206-L206",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L436-L436",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L530-L530"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n527        uint256 stakingFactor_ = FixedPointMathLib.sqrt(\n528            (amountStaked[tokenId] + stakeAtRisk) / 10**18\n529:       );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L527-L529"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Constants in comparisons should appear on the left side",
      "description": "Doing so will prevent [typo bugs](https://www.moserware.com/2008/01/constants-on-left-are-better-but-this.html) where the first '!', '>', '<', or '=' at the beginning of the operator is missing.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n101:                   i == 0 && iconsType == 2 || // Custom icons head (beta helmet)\n\n101:                   i == 0 && iconsType == 2 || // Custom icons head (beta helmet)\n\n102:                   i == 1 && iconsType > 0 || // Custom icons eyes (red diamond)\n\n102:                   i == 1 && iconsType > 0 || // Custom icons eyes (red diamond)\n\n103:                   i == 4 && iconsType == 3 // Custom icons hands (bowling ball)\n\n103:                   i == 4 && iconsType == 3 // Custom icons hands (bowling ball)\n\n133:         require(probabilities.length == 6, \"Invalid number of attribute arrays\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L101-L101",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L101-L101",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L103-L103",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L103-L103",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L133-L133"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n472:         uint256 newDna = fighterType == 0 ? dna : uint256(fighterType);\n\n495:         require(balanceOf(to) < MAX_FIGHTERS_ALLOWED);\n\n499:         if (customAttributes[0] == 100) {\n\n509:         bool dendroidBool = fighterType == 1;\n\n542:           balanceOf(to) < MAX_FIGHTERS_ALLOWED &&\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L472-L472",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L495-L495",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L499-L499",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L509-L509",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L542-L542"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n152:             allGameItemAttributes[tokenId].finiteSupply == false || \n\n154:                 allGameItemAttributes[tokenId].finiteSupply == true && \n\n258:         if (bytes(customURI).length > 0) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L152-L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L154-L154",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L258-L258"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n164:         if (claimIndex > 0) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L164-L164"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n156:         require(totalSupply() + amount < MAX_SUPPLY, \"Trying to mint more than the max supply\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L156-L156"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n235:         require(totalAccumulatedPoints[roundId] > 0);\n\n245:         require(amount > 0, \"Amount cannot be 0\");\n\n248:         require(hasUnstaked[tokenId][roundId] == false, \"Cannot add stake after unstaking this round\");\n\n253:             if (amountStaked[tokenId] == 0) {\n\n285:             if (amountStaked[tokenId] == 0) {\n\n306:         if (claimableNRN > 0) {\n\n332:         require(mergingPortion <= 100);\n\n337:             _voltageManagerInstance.ownerVoltage(fighterOwner) >= VOLTAGE_COST\n\n342:         if (amountStaked[tokenId] + stakeAtRisk > 0) {\n\n433:         if (_calculatedStakingFactor[tokenId][roundId] == false) {\n\n440:         if (battleResult == 0) {\n\n444:             if (stakeAtRisk == 0) {\n\n460:             if (curStakeAtRisk > 0) {\n\n469:             if (points > 0) {\n\n472:         } else if (battleResult == 2) {\n\n479:             if (accumulatedPointsPerFighter[tokenId][roundId] > 0) {\n\n488:                 if (points > 0) {\n\n506:         if (battleResult == 0) {\n\n508:         } else if (battleResult == 1) {\n\n510:         } else if (battleResult == 2) {\n\n530:       if (stakingFactor_ == 0) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L235-L235",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L245-L245",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L248-L248",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L253-L253",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L285-L285",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L306-L306",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L332-L332",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L337-L337",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L342-L342",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L433-L433",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L440-L440",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L444-L444",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L460-L460",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L469-L469",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L472-L472",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L479-L479",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L488-L488",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L506-L506",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L508-L508",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L510-L510",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L530-L530"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n94:          require(ownerVoltage[msg.sender] < 100);\n\n95:          require(_gameItemsContractInstance.balanceOf(msg.sender, 0) > 0);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L95-L95"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contract timekeeping will break earlier than the Ethereum network itself will stop working",
      "description": "When a timestamp is downcast from `uint256` to `uint32`, the value will wrap in the year 2106, and the contracts will break. Other downcasts will have different endpoints. Consider whether your contract is intended to live past the size of the type being used.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n314:         dailyAllowanceReplenishTime[msg.sender][tokenId] = uint32(block.timestamp + 1 days);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L314-L314"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n119:         ownerVoltageReplenishTime[owner] = uint32(block.timestamp + 1 days);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L119-L119"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contracts should have all `public`/`external` functions exposed by `interface`s",
      "description": "The `contract`s should expose an `interface` so that other projects can more easily integrate with it, without having to develop their own non-standard variants.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit  attributes(), defaultAttributeDivisor(), attributeProbabilities(), attributeToDnaDivisor(), transferOwnership(), addAttributeDivisor(), createPhysicalAttributes(), addAttributeProbabilities(), deleteAttributeProbabilities(), getAttributeProbabilities(), dnaToIndex()\n10   contract AiArenaHelper {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                               STATE VARIABLES\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice List of attributes\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit  MAX_FIGHTERS_ALLOWED(), maxRerollsAllowed(), rerollCost(), generation(), totalNumTrained(), treasuryAddress(), fighters(), fighterStaked(), numRerolls(), hasStakerRole(), numElements(), nftsClaimed(), numTrained(), transferOwnership(), incrementGeneration(), addStaker(), instantiateAIArenaHelperContract(), instantiateMintpassContract(), instantiateNeuronContract(), setMergingPoolAddress(), setTokenURI(), claimFighters(), redeemMintPass(), updateFighterStaking(), updateModel(), doesTokenExist(), mintFromMergingPool(), reRoll(), contractURI(), getAllFighterInfo()\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit  name(), symbol(), allGameItemAttributes(), treasuryAddress(), allowanceRemaining(), dailyAllowanceReplenishTime(), allowedBurningAddresses(), isAdmin(), transferOwnership(), adjustAdminAccess(), adjustTransferability(), instantiateNeuronContract(), mint(), setAllowedBurningAddresses(), setTokenURI(), createGameItem(), burn(), contractURI(), getAllowanceRemaining(), remainingSupply(), uniqueTokensOutstanding()\n10   contract GameItems is ERC1155 {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16       /// @notice Event emitted when a game item is bought.\n17       /// @param buyer The address of the buyer.\n18       /// @param tokenId The id of the game item.\n19:      /// @param quantity The quantity of the game item.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit  winnersPerPeriod(), roundId(), totalPoints(), numRoundsClaimed(), fighterPoints(), winnerAddresses(), isSelectionComplete(), isAdmin(), transferOwnership(), adjustAdminAccess(), updateWinnersPerPeriod(), pickWinner(), claimRewards(), getUnclaimedRewards(), addPoints(), getFighterPoints()\n9    contract MergingPool {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when merging pool points are added.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L9-L15"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit  MINTER_ROLE(), SPENDER_ROLE(), STAKER_ROLE(), INITIAL_TREASURY_MINT(), INITIAL_CONTRIBUTOR_MINT(), MAX_SUPPLY(), treasuryAddress(), isAdmin(), transferOwnership(), addMinter(), addStaker(), addSpender(), adjustAdminAccess(), setupAirdrop(), claim(), mint(), burn(), approveSpender(), approveStaker(), burnFrom()\n11   contract Neuron is ERC20, AccessControl {\n12   \n13       /*//////////////////////////////////////////////////////////////\n14                                   EVENTS\n15       //////////////////////////////////////////////////////////////*/\n16   \n17:      /// @notice Event emitted when tokens are claimed.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L11-L17"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit  VOLTAGE_COST(), totalBattles(), globalStakedAmount(), roundId(), bpsLostPerLoss(), isAdmin(), fighterBattleRecord(), amountClaimed(), numRoundsClaimed(), accumulatedPointsPerAddress(), accumulatedPointsPerFighter(), totalAccumulatedPoints(), rankedNrnDistribution(), hasUnstaked(), amountStaked(), stakingFactor(), transferOwnership(), adjustAdminAccess(), setGameServerAddress(), setStakeAtRiskAddress(), instantiateNeuronContract(), instantiateMergingPoolContract(), setRankedNrnDistribution(), setBpsLostPerLoss(), setNewRound(), stakeNRN(), unstakeNRN(), claimNRN(), updateBattleRecord(), getBattleRecord(), getCurrentStakingData(), getNrnDistribution(), getUnclaimedNRN()\n16   contract RankedBattle {\n17   \n18:      /// @dev Extend functionality of the FixedPointMathLib library to the uint data type.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit  roundId(), treasuryAddress(), totalStakeAtRisk(), stakeAtRisk(), amountLost(), setNewRound(), reclaimNRN(), updateAtRiskRecords(), getStakeAtRisk()\n10   contract StakeAtRisk {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice Event emitted when NRNs are reclaimed from this contract (after a win in ranked).\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit  allowedVoltageSpenders(), ownerVoltageReplenishTime(), ownerVoltage(), isAdmin(), transferOwnership(), adjustAdminAccess(), adjustAllowedVoltageSpenders(), useVoltageBattery(), spendVoltage()\n9    contract VoltageManager {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when voltage amount is altered.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L9-L15"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contracts should have full test coverage",
      "description": "While 100% code coverage does not guarantee that there are no bugs, it often will catch easy-to-find bugs, and will ensure that there are fewer regressions when the code invariably has to be modified. Furthermore, in order to get full coverage, code authors will often have to re-organize their code so that it is more modular, so that each component can be tested separately, which reduces interdependencies between modules and layers, and makes for code that is easier to reason about and audit.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: Various Files\n```\n",
          "loc": []
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Critical system parameter changes should be behind a timelock",
      "description": "From the point of view of a user, the changing of the owner of a contract is a high risk operation that may have outcomes ranging from an attacker gaining control over the protocol, to the function no longer functioning due to a typo in the destination address. To give users plenty of warning so that they can validate any ownership or other critical parameter changes, these changes should be behind a timelock.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n68       function addAttributeDivisor(uint8[] memory attributeDivisors) external {\n69           require(msg.sender == _ownerAddress);\n70           require(attributeDivisors.length == attributes.length);\n71   \n72           uint256 attributesLength = attributes.length;\n73           for (uint8 i = 0; i < attributesLength; i++) {\n74               attributeToDnaDivisor[attributes[i]] = attributeDivisors[i];\n75           }\n76:      }    \n\n131      function addAttributeProbabilities(uint256 generation, uint8[][] memory probabilities) public {\n132          require(msg.sender == _ownerAddress);\n133          require(probabilities.length == 6, \"Invalid number of attribute arrays\");\n134  \n135          uint256 attributesLength = attributes.length;\n136          for (uint8 i = 0; i < attributesLength; i++) {\n137              attributeProbabilities[generation][attributes[i]] = probabilities[i];\n138          }\n139:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L68-L76",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L131-L139"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n268      function updateFighterStaking(uint256 tokenId, bool stakingStatus) external {\n269          require(hasStakerRole[msg.sender]);\n270          fighterStaked[tokenId] = stakingStatus;\n271          if (stakingStatus) {\n272              emit Locked(tokenId);\n273          } else {\n274              emit Unlocked(tokenId);\n275          }\n276:     }\n\n283      function updateModel(\n284          uint256 tokenId, \n285          string calldata modelHash,\n286          string calldata modelType\n287      ) \n288          external\n289      {\n290          require(msg.sender == ownerOf(tokenId));\n291          fighters[tokenId].modelHash = modelHash;\n292          fighters[tokenId].modelType = modelType;\n293          numTrained[tokenId] += 1;\n294          totalNumTrained += 1;\n295:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L268-L276",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L283-L295"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n195      function addPoints(uint256 tokenId, uint256 points) public {\n196          require(msg.sender == _rankedBattleAddress, \"Not Ranked Battle contract address\");\n197          fighterPoints[tokenId] += points;\n198          totalPoints += points;\n199          emit PointsAdded(tokenId, points);\n200:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L195-L200"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n93       function addMinter(address newMinterAddress) external {\n94           require(msg.sender == _ownerAddress);\n95           _setupRole(MINTER_ROLE, newMinterAddress);\n96:      }\n\n101      function addStaker(address newStakerAddress) external {\n102          require(msg.sender == _ownerAddress);\n103          _setupRole(STAKER_ROLE, newStakerAddress);\n104:     }\n\n109      function addSpender(address newSpenderAddress) external {\n110          require(msg.sender == _ownerAddress);\n111          _setupRole(SPENDER_ROLE, newSpenderAddress);\n112:     }\n\n127      function setupAirdrop(address[] calldata recipients, uint256[] calldata amounts) external {\n128          require(isAdmin[msg.sender]);\n129          require(recipients.length == amounts.length);\n130          uint256 recipientsLength = recipients.length;\n131          for (uint32 i = 0; i < recipientsLength; i++) {\n132              _approve(treasuryAddress, recipients[i], amounts[i]);\n133          }\n134:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L93-L96",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L101-L104",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L109-L112",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L127-L134"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n322      function updateBattleRecord(\n323          uint256 tokenId, \n324          uint256 mergingPortion,\n325          uint8 battleResult,\n326          uint256 eloFactor,\n327          bool initiatorBool\n328      ) \n329          external \n330      {   \n331          require(msg.sender == _gameServerAddress);\n332          require(mergingPortion <= 100);\n333          address fighterOwner = _fighterFarmInstance.ownerOf(tokenId);\n334          require(\n335              !initiatorBool ||\n336              _voltageManagerInstance.ownerVoltageReplenishTime(fighterOwner) <= block.timestamp || \n337              _voltageManagerInstance.ownerVoltage(fighterOwner) >= VOLTAGE_COST\n338          );\n339  \n340          _updateRecord(tokenId, battleResult);\n341          uint256 stakeAtRisk = _stakeAtRiskInstance.getStakeAtRisk(tokenId);\n342          if (amountStaked[tokenId] + stakeAtRisk > 0) {\n343              _addResultPoints(battleResult, tokenId, eloFactor, mergingPortion, fighterOwner);\n344          }\n345          if (initiatorBool) {\n346              _voltageManagerInstance.spendVoltage(fighterOwner, VOLTAGE_COST);\n347          }\n348          totalBattles += 1;\n349:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L322-L349"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n115      function updateAtRiskRecords(\n116          uint256 nrnToPlaceAtRisk, \n117          uint256 fighterId, \n118          address fighterOwner\n119      ) \n120          external \n121      {\n122          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n123          stakeAtRisk[roundId][fighterId] += nrnToPlaceAtRisk;\n124          totalStakeAtRisk[roundId] += nrnToPlaceAtRisk;\n125          amountLost[fighterOwner] += nrnToPlaceAtRisk;\n126          emit IncreasedStakeAtRisk(fighterId, nrnToPlaceAtRisk);\n127:     }   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Custom errors should be used rather than `revert()`/`require()`",
      "description": "Custom errors are available from solidity version 0.8.4. Custom errors are more easily processed in `try`-`catch` blocks, and are easier to re-use and maintain.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n62:          require(msg.sender == _ownerAddress);\n\n69:          require(msg.sender == _ownerAddress);\n\n70:          require(attributeDivisors.length == attributes.length);\n\n132:         require(msg.sender == _ownerAddress);\n\n133:         require(probabilities.length == 6, \"Invalid number of attribute arrays\");\n\n145:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L62-L62",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L69-L69",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L70-L70",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L132-L132",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L133-L133",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L145-L145"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n121:         require(msg.sender == _ownerAddress);\n\n130:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n148:         require(msg.sender == _ownerAddress);\n\n156:         require(msg.sender == _ownerAddress);\n\n164:         require(msg.sender == _ownerAddress);\n\n172:         require(msg.sender == _ownerAddress);\n\n181:         require(msg.sender == _delegatedAddress);\n\n206:         require(Verification.verify(msgHash, signature, _delegatedAddress));\n\n208:         require(modelHashes.length == totalToMint && modelTypes.length == totalToMint);\n\n243          require(\n244              mintpassIdsToBurn.length == mintPassDnas.length && \n245              mintPassDnas.length == fighterTypes.length && \n246              fighterTypes.length == modelHashes.length &&\n247              modelHashes.length == modelTypes.length\n248:         );\n\n250:             require(msg.sender == _mintpassInstance.ownerOf(mintpassIdsToBurn[i]));\n\n269:         require(hasStakerRole[msg.sender]);\n\n290:         require(msg.sender == ownerOf(tokenId));\n\n321:         require(msg.sender == _mergingPoolAddress);\n\n346:         require(_ableToTransfer(tokenId, to));\n\n363:         require(_ableToTransfer(tokenId, to));\n\n371:         require(msg.sender == ownerOf(tokenId));\n\n372:         require(numRerolls[tokenId] < maxRerollsAllowed[fighterType]);\n\n373:         require(_neuronInstance.balanceOf(msg.sender) >= rerollCost, \"Not enough NRN for reroll\");\n\n495:         require(balanceOf(to) < MAX_FIGHTERS_ALLOWED);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L121-L121",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L130-L130",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L140-L140",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L156-L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L164-L164",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L172-L172",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L181-L181",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L206-L206",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L208-L208",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L243-L248",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L250-L250",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L269-L269",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L290-L290",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L321-L321",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L346-L346",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L363-L363",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L371-L371",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L372-L372",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L373-L373",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L495-L495"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n109:         require(msg.sender == _ownerAddress);\n\n118:         require(msg.sender == _ownerAddress);\n\n127:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n148:         require(tokenId < _itemCount);\n\n150:         require(_neuronInstance.balanceOf(msg.sender) >= price, \"Not enough NRN for purchase\");\n\n151          require(\n152              allGameItemAttributes[tokenId].finiteSupply == false || \n153              (\n154                  allGameItemAttributes[tokenId].finiteSupply == true && \n155                  quantity <= allGameItemAttributes[tokenId].itemsRemaining\n156              )\n157:         );\n\n158          require(\n159              dailyAllowanceReplenishTime[msg.sender][tokenId] <= block.timestamp || \n160              quantity <= allowanceRemaining[msg.sender][tokenId]\n161:         );\n\n186:         require(isAdmin[msg.sender]);\n\n195:         require(isAdmin[msg.sender]);\n\n219:         require(isAdmin[msg.sender]);\n\n243:         require(allowedBurningAddresses[msg.sender]);\n\n301:         require(allGameItemAttributes[tokenId].transferable);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L109-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L127-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L140-L140",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L150-L150",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L151-L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L158-L161",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L186-L186",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L195-L195",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L219-L219",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L243-L243",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L301-L301"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n90:          require(msg.sender == _ownerAddress);\n\n99:          require(msg.sender == _ownerAddress);\n\n107:         require(isAdmin[msg.sender]);\n\n119:         require(isAdmin[msg.sender]);\n\n120:         require(winners.length == winnersPerPeriod, \"Incorrect number of winners\");\n\n121:         require(!isSelectionComplete[roundId], \"Winners are already selected\");\n\n196:         require(msg.sender == _rankedBattleAddress, \"Not Ranked Battle contract address\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L90-L90",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L99-L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L107-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L119-L119",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L120-L120",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L121-L121",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L196-L196"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n86:          require(msg.sender == _ownerAddress);\n\n94:          require(msg.sender == _ownerAddress);\n\n102:         require(msg.sender == _ownerAddress);\n\n110:         require(msg.sender == _ownerAddress);\n\n119:         require(msg.sender == _ownerAddress);\n\n128:         require(isAdmin[msg.sender]);\n\n129:         require(recipients.length == amounts.length);\n\n139          require(\n140              allowance(treasuryAddress, msg.sender) >= amount, \n141              \"ERC20: claim amount exceeds allowance\"\n142:         );\n\n156:         require(totalSupply() + amount < MAX_SUPPLY, \"Trying to mint more than the max supply\");\n\n157:         require(hasRole(MINTER_ROLE, msg.sender), \"ERC20: must have minter role to mint\");\n\n172          require(\n173              hasRole(SPENDER_ROLE, msg.sender), \n174              \"ERC20: must have spender role to approve spending\"\n175:         );\n\n185          require(\n186              hasRole(STAKER_ROLE, msg.sender), \n187              \"ERC20: must have staker role to approve staking\"\n188:         );\n\n197          require(\n198              allowance(account, msg.sender) >= amount, \n199              \"ERC20: burn amount exceeds allowance\"\n200:         );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L86-L86",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L119-L119",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L128-L128",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L129-L129",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L139-L142",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L156-L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L157-L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L172-L175",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L185-L188",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L197-L200"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n168:         require(msg.sender == _ownerAddress);\n\n177:         require(msg.sender == _ownerAddress);\n\n185:         require(msg.sender == _ownerAddress);\n\n193:         require(msg.sender == _ownerAddress);\n\n202:         require(msg.sender == _ownerAddress);\n\n210:         require(msg.sender == _ownerAddress);\n\n219:         require(isAdmin[msg.sender]);\n\n227:         require(isAdmin[msg.sender]);\n\n234:         require(isAdmin[msg.sender]);\n\n235:         require(totalAccumulatedPoints[roundId] > 0);\n\n245:         require(amount > 0, \"Amount cannot be 0\");\n\n246:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n247:         require(_neuronInstance.balanceOf(msg.sender) >= amount, \"Stake amount exceeds balance\");\n\n248:         require(hasUnstaked[tokenId][roundId] == false, \"Cannot add stake after unstaking this round\");\n\n271:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n295:         require(numRoundsClaimed[msg.sender] < roundId, \"Already claimed NRNs for this period\");\n\n331:         require(msg.sender == _gameServerAddress);\n\n332:         require(mergingPortion <= 100);\n\n334          require(\n335              !initiatorBool ||\n336              _voltageManagerInstance.ownerVoltageReplenishTime(fighterOwner) <= block.timestamp || \n337              _voltageManagerInstance.ownerVoltage(fighterOwner) >= VOLTAGE_COST\n338:         );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L168-L168",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L177-L177",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L185-L185",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L193-L193",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L202-L202",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L210-L210",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L219-L219",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L227-L227",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L234-L234",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L235-L235",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L245-L245",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L246-L246",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L247-L247",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L248-L248",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L271-L271",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L295-L295",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L331-L331",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L332-L332",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L334-L338"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n79:          require(msg.sender == _rankedBattleAddress, \"Not authorized to set new round\");\n\n94:          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n95           require(\n96               stakeAtRisk[roundId][fighterId] >= nrnToReclaim, \n97               \"Fighter does not have enough stake at risk\"\n98:          );\n\n122:         require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L79-L79",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L95-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L122-L122"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n65:          require(msg.sender == _ownerAddress);\n\n74:          require(msg.sender == _ownerAddress);\n\n83:          require(isAdmin[msg.sender]);\n\n94:          require(ownerVoltage[msg.sender] < 100);\n\n95:          require(_gameItemsContractInstance.balanceOf(msg.sender, 0) > 0);\n\n106:         require(spender == msg.sender || allowedVoltageSpenders[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L65-L65",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L74-L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L83-L83",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L95-L95",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L106-L106"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n62:          require(msg.sender == _ownerAddress);\n\n69:          require(msg.sender == _ownerAddress);\n\n132:         require(msg.sender == _ownerAddress);\n\n145:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L62-L62",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L69-L69",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L132-L132",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L145-L145"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n346:         require(_ableToTransfer(tokenId, to));\n\n363:         require(_ableToTransfer(tokenId, to));\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L346-L346",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L363-L363"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n109:         require(msg.sender == _ownerAddress);\n\n118:         require(msg.sender == _ownerAddress);\n\n127:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L109-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L127-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L140-L140"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n90:          require(msg.sender == _ownerAddress);\n\n99:          require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L90-L90",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L99-L99"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n86:          require(msg.sender == _ownerAddress);\n\n94:          require(msg.sender == _ownerAddress);\n\n102:         require(msg.sender == _ownerAddress);\n\n110:         require(msg.sender == _ownerAddress);\n\n119:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L86-L86",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L119-L119"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n168:         require(msg.sender == _ownerAddress);\n\n177:         require(msg.sender == _ownerAddress);\n\n185:         require(msg.sender == _ownerAddress);\n\n193:         require(msg.sender == _ownerAddress);\n\n202:         require(msg.sender == _ownerAddress);\n\n210:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L168-L168",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L177-L177",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L185-L185",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L193-L193",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L202-L202",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L210-L210"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n94:          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n122:         require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L122-L122"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n65:          require(msg.sender == _ownerAddress);\n\n74:          require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L65-L65",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L74-L74"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Event is not properly `indexed`",
      "description": "Index event fields make the field more quickly accessible [to off-chain tools](https://ethereum.stackexchange.com/questions/40396/can-somebody-please-explain-the-concept-of-event-indexing) that parse events. This is especially useful when it comes to filtering based on an address. However, note that each index field costs extra gas during emission, so it's not necessarily best to index the maximum allowed per event (three fields). Where applicable, each `event` should use three `indexed` fields if there are three or more fields, and gas usage is not particularly of concern for the events in question. If there are fewer than three applicable fields, all of the applicable fields should be indexed.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n23:       event Locked(uint256 tokenId);\n\n26:       event Unlocked(uint256 tokenId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L23",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L26"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n20:       event BoughtItem(address buyer, uint256 tokenId, uint256 quantity);\n\n24:       event Locked(uint256 tokenId);\n\n28:       event Unlocked(uint256 tokenId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L24",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L28"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n16:       event PointsAdded(uint256 tokenId, uint256 points);\n\n19:       event Claimed(address claimer, uint32 amount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L16",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n18:       event TokensClaimed(address user, uint256 amount);\n\n21:       event TokensMinted(address user, uint256 amount);    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L18",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L21"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n26:       event Staked(address from, uint256 amount);\n\n29:       event Unstaked(address from, uint256 amount);\n\n32:       event Claimed(address claimer, uint256 amount);\n\n35:       event PointsChanged(uint256 tokenId, uint256 points, bool increased);    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L26",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L29",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L32",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L35"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n17:       event ReclaimedStake(uint256 fighterId, uint256 reclaimAmount);\n\n20:       event IncreasedStakeAtRisk(uint256 fighterId, uint256 atRiskAmount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L17",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L20"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n16:       event VoltageRemaining(address spender, uint8 voltage);  \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L16"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Events are missing sender information",
      "description": "When an action is triggered based on a user's action, not being able to filter based on who triggered the action makes event processing a lot more cumbersome. Including the `msg.sender` the events of these types of action will make events much more useful to end users, especially when `msg.sender` is not `tx.origin`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n274:             emit Unlocked(tokenId);\n\n272:             emit Locked(tokenId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L274-L274",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L272-L272"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n132:           emit Locked(tokenId);\n\n130:           emit Unlocked(tokenId);\n\n231:           emit Locked(_itemCount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L132-L132",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L130-L130",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L231-L231"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n199:         emit PointsAdded(tokenId, points);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L199-L199"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n489:                     emit PointsChanged(tokenId, points, false);\n\n470:                 emit PointsChanged(tokenId, points, true);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L489-L489",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L470-L470"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n105:             emit ReclaimedStake(fighterId, nrnToReclaim);\n\n126:         emit IncreasedStakeAtRisk(fighterId, nrnToPlaceAtRisk);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L105-L105",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L126-L126"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n111:         emit VoltageRemaining(spender, ownerVoltage[spender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L111-L111"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Events that mark critical parameter changes should contain both the old and the new value",
      "description": "This should especially be done if the new value is not required to be different from the old value",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n272:             emit Locked(tokenId);\n\n274:             emit Unlocked(tokenId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L272-L272",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L274-L274"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n199:         emit PointsAdded(tokenId, points);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L199-L199"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n470:                 emit PointsChanged(tokenId, points, true);\n\n489:                     emit PointsChanged(tokenId, points, false);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L470-L470",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L489-L489"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n126:         emit IncreasedStakeAtRisk(fighterId, nrnToPlaceAtRisk);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L126-L126"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Expressions for constant values should use `immutable` rather than `constant`",
      "description": "While it does not save gas for some simple binary expressions because the compiler knows that developers often make this mistake, it's still best to use the right tool for the task at hand. There is a difference between `constant` variables and `immutable` variables, and they should each be used in their appropriate contexts. `constants` should be used for literal values written into the code, and `immutable` variables should be used for expressions, or values calculated in, or passed into the constructor.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n17:      string[] public attributes = [\"head\", \"eyes\", \"mouth\", \"body\", \"hands\", \"feet\"];\n\n20:      uint8[] public defaultAttributeDivisor = [2, 3, 5, 7, 11, 13];\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L17-L17",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L20-L20"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n36:      uint8[2] public maxRerollsAllowed = [3, 3];\n\n39:      uint256 public rerollCost = 1000 * 10**18;    \n\n42:      uint8[2] public generation = [0, 0];\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L36-L36",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L39-L39",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L42-L42"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n28:      bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n31:      bytes32 public constant SPENDER_ROLE = keccak256(\"SPENDER_ROLE\");\n\n34:      bytes32 public constant STAKER_ROLE = keccak256(\"STAKER_ROLE\");\n\n37:      uint256 public constant INITIAL_TREASURY_MINT = 10**18 * 10**8 * 2;\n\n40:      uint256 public constant INITIAL_CONTRIBUTOR_MINT = 10**18 * 10**8 * 5;\n\n43:      uint256 public constant MAX_SUPPLY = 10**18 * 10**9;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L28-L28",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L31-L31",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L34-L34",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L37-L37",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L40-L40",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L43-L43"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "High cyclomatic complexity",
      "description": "Consider breaking down these blocks into more manageable units, by splitting things into utility functions, by reducing nesting, and by using early returns",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n416      function _addResultPoints(\n417          uint8 battleResult, \n418          uint256 tokenId, \n419          uint256 eloFactor, \n420          uint256 mergingPortion,\n421          address fighterOwner\n422      ) \n423          private \n424      {\n425          uint256 stakeAtRisk;\n426          uint256 curStakeAtRisk;\n427          uint256 points = 0;\n428  \n429          /// Check how many NRNs the fighter has at risk\n430          stakeAtRisk = _stakeAtRiskInstance.getStakeAtRisk(tokenId);\n431  \n432          /// Calculate the staking factor if it has not already been calculated for this round \n433          if (_calculatedStakingFactor[tokenId][roundId] == false) {\n434              stakingFactor[tokenId] = _getStakingFactor(tokenId, stakeAtRisk);\n435              _calculatedStakingFactor[tokenId][roundId] = true;\n436          }\n437  \n438          /// Potential amount of NRNs to put at risk or retrieve from the stake-at-risk contract\n439          curStakeAtRisk = (bpsLostPerLoss * (amountStaked[tokenId] + stakeAtRisk)) / 10**4;\n440          if (battleResult == 0) {\n441              /// If the user won the match\n442  \n443              /// If the user has no NRNs at risk, then they can earn points\n444              if (stakeAtRisk == 0) {\n445                  points = stakingFactor[tokenId] * eloFactor;\n446              }\n447  \n448              /// Divert a portion of the points to the merging pool\n449              uint256 mergingPoints = (points * mergingPortion) / 100;\n450              points -= mergingPoints;\n451              _mergingPoolInstance.addPoints(tokenId, mergingPoints);\n452  \n453              /// Do not allow users to reclaim more NRNs than they have at risk\n454              if (curStakeAtRisk > stakeAtRisk) {\n455                  curStakeAtRisk = stakeAtRisk;\n456              }\n457  \n458              /// If the user has stake-at-risk for their fighter, reclaim a portion\n459              /// Reclaiming stake-at-risk puts the NRN back into their staking pool\n460              if (curStakeAtRisk > 0) {\n461                  _stakeAtRiskInstance.reclaimNRN(curStakeAtRisk, tokenId, fighterOwner);\n462                  amountStaked[tokenId] += curStakeAtRisk;\n463              }\n464  \n465              /// Add points to the fighter for this round\n466              accumulatedPointsPerFighter[tokenId][roundId] += points;\n467              accumulatedPointsPerAddress[fighterOwner][roundId] += points;\n468              totalAccumulatedPoints[roundId] += points;\n469              if (points > 0) {\n470                  emit PointsChanged(tokenId, points, true);\n471              }\n472          } else if (battleResult == 2) {\n473              /// If the user lost the match\n474  \n475              /// Do not allow users to lose more NRNs than they have in their staking pool\n476              if (curStakeAtRisk > amountStaked[tokenId]) {\n477                  curStakeAtRisk = amountStaked[tokenId];\n478              }\n479              if (accumulatedPointsPerFighter[tokenId][roundId] > 0) {\n480                  /// If the fighter has a positive point balance for this round, deduct points \n481                  points = stakingFactor[tokenId] * eloFactor;\n482                  if (points > accumulatedPointsPerFighter[tokenId][roundId]) {\n483                      points = accumulatedPointsPerFighter[tokenId][roundId];\n484                  }\n485                  accumulatedPointsPerFighter[tokenId][roundId] -= points;\n486                  accumulatedPointsPerAddress[fighterOwner][roundId] -= points;\n487                  totalAccumulatedPoints[roundId] -= points;\n488                  if (points > 0) {\n489                      emit PointsChanged(tokenId, points, false);\n490                  }\n491              } else {\n492                  /// If the fighter does not have any points for this round, NRNs become at risk of being lost\n493                  bool success = _neuronInstance.transfer(_stakeAtRiskAddress, curStakeAtRisk);\n494                  if (success) {\n495                      _stakeAtRiskInstance.updateAtRiskRecords(curStakeAtRisk, tokenId, fighterOwner);\n496                      amountStaked[tokenId] -= curStakeAtRisk;\n497                  }\n498              }\n499          }\n500:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L416-L500"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Import declarations should import specific identifiers, rather than the whole file",
      "description": "Using import declarations of the form `import {<identifier_name>} from \"some/file.sol\"` avoids polluting the symbol namespace making flattened files smaller, and speeds up compilation (but does not save any gas)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n9:    import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\n10:   import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L9",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L10"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n5:    import \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L5"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n4:    import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n5:    import \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L4",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L5"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Imports should use double quotes rather than single quotes",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n9:    import { FixedPointMathLib } from './FixedPointMathLib.sol';\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L9"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large multiples of ten should use scientific notation",
      "description": "Large multiples of ten should use scientific notation (e.g. `1e6`) rather than decimal literals (e.g. `1000000`), for readability",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit 1000\n39:      uint256 public rerollCost = 1000 * 10**18;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L39-L39"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit 5000\n157:         rankedNrnDistribution[0] = 5000 * 10**18;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L157-L157"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large numeric literals should use underscores for readability",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit 1000\n39:      uint256 public rerollCost = 1000 * 10**18;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L39-L39"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit 5000\n157:         rankedNrnDistribution[0] = 5000 * 10**18;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L157-L157"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large or complicated code bases should implement invariant tests",
      "description": "Large code bases, or code with lots of inline-assembly, complicated math, or complicated interactions between multiple contracts, should implement [invariant fuzzing tests](https://medium.com/coinmonks/smart-contract-fuzzing-d9b88e0b0a05). Invariant fuzzers such as Echidna require the test writer to come up with invariants which should not be violated under any circumstances, and the fuzzer tests various inputs and function calls to ensure that the invariants always hold. Even code with 100% code coverage can still have bugs due to the order of the operations a user performs, and invariant fuzzers, with properly and extensively-written invariants, can close this testing gap significantly.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: Various Files\n```\n",
          "loc": []
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Long functions should be refactored into multiple, smaller, functions",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit 85 lines (75 in the body)\n416       function _addResultPoints(\n417           uint8 battleResult, \n418           uint256 tokenId, \n419           uint256 eloFactor, \n420           uint256 mergingPortion,\n421:          address fighterOwner\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L416-L421"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing checks for `address(0x0)` in the constructor",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit ownerAddress\n/// @audit delegatedAddress\n/// @audit treasuryAddress_\n104      constructor(address ownerAddress, address delegatedAddress, address treasuryAddress_)\n105          ERC721(\"AI Arena Fighter\", \"FTR\")\n106:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L104-L104",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L104-L104",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L104-L104"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit ownerAddress\n/// @audit treasuryAddress_\n95:      constructor(address ownerAddress, address treasuryAddress_) ERC1155(\"https://ipfs.io/ipfs/\") {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L95-L95",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L95-L95"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit ownerAddress\n/// @audit rankedBattleAddress\n/// @audit fighterFarmAddress\n71       constructor(\n72           address ownerAddress, \n73           address rankedBattleAddress, \n74           address fighterFarmAddress\n75:      ) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L72-L72",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L73-L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L74-L74"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit ownerAddress\n/// @audit treasuryAddress_\n/// @audit contributorAddress\n68       constructor(address ownerAddress, address treasuryAddress_, address contributorAddress)\n69           ERC20(\"Neuron\", \"NRN\")\n70:      {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L68-L68",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L68-L68",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L68-L68"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit ownerAddress\n/// @audit gameServerAddress\n/// @audit fighterFarmAddress\n/// @audit voltageManagerAddress\n146      constructor(\n147        address ownerAddress, \n148        address gameServerAddress,\n149        address fighterFarmAddress,\n150        address voltageManagerAddress\n151:     ) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L147-L147",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L149-L149",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L150-L150"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit treasuryAddress_\n/// @audit nrnAddress\n/// @audit rankedBattleAddress\n60       constructor(\n61           address treasuryAddress_,\n62           address nrnAddress,\n63           address rankedBattleAddress\n64:      ) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L61-L61",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L62-L62",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L63-L63"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit ownerAddress\n/// @audit gameItemsContractAddress\n51:      constructor(address ownerAddress, address gameItemsContractAddress) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L51-L51",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L51-L51"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing checks for empty parameters in the constructor",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit probabilities\n41:      constructor(uint8[][] memory probabilities) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L41-L41"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing checks for uint state variable assignments",
      "description": "Consider whether reasonable bounds checks for variables would be useful",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit setBpsLostPerLoss(bpsLostPerLoss_)\n228:         bpsLostPerLoss = bpsLostPerLoss_;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L226-L226"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing event for critical parameter change",
      "description": "Events help non-contract tools to track changes",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit _ownerAddress:  transferOwnership()\n61:      function transferOwnership(address newOwnerAddress) external {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L61-L61"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit _ownerAddress:  transferOwnership()\n120:     function transferOwnership(address newOwnerAddress) external {\n\n/// @audit _mergingPoolAddress:  setMergingPoolAddress()\n171:     function setMergingPoolAddress(address mergingPoolAddress) external {\n\n/// @audit _tokenURIs:  setTokenURI()\n180:     function setTokenURI(uint256 tokenId, string calldata newTokenURI) external {\n\n/// @audit fighters:  updateModel()\n283      function updateModel(\n284          uint256 tokenId, \n285          string calldata modelHash,\n286          string calldata modelType\n287      ) \n288          external\n289:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L120-L120",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L171-L171",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L180-L180",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L283-L289"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit _ownerAddress:  transferOwnership()\n108:     function transferOwnership(address newOwnerAddress) external {\n\n/// @audit isAdmin:  adjustAdminAccess()\n117:     function adjustAdminAccess(address adminAddress, bool access) external {\n\n/// @audit _tokenURIs:  setTokenURI()\n194:     function setTokenURI(uint256 tokenId, string memory _tokenURI) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L108-L108",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L117-L117",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L194-L194"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit _ownerAddress:  transferOwnership()\n89:      function transferOwnership(address newOwnerAddress) external {\n\n/// @audit isAdmin:  adjustAdminAccess()\n98:      function adjustAdminAccess(address adminAddress, bool access) external {\n\n/// @audit winnersPerPeriod:  updateWinnersPerPeriod()\n106:     function updateWinnersPerPeriod(uint256 newWinnersPerPeriodAmount) external {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L89-L89",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L98-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L106-L106"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit _ownerAddress:  transferOwnership()\n85:      function transferOwnership(address newOwnerAddress) external {\n\n/// @audit isAdmin:  adjustAdminAccess()\n118:     function adjustAdminAccess(address adminAddress, bool access) external {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L85-L85",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L118-L118"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit _ownerAddress:  transferOwnership()\n167:     function transferOwnership(address newOwnerAddress) external {\n\n/// @audit isAdmin:  adjustAdminAccess()\n176:     function adjustAdminAccess(address adminAddress, bool access) external {\n\n/// @audit _gameServerAddress:  setGameServerAddress()\n184:     function setGameServerAddress(address gameServerAddress) external {\n\n/// @audit _stakeAtRiskAddress:  setStakeAtRiskAddress()\n192:     function setStakeAtRiskAddress(address stakeAtRiskAddress) external {\n\n/// @audit bpsLostPerLoss:  setBpsLostPerLoss()\n226:     function setBpsLostPerLoss(uint256 bpsLostPerLoss_) external {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L167-L167",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L176-L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L184-L184",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L192-L192",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L226-L226"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit _ownerAddress:  transferOwnership()\n64:      function transferOwnership(address newOwnerAddress) external {\n\n/// @audit isAdmin:  adjustAdminAccess()\n73:      function adjustAdminAccess(address adminAddress, bool access) external {\n\n/// @audit allowedVoltageSpenders:  adjustAllowedVoltageSpenders()\n82:      function adjustAllowedVoltageSpenders(address allowedVoltageSpender, bool allowed) external {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L64-L64",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L73-L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L82-L82"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Multiple `address`/ID mappings can be combined into a single `mapping` of an `address`/ID to a `struct`, for readability",
      "description": "Well-organized data structures make code reviews easier, which may lead to fewer bugs. Consider combining related mappings into mappings to structs, so it's clear what data is related. The instances below refer to both mappings using the same key in the same function, so the mappings are related.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit combine into a `struct`: _tokenURIs,numRerolls\n370      function reRoll(uint8 tokenId, uint8 fighterType) public {\n371          require(msg.sender == ownerOf(tokenId));\n372          require(numRerolls[tokenId] < maxRerollsAllowed[fighterType]);\n373          require(_neuronInstance.balanceOf(msg.sender) >= rerollCost, \"Not enough NRN for reroll\");\n374  \n375          _neuronInstance.approveSpender(msg.sender, rerollCost);\n376          bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, rerollCost);\n377          if (success) {\n378              numRerolls[tokenId] += 1;\n379              uint256 dna = uint256(keccak256(abi.encode(msg.sender, tokenId, numRerolls[tokenId])));\n380              (uint256 element, uint256 weight, uint256 newDna) = _createFighterBase(dna, fighterType);\n381              fighters[tokenId].element = element;\n382              fighters[tokenId].weight = weight;\n383              fighters[tokenId].physicalAttributes = _aiArenaHelperInstance.createPhysicalAttributes(\n384                  newDna,\n385                  generation[fighterType],\n386                  fighters[tokenId].iconsType,\n387                  fighters[tokenId].dendroidBool\n388              );\n389              _tokenURIs[tokenId] = \"\";\n390          }\n391:     }    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L370-L391"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit combine into a `struct`: allowanceRemaining,dailyAllowanceReplenishTime\n147      function mint(uint256 tokenId, uint256 quantity) external {\n148          require(tokenId < _itemCount);\n149          uint256 price = allGameItemAttributes[tokenId].itemPrice * quantity;\n150          require(_neuronInstance.balanceOf(msg.sender) >= price, \"Not enough NRN for purchase\");\n151          require(\n152              allGameItemAttributes[tokenId].finiteSupply == false || \n153              (\n154                  allGameItemAttributes[tokenId].finiteSupply == true && \n155                  quantity <= allGameItemAttributes[tokenId].itemsRemaining\n156              )\n157          );\n158          require(\n159              dailyAllowanceReplenishTime[msg.sender][tokenId] <= block.timestamp || \n160              quantity <= allowanceRemaining[msg.sender][tokenId]\n161          );\n162  \n163          _neuronInstance.approveSpender(msg.sender, price);\n164          bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, price);\n165          if (success) {\n166              if (dailyAllowanceReplenishTime[msg.sender][tokenId] <= block.timestamp) {\n167                  _replenishDailyAllowance(tokenId);\n168              }\n169              allowanceRemaining[msg.sender][tokenId] -= quantity;\n170              if (allGameItemAttributes[tokenId].finiteSupply) {\n171                  allGameItemAttributes[tokenId].itemsRemaining -= quantity;\n172              }\n173              _mint(msg.sender, tokenId, quantity, bytes(\"random\"));\n174              emit BoughtItem(msg.sender, tokenId, quantity);\n175          }\n176:     }\n\n/// @audit combine into a `struct`: allowanceRemaining,dailyAllowanceReplenishTime\n268      function getAllowanceRemaining(address owner, uint256 tokenId) public view returns (uint256) {\n269          uint256 remaining = allowanceRemaining[owner][tokenId];\n270          if (dailyAllowanceReplenishTime[owner][tokenId] <= block.timestamp) {\n271              remaining = allGameItemAttributes[tokenId].dailyAllowance;\n272          }\n273          return remaining;\n274:     }\n\n/// @audit combine into a `struct`: allowanceRemaining,dailyAllowanceReplenishTime\n312      function _replenishDailyAllowance(uint256 tokenId) private {\n313          allowanceRemaining[msg.sender][tokenId] = allGameItemAttributes[tokenId].dailyAllowance;\n314          dailyAllowanceReplenishTime[msg.sender][tokenId] = uint32(block.timestamp + 1 days);\n315:     }    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L147-L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L268-L274",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L312-L315"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit combine into a `struct`: isSelectionComplete,winnerAddresses\n118      function pickWinner(uint256[] calldata winners) external {\n119          require(isAdmin[msg.sender]);\n120          require(winners.length == winnersPerPeriod, \"Incorrect number of winners\");\n121          require(!isSelectionComplete[roundId], \"Winners are already selected\");\n122          uint256 winnersLength = winners.length;\n123          address[] memory currentWinnerAddresses = new address[](winnersLength);\n124          for (uint256 i = 0; i < winnersLength; i++) {\n125              currentWinnerAddresses[i] = _fighterFarmInstance.ownerOf(winners[i]);\n126              totalPoints -= fighterPoints[winners[i]];\n127              fighterPoints[winners[i]] = 0;\n128          }\n129          winnerAddresses[roundId] = currentWinnerAddresses;\n130          isSelectionComplete[roundId] = true;\n131          roundId += 1;\n132:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L118-L132"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit combine into a `struct`: rankedNrnDistribution,totalAccumulatedPoints\n233      function setNewRound() external {\n234          require(isAdmin[msg.sender]);\n235          require(totalAccumulatedPoints[roundId] > 0);\n236          roundId += 1;\n237          _stakeAtRiskInstance.setNewRound(roundId);\n238          rankedNrnDistribution[roundId] = rankedNrnDistribution[roundId - 1];\n239:     }\n\n/// @audit combine into a `struct`: _calculatedStakingFactor,amountStaked,hasUnstaked,stakingFactor\n244      function stakeNRN(uint256 amount, uint256 tokenId) external {\n245          require(amount > 0, \"Amount cannot be 0\");\n246          require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n247          require(_neuronInstance.balanceOf(msg.sender) >= amount, \"Stake amount exceeds balance\");\n248          require(hasUnstaked[tokenId][roundId] == false, \"Cannot add stake after unstaking this round\");\n249  \n250          _neuronInstance.approveStaker(msg.sender, address(this), amount);\n251          bool success = _neuronInstance.transferFrom(msg.sender, address(this), amount);\n252          if (success) {\n253              if (amountStaked[tokenId] == 0) {\n254                  _fighterFarmInstance.updateFighterStaking(tokenId, true);\n255              }\n256              amountStaked[tokenId] += amount;\n257              globalStakedAmount += amount;\n258              stakingFactor[tokenId] = _getStakingFactor(\n259                  tokenId, \n260                  _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n261              );\n262              _calculatedStakingFactor[tokenId][roundId] = true;\n263              emit Staked(msg.sender, amount);\n264          }\n265:     }\n\n/// @audit combine into a `struct`: _calculatedStakingFactor,amountStaked,hasUnstaked,stakingFactor\n270      function unstakeNRN(uint256 amount, uint256 tokenId) external {\n271          require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n272          if (amount > amountStaked[tokenId]) {\n273              amount = amountStaked[tokenId];\n274          }\n275          amountStaked[tokenId] -= amount;\n276          globalStakedAmount -= amount;\n277          stakingFactor[tokenId] = _getStakingFactor(\n278              tokenId, \n279              _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n280          );\n281          _calculatedStakingFactor[tokenId][roundId] = true;\n282          hasUnstaked[tokenId][roundId] = true;\n283          bool success = _neuronInstance.transfer(msg.sender, amount);\n284          if (success) {\n285              if (amountStaked[tokenId] == 0) {\n286                  _fighterFarmInstance.updateFighterStaking(tokenId, false);\n287              }\n288              emit Unstaked(msg.sender, amount);\n289          }\n290:     }\n\n/// @audit combine into a `struct`: accumulatedPointsPerAddress,amountClaimed,numRoundsClaimed\n294      function claimNRN() external {\n295          require(numRoundsClaimed[msg.sender] < roundId, \"Already claimed NRNs for this period\");\n296          uint256 claimableNRN = 0;\n297          uint256 nrnDistribution;\n298          uint32 lowerBound = numRoundsClaimed[msg.sender];\n299          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n300              nrnDistribution = getNrnDistribution(currentRound);\n301              claimableNRN += (\n302                  accumulatedPointsPerAddress[msg.sender][currentRound] * nrnDistribution   \n303              ) / totalAccumulatedPoints[currentRound];\n304              numRoundsClaimed[msg.sender] += 1;\n305          }\n306          if (claimableNRN > 0) {\n307              amountClaimed[msg.sender] += claimableNRN;\n308              _neuronInstance.mint(msg.sender, claimableNRN);\n309              emit Claimed(msg.sender, claimableNRN);\n310          }\n311:     }\n\n/// @audit combine into a `struct`: rankedNrnDistribution,totalAccumulatedPoints\n364      function getCurrentStakingData() external view returns(uint256, uint256, uint256) {\n365        return (\n366            roundId,\n367            rankedNrnDistribution[roundId], \n368            totalAccumulatedPoints[roundId]\n369        );\n370:     }\n\n/// @audit combine into a `struct`: accumulatedPointsPerAddress,numRoundsClaimed\n386      function getUnclaimedNRN(address claimer) public view returns(uint256) {\n387          uint256 claimableNRN = 0;\n388          uint256 nrnDistribution;   \n389          uint32 lowerBound = numRoundsClaimed[claimer];\n390          for (uint32 i = lowerBound; i < roundId; i++) {\n391              nrnDistribution = getNrnDistribution(i);\n392              claimableNRN += (\n393                  accumulatedPointsPerAddress[claimer][i] * nrnDistribution\n394              ) / totalAccumulatedPoints[i];\n395          }\n396          return claimableNRN;\n397:     } \n\n/// @audit combine into a `struct`: _calculatedStakingFactor,accumulatedPointsPerFighter,amountStaked,stakingFactor\n416      function _addResultPoints(\n417          uint8 battleResult, \n418          uint256 tokenId, \n419          uint256 eloFactor, \n420          uint256 mergingPortion,\n421          address fighterOwner\n422      ) \n423          private \n424      {\n425          uint256 stakeAtRisk;\n426          uint256 curStakeAtRisk;\n427          uint256 points = 0;\n428  \n429          /// Check how many NRNs the fighter has at risk\n430          stakeAtRisk = _stakeAtRiskInstance.getStakeAtRisk(tokenId);\n431  \n432          /// Calculate the staking factor if it has not already been calculated for this round \n433          if (_calculatedStakingFactor[tokenId][roundId] == false) {\n434              stakingFactor[tokenId] = _getStakingFactor(tokenId, stakeAtRisk);\n435              _calculatedStakingFactor[tokenId][roundId] = true;\n436          }\n437  \n438          /// Potential amount of NRNs to put at risk or retrieve from the stake-at-risk contract\n439          curStakeAtRisk = (bpsLostPerLoss * (amountStaked[tokenId] + stakeAtRisk)) / 10**4;\n440          if (battleResult == 0) {\n441              /// If the user won the match\n442  \n443              /// If the user has no NRNs at risk, then they can earn points\n444              if (stakeAtRisk == 0) {\n445                  points = stakingFactor[tokenId] * eloFactor;\n446              }\n447  \n448              /// Divert a portion of the points to the merging pool\n449              uint256 mergingPoints = (points * mergingPortion) / 100;\n450              points -= mergingPoints;\n451              _mergingPoolInstance.addPoints(tokenId, mergingPoints);\n452  \n453              /// Do not allow users to reclaim more NRNs than they have at risk\n454              if (curStakeAtRisk > stakeAtRisk) {\n455                  curStakeAtRisk = stakeAtRisk;\n456              }\n457  \n458              /// If the user has stake-at-risk for their fighter, reclaim a portion\n459              /// Reclaiming stake-at-risk puts the NRN back into their staking pool\n460              if (curStakeAtRisk > 0) {\n461                  _stakeAtRiskInstance.reclaimNRN(curStakeAtRisk, tokenId, fighterOwner);\n462                  amountStaked[tokenId] += curStakeAtRisk;\n463              }\n464  \n465              /// Add points to the fighter for this round\n466              accumulatedPointsPerFighter[tokenId][roundId] += points;\n467              accumulatedPointsPerAddress[fighterOwner][roundId] += points;\n468              totalAccumulatedPoints[roundId] += points;\n469              if (points > 0) {\n470                  emit PointsChanged(tokenId, points, true);\n471              }\n472          } else if (battleResult == 2) {\n473              /// If the user lost the match\n474  \n475              /// Do not allow users to lose more NRNs than they have in their staking pool\n476              if (curStakeAtRisk > amountStaked[tokenId]) {\n477                  curStakeAtRisk = amountStaked[tokenId];\n478              }\n479              if (accumulatedPointsPerFighter[tokenId][roundId] > 0) {\n480                  /// If the fighter has a positive point balance for this round, deduct points \n481                  points = stakingFactor[tokenId] * eloFactor;\n482                  if (points > accumulatedPointsPerFighter[tokenId][roundId]) {\n483                      points = accumulatedPointsPerFighter[tokenId][roundId];\n484                  }\n485                  accumulatedPointsPerFighter[tokenId][roundId] -= points;\n486                  accumulatedPointsPerAddress[fighterOwner][roundId] -= points;\n487                  totalAccumulatedPoints[roundId] -= points;\n488                  if (points > 0) {\n489                      emit PointsChanged(tokenId, points, false);\n490                  }\n491              } else {\n492                  /// If the fighter does not have any points for this round, NRNs become at risk of being lost\n493                  bool success = _neuronInstance.transfer(_stakeAtRiskAddress, curStakeAtRisk);\n494                  if (success) {\n495                      _stakeAtRiskInstance.updateAtRiskRecords(curStakeAtRisk, tokenId, fighterOwner);\n496                      amountStaked[tokenId] -= curStakeAtRisk;\n497                  }\n498              }\n499          }\n500:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L233-L239",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L244-L265",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L270-L290",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L294-L311",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L364-L370",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L386-L397",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L416-L500"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit combine into a `struct`: stakeAtRisk,totalStakeAtRisk\n93       function reclaimNRN(uint256 nrnToReclaim, uint256 fighterId, address fighterOwner) external {\n94           require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n95           require(\n96               stakeAtRisk[roundId][fighterId] >= nrnToReclaim, \n97               \"Fighter does not have enough stake at risk\"\n98           );\n99   \n100          bool success = _neuronInstance.transfer(_rankedBattleAddress, nrnToReclaim);\n101          if (success) {\n102              stakeAtRisk[roundId][fighterId] -= nrnToReclaim;\n103              totalStakeAtRisk[roundId] -= nrnToReclaim;\n104              amountLost[fighterOwner] -= nrnToReclaim;\n105              emit ReclaimedStake(fighterId, nrnToReclaim);\n106          }\n107:     }\n\n/// @audit combine into a `struct`: stakeAtRisk,totalStakeAtRisk\n115      function updateAtRiskRecords(\n116          uint256 nrnToPlaceAtRisk, \n117          uint256 fighterId, \n118          address fighterOwner\n119      ) \n120          external \n121      {\n122          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n123          stakeAtRisk[roundId][fighterId] += nrnToPlaceAtRisk;\n124          totalStakeAtRisk[roundId] += nrnToPlaceAtRisk;\n125          amountLost[fighterOwner] += nrnToPlaceAtRisk;\n126          emit IncreasedStakeAtRisk(fighterId, nrnToPlaceAtRisk);\n127:     }   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L93-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit combine into a `struct`: ownerVoltage,ownerVoltageReplenishTime\n105      function spendVoltage(address spender, uint8 voltageSpent) public {\n106          require(spender == msg.sender || allowedVoltageSpenders[msg.sender]);\n107          if (ownerVoltageReplenishTime[spender] <= block.timestamp) {\n108              _replenishVoltage(spender);\n109          }\n110          ownerVoltage[spender] -= voltageSpent;\n111          emit VoltageRemaining(spender, ownerVoltage[spender]);\n112:     }\n\n/// @audit combine into a `struct`: ownerVoltage,ownerVoltageReplenishTime\n117      function _replenishVoltage(address owner) private {\n118          ownerVoltage[owner] = 100;\n119          ownerVoltageReplenishTime[owner] = uint32(block.timestamp + 1 days);\n120:     }    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L105-L112",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L117-L120"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Named imports of parent contracts are missing",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit ERC721\n/// @audit ERC721Enumerable\n16:  contract FighterFarm is ERC721, ERC721Enumerable {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L16",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit ERC1155\n10:  contract GameItems is ERC1155 {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10-L10"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit ERC20\n/// @audit AccessControl\n11:  contract Neuron is ERC20, AccessControl {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L11-L11",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L11-L11"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Contract declarations should have `@dev` tags",
      "description": "`@dev` is used to explain extra details to developers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n10   contract AiArenaHelper {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                               STATE VARIABLES\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice List of attributes\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n10   contract GameItems is ERC1155 {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16       /// @notice Event emitted when a game item is bought.\n17       /// @param buyer The address of the buyer.\n18       /// @param tokenId The id of the game item.\n19:      /// @param quantity The quantity of the game item.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n9    contract MergingPool {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when merging pool points are added.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L9-L15"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n16   contract RankedBattle {\n17   \n18:      /// @dev Extend functionality of the FixedPointMathLib library to the uint data type.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n10   contract StakeAtRisk {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice Event emitted when NRNs are reclaimed from this contract (after a win in ranked).\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n9    contract VoltageManager {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when voltage amount is altered.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L9-L15"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Event `@param` tag is missing",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit Missing '@param tokenId'\n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22       /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n23:      event Locked(uint256 tokenId);\n\n/// @audit Missing '@param tokenId'\n21   \n22       /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n23       event Locked(uint256 tokenId);\n24   \n25       /// @notice Event emitted when a fighter is unlocked and can be traded.\n26:      event Unlocked(uint256 tokenId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L18-L23",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L21-L26"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit Missing '@param buyer'\n/// @audit Missing '@param tokenId'\n/// @audit Missing '@param quantity'\n15   \n16       /// @notice Event emitted when a game item is bought.\n17       /// @param buyer The address of the buyer.\n18       /// @param tokenId The id of the game item.\n19       /// @param quantity The quantity of the game item.\n20:      event BoughtItem(address buyer, uint256 tokenId, uint256 quantity);\n\n/// @audit Missing '@param tokenId'\n19       /// @param quantity The quantity of the game item.\n20       event BoughtItem(address buyer, uint256 tokenId, uint256 quantity);\n21   \n22       /// @notice Event emitted when an item is locked and thus cannot be traded.\n23       /// @param tokenId The id of the game item.\n24:      event Locked(uint256 tokenId);\n\n/// @audit Missing '@param tokenId'\n23       /// @param tokenId The id of the game item.\n24       event Locked(uint256 tokenId);\n25   \n26       /// @notice Event emitted when an item is unlocked and can be traded.\n27       /// @param tokenId The id of the game item.\n28:      event Unlocked(uint256 tokenId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L15-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L15-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L15-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L19-L24",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L23-L28"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit Missing '@param tokenId'\n/// @audit Missing '@param points'\n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15       /// @notice Event emitted when merging pool points are added.\n16:      event PointsAdded(uint256 tokenId, uint256 points);\n\n/// @audit Missing '@param claimer'\n/// @audit Missing '@param amount'\n14   \n15       /// @notice Event emitted when merging pool points are added.\n16       event PointsAdded(uint256 tokenId, uint256 points);\n17   \n18       /// @notice Event emitted when claimed.\n19:      event Claimed(address claimer, uint32 amount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L11-L16",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L11-L16",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L14-L19",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L14-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit Missing '@param user'\n/// @audit Missing '@param amount'\n13       /*//////////////////////////////////////////////////////////////\n14                                   EVENTS\n15       //////////////////////////////////////////////////////////////*/\n16   \n17       /// @notice Event emitted when tokens are claimed.\n18:      event TokensClaimed(address user, uint256 amount);\n\n/// @audit Missing '@param user'\n/// @audit Missing '@param amount'\n16   \n17       /// @notice Event emitted when tokens are claimed.\n18       event TokensClaimed(address user, uint256 amount);\n19   \n20       /// @notice Event emitted when tokens are minted.\n21:      event TokensMinted(address user, uint256 amount);    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L13-L18",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L13-L18",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L16-L21",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L16-L21"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit Missing '@param from'\n/// @audit Missing '@param amount'\n21       /*//////////////////////////////////////////////////////////////\n22                                   EVENTS\n23       //////////////////////////////////////////////////////////////*/\n24   \n25       /// @notice Event emitted when staked.\n26:      event Staked(address from, uint256 amount);\n\n/// @audit Missing '@param from'\n/// @audit Missing '@param amount'\n24   \n25       /// @notice Event emitted when staked.\n26       event Staked(address from, uint256 amount);\n27   \n28       /// @notice Event emitted when unstaked.\n29:      event Unstaked(address from, uint256 amount);\n\n/// @audit Missing '@param claimer'\n/// @audit Missing '@param amount'\n27   \n28       /// @notice Event emitted when unstaked.\n29       event Unstaked(address from, uint256 amount);\n30   \n31       /// @notice Event emitted when claimed.\n32:      event Claimed(address claimer, uint256 amount);\n\n/// @audit Missing '@param tokenId'\n/// @audit Missing '@param points'\n/// @audit Missing '@param increased'\n30   \n31       /// @notice Event emitted when claimed.\n32       event Claimed(address claimer, uint256 amount);\n33   \n34       /// @notice Event emitted when points are added or subtracted from a fighter.\n35:      event PointsChanged(uint256 tokenId, uint256 points, bool increased);    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L21-L26",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L21-L26",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L24-L29",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L24-L29",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L27-L32",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L27-L32",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L30-L35",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L30-L35",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L30-L35"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit Missing '@param fighterId'\n/// @audit Missing '@param reclaimAmount'\n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16       /// @notice Event emitted when NRNs are reclaimed from this contract (after a win in ranked).\n17:      event ReclaimedStake(uint256 fighterId, uint256 reclaimAmount);\n\n/// @audit Missing '@param fighterId'\n/// @audit Missing '@param atRiskAmount'\n15   \n16       /// @notice Event emitted when NRNs are reclaimed from this contract (after a win in ranked).\n17       event ReclaimedStake(uint256 fighterId, uint256 reclaimAmount);\n18   \n19       /// @notice Event emitted when more NRNs are placed at risk.\n20:      event IncreasedStakeAtRisk(uint256 fighterId, uint256 atRiskAmount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L12-L17",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L12-L17",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L15-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L15-L20"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit Missing '@param spender'\n/// @audit Missing '@param voltage'\n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15       /// @notice Event emitted when voltage amount is altered.\n16:      event VoltageRemaining(address spender, uint8 voltage);  \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L11-L16",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L11-L16"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Event declarations should have `@dev` tags",
      "description": "`@dev` is used to explain extra details to developers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n23:      event Locked(uint256 tokenId);\n\n26:      event Unlocked(uint256 tokenId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L23-L23",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L26-L26"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n20:      event BoughtItem(address buyer, uint256 tokenId, uint256 quantity);\n\n24:      event Locked(uint256 tokenId);\n\n28:      event Unlocked(uint256 tokenId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L20-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L24-L24",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L28-L28"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n16:      event PointsAdded(uint256 tokenId, uint256 points);\n\n19:      event Claimed(address claimer, uint32 amount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L16-L16",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L19-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n18:      event TokensClaimed(address user, uint256 amount);\n\n21:      event TokensMinted(address user, uint256 amount);    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L18-L18",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L21-L21"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n26:      event Staked(address from, uint256 amount);\n\n29:      event Unstaked(address from, uint256 amount);\n\n32:      event Claimed(address claimer, uint256 amount);\n\n35:      event PointsChanged(uint256 tokenId, uint256 points, bool increased);    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L26-L26",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L29-L29",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L32-L32",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L35-L35"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n17:      event ReclaimedStake(uint256 fighterId, uint256 reclaimAmount);\n\n20:      event IncreasedStakeAtRisk(uint256 fighterId, uint256 atRiskAmount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L17-L17",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L20-L20"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n16:      event VoltageRemaining(address spender, uint8 voltage);  \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L16-L16"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function `@param` tag is missing",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit Missing '@param generation'\n80       /// @param iconsType Type of icons fighter (0 means it's not an icon).\n81       /// @param dendroidBool Whether the fighter is a dendroid or not\n82       /// @return Fighter physical attributes.\n83       function createPhysicalAttributes(\n84           uint256 dna, \n85:          uint8 generation, \n\n/// @audit Missing '@param generation'\n164  \n165       /// @dev Convert DNA and rarity rank into an attribute probability index.\n166       /// @param attribute The attribute name.\n167       /// @param rarityRank The rarity rank.\n168       /// @return attributeProbabilityIndex attribute probability index.\n169:     function dnaToIndex(uint256 generation, uint256 rarityRank, string memory attribute) \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L80-L85",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L164-L169"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit Missing '@param iconsTypes'\n231      /// @param modelHashes Array of ML model hashes corresponding to the fighters being minted. \n232      /// @param modelTypes Array of ML model types corresponding to the fighters being minted.\n233      function redeemMintPass(\n234          uint256[] calldata mintpassIdsToBurn,\n235          uint8[] calldata fighterTypes,\n236:         uint8[] calldata iconsTypes,\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L231-L236"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit Missing '@param from'\n287      }\n288  \n289      /// @notice Safely transfers an NFT from one address to another.\n290      /// @dev Added a check to see if the game item is transferable.\n291      function safeTransferFrom(\n292:         address from, \n\n/// @audit Missing '@param to'\n288  \n289      /// @notice Safely transfers an NFT from one address to another.\n290      /// @dev Added a check to see if the game item is transferable.\n291      function safeTransferFrom(\n292          address from, \n293:         address to, \n\n/// @audit Missing '@param tokenId'\n289      /// @notice Safely transfers an NFT from one address to another.\n290      /// @dev Added a check to see if the game item is transferable.\n291      function safeTransferFrom(\n292          address from, \n293          address to, \n294:         uint256 tokenId,\n\n/// @audit Missing '@param amount'\n290      /// @dev Added a check to see if the game item is transferable.\n291      function safeTransferFrom(\n292          address from, \n293          address to, \n294          uint256 tokenId,\n295:         uint256 amount,\n\n/// @audit Missing '@param data'\n291      function safeTransferFrom(\n292          address from, \n293          address to, \n294          uint256 tokenId,\n295          uint256 amount,\n296:         bytes memory data\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L287-L292",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L288-L293",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L289-L294",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L290-L295",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L291-L296"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit Missing '@param fighterOwner'\n113      /// @param nrnToPlaceAtRisk The amount of NRN tokens to place at risk.\n114      /// @param fighterId The ID of the fighter.\n115      function updateAtRiskRecords(\n116          uint256 nrnToPlaceAtRisk, \n117          uint256 fighterId, \n118:         address fighterOwner\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L113-L118"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function `@return` tag is missing",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit Missing '@return  '\n297      /// @notice Checks whether the given token ID exists.\n298      /// @param tokenId The ID of the fighter to check for existence.\n299:     function doesTokenExist(uint256 tokenId) external view returns (bool) {\n\n/// @audit Missing '@return  '\n419      /// @notice Returns all information related to the specified fighter token ID.\n420      /// @param tokenId The unique identifier for the fighter token.\n421      function getAllFighterInfo(\n422          uint256 tokenId\n423      )\n424          public\n425          view\n426          returns (\n427              address,\n428              uint256[6] memory,\n429              uint256,\n430              uint256,\n431              string memory,\n432              string memory,\n433              uint16\n434          )\n435:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L297-L299",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L419-L435"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit Missing '@return  '\n140      /// @notice Sweeps the lost stake to the treasury contract.\n141      /// @dev This function is called internally to transfer the lost stake to the treasury contract.\n142:     function _sweepLostStake() private returns(bool) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L140-L142"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function declarations should have `@dev` tags",
      "description": "`@dev` is used to explain to developers what the potential integration issues/foot-guns are",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n68:      function addAttributeDivisor(uint8[] memory attributeDivisors) external {\n\n83       function createPhysicalAttributes(\n84           uint256 dna, \n85           uint8 generation, \n86           uint8 iconsType, \n87           bool dendroidBool\n88       ) \n89           external \n90           view \n91           returns (FighterOps.FighterPhysicalAttributes memory) \n92:      {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L68-L68",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L83-L92"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n104      constructor(address ownerAddress, address delegatedAddress, address treasuryAddress_)\n105          ERC721(\"AI Arena Fighter\", \"FTR\")\n106:     {\n\n299:     function doesTokenExist(uint256 tokenId) external view returns (bool) {\n\n370:     function reRoll(uint8 tokenId, uint8 fighterType) public {\n\n395:     function contractURI() public pure returns (string memory) {\n\n402:     function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {\n\n421      function getAllFighterInfo(\n422          uint256 tokenId\n423      )\n424          public\n425          view\n426          returns (\n427              address,\n428              uint256[6] memory,\n429              uint256,\n430              uint256,\n431              string memory,\n432              string memory,\n433              uint16\n434          )\n435:     {\n\n447      function _beforeTokenTransfer(address from, address to, uint256 tokenId)\n448          internal\n449          override(ERC721, ERC721Enumerable)\n450:     {\n\n462      function _createFighterBase(\n463          uint256 dna, \n464          uint8 fighterType\n465      ) \n466          private \n467          view \n468          returns (uint256, uint256, uint256) \n469:     {\n\n484      function _createNewFighter(\n485          address to, \n486          uint256 dna, \n487          string memory modelHash,\n488          string memory modelType, \n489          uint8 fighterType,\n490          uint8 iconsType,\n491          uint256[2] memory customAttributes\n492      ) \n493          private \n494:     {  \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L104-L106",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L299-L299",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L370-L370",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L395-L395",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L402-L402",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L421-L435",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L447-L450",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L462-L469",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L484-L494"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n95:      constructor(address ownerAddress, address treasuryAddress_) ERC1155(\"https://ipfs.io/ipfs/\") {\n\n147:     function mint(uint256 tokenId, uint256 quantity) external {\n\n249:     function contractURI() public pure returns (string memory) {\n\n256:     function uri(uint256 tokenId) public view override returns (string memory) {\n\n268:     function getAllowanceRemaining(address owner, uint256 tokenId) public view returns (uint256) {\n\n279:     function remainingSupply(uint256 tokenId) public view returns (uint256) {\n\n285:     function uniqueTokensOutstanding() public view returns (uint256) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L95-L95",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L147-L147",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L249-L249",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L256-L256",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L268-L268",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L279-L279",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L285-L285"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n71       constructor(\n72           address ownerAddress, \n73           address rankedBattleAddress, \n74           address fighterFarmAddress\n75:      ) {\n\n172:     function getUnclaimedRewards(address claimer) external view returns(uint256) {\n\n205:     function getFighterPoints(uint256 maxId) public view returns(uint256[] memory) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L71-L75",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L172-L172",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L205-L205"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n68       constructor(address ownerAddress, address treasuryAddress_, address contributorAddress)\n69           ERC20(\"Neuron\", \"NRN\")\n70:      {\n\n138:     function claim(uint256 amount) external {\n\n163:     function burn(uint256 amount) public virtual {\n\n196:     function burnFrom(address account, uint256 amount) public virtual {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L68-L70",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L138-L138",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L163-L163",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L196-L196"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n146      constructor(\n147        address ownerAddress, \n148        address gameServerAddress,\n149        address fighterFarmAddress,\n150        address voltageManagerAddress\n151:     ) {\n\n244:     function stakeNRN(uint256 amount, uint256 tokenId) external {\n\n270:     function unstakeNRN(uint256 amount, uint256 tokenId) external {\n\n354:     function getBattleRecord(uint256 tokenId) external view returns(uint32, uint32, uint32) {\n\n364:     function getCurrentStakingData() external view returns(uint256, uint256, uint256) {\n\n379:     function getNrnDistribution(uint256 roundId_) public view returns(uint256) {\n\n386:     function getUnclaimedNRN(address claimer) public view returns(uint256) {\n\n505:     function _updateRecord(uint256 tokenId, uint8 battleResult) private {\n\n519      function _getStakingFactor(\n520          uint256 tokenId, \n521          uint256 stakeAtRisk\n522      ) \n523          private \n524          view \n525          returns (uint256) \n526:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L146-L151",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L244-L244",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L270-L270",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L354-L354",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L364-L364",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L379-L379",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L386-L386",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L505-L505",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L519-L526"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n60       constructor(\n61           address treasuryAddress_,\n62           address nrnAddress,\n63           address rankedBattleAddress\n64:      ) {\n\n132:     function getStakeAtRisk(uint256 fighterId) external view returns(uint256) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L60-L64",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L132-L132"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n51:      constructor(address ownerAddress, address gameItemsContractAddress) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L51-L51"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Non-public state variable declarations should use `@dev` tags",
      "description": "i.e. `@dev` [tags](https://docs.soliditylang.org/en/latest/natspec-format.html#tags). Note that since they're non-public, `@notice` is not the right tag to use.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n23:      address _ownerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L23-L23"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n51:      address _ownerAddress;\n\n54:      address _delegatedAddress;\n\n57:      address _mergingPoolAddress;\n\n94:      mapping(uint256 => string) private _tokenURIs;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L51-L51",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L54-L54",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L57-L57",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L94-L94"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n61:      address _ownerAddress;\n\n64:      uint256 _itemCount = 0;    \n\n86:      mapping(uint256 => string) private _tokenURIs;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L61-L61",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L64-L64",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L86-L86"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n35:      address _ownerAddress;\n\n38:      address _rankedBattleAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L35-L35",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L38-L38"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n49:      address _ownerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L49-L49"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n69:      address _stakeAtRiskAddress;\n\n72:      address _ownerAddress;\n\n75:      address _gameServerAddress;\n\n82:      Neuron _neuronInstance;\n\n85:      FighterFarm _fighterFarmInstance;\n\n88:      VoltageManager _voltageManagerInstance;\n\n91:      MergingPool _mergingPoolInstance;\n\n94:      StakeAtRisk _stakeAtRiskInstance;\n\n134:     mapping(uint256 => mapping(uint256 => bool)) _calculatedStakingFactor;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L69-L69",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L72-L72",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L75-L75",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L82-L82",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L85-L85",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L88-L88",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L91-L91",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L134-L134"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n33:      address _rankedBattleAddress;\n\n36:      Neuron _neuronInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L33-L33",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L36-L36"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n23:      address _ownerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L23-L23"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Non-library/interface files should use fixed compiler versions, not floating ones",
      "description": "Note that some file names may indicate an interface, but actually contain abstract contracts",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n3:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L3-L3"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Outdated package versions",
      "description": "Packages should be updated to the latest major version (if not the very latest version) to ensure the uptake of any important fixes.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n9:   import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L9-L9"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n5:   import \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L5-L5"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n4:   import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n5:   import \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L4-L4",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L5-L5"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Setters should prevent re-setting of the same value",
      "description": "This especially problematic when the setter also emits the same value, which may be confusing to offline parsers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit _mergingPoolAddress:  setMergingPoolAddress()\n171      function setMergingPoolAddress(address mergingPoolAddress) external {\n172          require(msg.sender == _ownerAddress);\n173          _mergingPoolAddress = mergingPoolAddress;\n174:     }\n\n/// @audit _tokenURIs:  setTokenURI()\n180      function setTokenURI(uint256 tokenId, string calldata newTokenURI) external {\n181          require(msg.sender == _delegatedAddress);\n182          _tokenURIs[tokenId] = newTokenURI;\n183:     }\n\n/// @audit fighterStaked:  updateFighterStaking()\n268      function updateFighterStaking(uint256 tokenId, bool stakingStatus) external {\n269          require(hasStakerRole[msg.sender]);\n270          fighterStaked[tokenId] = stakingStatus;\n271          if (stakingStatus) {\n272              emit Locked(tokenId);\n273          } else {\n274              emit Unlocked(tokenId);\n275          }\n276:     }\n\n/// @audit fighters:  updateModel()\n283      function updateModel(\n284          uint256 tokenId, \n285          string calldata modelHash,\n286          string calldata modelType\n287      ) \n288          external\n289      {\n290          require(msg.sender == ownerOf(tokenId));\n291          fighters[tokenId].modelHash = modelHash;\n292          fighters[tokenId].modelType = modelType;\n293          numTrained[tokenId] += 1;\n294          totalNumTrained += 1;\n295:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L171-L174",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L180-L183",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L268-L276",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L283-L295"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit _tokenURIs:  setTokenURI()\n194      function setTokenURI(uint256 tokenId, string memory _tokenURI) public {\n195          require(isAdmin[msg.sender]);\n196          _tokenURIs[tokenId] = _tokenURI;\n197:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L194-L197"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit winnersPerPeriod:  updateWinnersPerPeriod()\n106      function updateWinnersPerPeriod(uint256 newWinnersPerPeriodAmount) external {\n107          require(isAdmin[msg.sender]);\n108          winnersPerPeriod = newWinnersPerPeriodAmount;\n109:     }    \n\n/// @audit totalPoints:  addPoints()\n/// @audit fighterPoints:  addPoints()\n195      function addPoints(uint256 tokenId, uint256 points) public {\n196          require(msg.sender == _rankedBattleAddress, \"Not Ranked Battle contract address\");\n197          fighterPoints[tokenId] += points;\n198          totalPoints += points;\n199          emit PointsAdded(tokenId, points);\n200:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L106-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L195-L200",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L195-L200"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit _gameServerAddress:  setGameServerAddress()\n184      function setGameServerAddress(address gameServerAddress) external {\n185          require(msg.sender == _ownerAddress);\n186          _gameServerAddress = gameServerAddress;\n187:     }\n\n/// @audit _stakeAtRiskAddress:  setStakeAtRiskAddress()\n192      function setStakeAtRiskAddress(address stakeAtRiskAddress) external {\n193          require(msg.sender == _ownerAddress);\n194          _stakeAtRiskAddress = stakeAtRiskAddress;\n195          _stakeAtRiskInstance = StakeAtRisk(_stakeAtRiskAddress);\n196:     }\n\n/// @audit bpsLostPerLoss:  setBpsLostPerLoss()\n226      function setBpsLostPerLoss(uint256 bpsLostPerLoss_) external {\n227          require(isAdmin[msg.sender]);\n228          bpsLostPerLoss = bpsLostPerLoss_;\n229:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L184-L187",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L192-L196",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L226-L229"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit roundId:  setNewRound()\n78       function setNewRound(uint256 roundId_) external {\n79           require(msg.sender == _rankedBattleAddress, \"Not authorized to set new round\");\n80           bool success = _sweepLostStake();\n81           if (success) {\n82               roundId = roundId_;\n83           }\n84:      }\n\n/// @audit amountLost:  updateAtRiskRecords()\n/// @audit totalStakeAtRisk:  updateAtRiskRecords()\n/// @audit stakeAtRisk:  updateAtRiskRecords()\n115      function updateAtRiskRecords(\n116          uint256 nrnToPlaceAtRisk, \n117          uint256 fighterId, \n118          address fighterOwner\n119      ) \n120          external \n121      {\n122          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n123          stakeAtRisk[roundId][fighterId] += nrnToPlaceAtRisk;\n124          totalStakeAtRisk[roundId] += nrnToPlaceAtRisk;\n125          amountLost[fighterOwner] += nrnToPlaceAtRisk;\n126          emit IncreasedStakeAtRisk(fighterId, nrnToPlaceAtRisk);\n127:     }   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L78-L84",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Contract does not follow the Solidity style guide's suggested layout ordering",
      "description": "The [style guide](https://docs.soliditylang.org/en/v0.8.16/style-guide.html#order-of-layout) says that, within a contract, the ordering should be 1) Type declarations, 2) State variables, 3) Events, 4) Modifiers, and 5) Functions, but the contract(s) below do not follow this ordering",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit event Unlocked came earlier\n33:       uint8 public constant MAX_FIGHTERS_ALLOWED = 10;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L33"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit event Unlocked came earlier\n49:       string public name = \"AI Arena Game Items\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L49"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit event Claimed came earlier\n26:       uint256 public winnersPerPeriod = 2;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L26"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit event TokensMinted came earlier\n28:       bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L28"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit event PointsChanged came earlier\n53:       uint8 public constant VOLTAGE_COST = 10;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L53"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit event IncreasedStakeAtRisk came earlier\n27:       uint256 public roundId = 0;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L27"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit event VoltageRemaining came earlier\n23:       address _ownerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L23"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Control structures do not follow the Solidity Style Guide",
      "description": "See the [control structures](https://docs.soliditylang.org/en/latest/style-guide.html#control-structures) section of the Solidity Style Guide",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n501           }\n502:          else {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L501-L502"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Extraneous whitespace",
      "description": "See the [whitespace](https://docs.soliditylang.org/en/v0.8.16/style-guide.html#whitespace-in-expressions) section of the Solidity Style Guide",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n5:    import { FighterOps } from \"./FighterOps.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L5"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n4:    import { FighterOps } from \"./FighterOps.sol\";\n\n5:    import { Verification } from \"./Verification.sol\";\n\n6:    import { AAMintPass } from \"./AAMintPass.sol\";\n\n7:    import { AiArenaHelper } from \"./AiArenaHelper.sol\";\n\n8:    import { Neuron } from \"./Neuron.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L4",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L5",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L6",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L7",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L8"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n4:    import { Neuron } from \"./Neuron.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L4"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n4:    import { FighterFarm } from \"./FighterFarm.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L4"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n4:    import { FighterFarm } from \"./FighterFarm.sol\";\n\n5:    import { VoltageManager } from \"./VoltageManager.sol\";\n\n6:    import { MergingPool } from \"./MergingPool.sol\";\n\n7:    import { Neuron } from \"./Neuron.sol\";\n\n8:    import { StakeAtRisk } from \"./StakeAtRisk.sol\";\n\n9:    import { FixedPointMathLib } from './FixedPointMathLib.sol';\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L4",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L5",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L6",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L7",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L8",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L9"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n4:    import { Neuron } from \"./Neuron.sol\";\n\n5:    import { RankedBattle } from \"./RankedBattle.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L4",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L5"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n4:    import { GameItems } from \"./GameItems.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L4"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Typos",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit recieves\n57:       /// @notice The address that recieves funds of purchased game items.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L57"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unnecessary cast",
      "description": "The variable is being cast to its own type",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit bytes32\n199          bytes32 msgHash = bytes32(keccak256(abi.encode(\n200              msg.sender, \n201              numToMint[0], \n202              numToMint[1],\n203              nftsClaimed[msg.sender][0],\n204              nftsClaimed[msg.sender][1]\n205:         )));\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L199-L205"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unused `event` definition",
      "description": "Note that there may be cases where an event superficially appears to be used, but this is only because there are multiple definitions of the event in different files. In such cases, the event definition should be moved into a separate file. The instances below are the unused definitions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n21:      event TokensMinted(address user, uint256 amount);    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L21-L21"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unused import",
      "description": "The identifier is imported but never used within the file",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit RankedBattle\n5:   import { RankedBattle } from \"./RankedBattle.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L5-L5"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use of `override` is unnecessary",
      "description": "Starting with Solidity version [0.8.8](https://docs.soliditylang.org/en/v0.8.20/contracts.html#function-overriding), using the `override` keyword when the function solely overrides an interface function, and the function doesn't exist in multiple base contracts, is unnecessary.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n338      function transferFrom(\n339          address from, \n340          address to, \n341          uint256 tokenId\n342      ) \n343          public \n344          override(ERC721, IERC721)\n345:     {\n\n355      function safeTransferFrom(\n356          address from, \n357          address to, \n358          uint256 tokenId\n359      ) \n360          public \n361          override(ERC721, IERC721)\n362:     {\n\n402:     function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {\n\n410      function supportsInterface(bytes4 _interfaceId)\n411          public\n412          view\n413          override(ERC721, ERC721Enumerable)\n414          returns (bool)\n415:     {\n\n447      function _beforeTokenTransfer(address from, address to, uint256 tokenId)\n448          internal\n449          override(ERC721, ERC721Enumerable)\n450:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L338-L345",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L355-L362",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L402-L402",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L410-L415",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L447-L450"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n256:     function uri(uint256 tokenId) public view override returns (string memory) {\n\n291      function safeTransferFrom(\n292          address from, \n293          address to, \n294          uint256 tokenId,\n295          uint256 amount,\n296          bytes memory data\n297      ) \n298          public \n299          override(ERC1155)\n300:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L256-L256",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L291-L300"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use scientific notation (e.g. `1e18`) rather than exponentiation (e.g. `10**18`)",
      "description": "While the compiler knows to optimize away the exponentiation, it's still better coding practice to use idioms that do not require compiler optimization, if they exist",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n39:       uint256 public rerollCost = 1000 * 10**18;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L39"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n37:       uint256 public constant INITIAL_TREASURY_MINT = 10**18 * 10**8 * 2;\n\n37:       uint256 public constant INITIAL_TREASURY_MINT = 10**18 * 10**8 * 2;\n\n40:       uint256 public constant INITIAL_CONTRIBUTOR_MINT = 10**18 * 10**8 * 5;\n\n40:       uint256 public constant INITIAL_CONTRIBUTOR_MINT = 10**18 * 10**8 * 5;\n\n43:       uint256 public constant MAX_SUPPLY = 10**18 * 10**9;\n\n43:       uint256 public constant MAX_SUPPLY = 10**18 * 10**9;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L37",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L37",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L40",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L40",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L43",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L43"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n157:          rankedNrnDistribution[0] = 5000 * 10**18;\n\n220:          rankedNrnDistribution[roundId] = newDistribution * 10**18;\n\n439:          curStakeAtRisk = (bpsLostPerLoss * (amountStaked[tokenId] + stakeAtRisk)) / 10**4;\n\n528:            (amountStaked[tokenId] + stakeAtRisk) / 10**18\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L220",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L439",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L528"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use the latest solidity (prior to 0.8.20 if on L2s) for deployment",
      "description": "```\r\nWhen deploying contracts, you should use the latest released version of Solidity. Apart from exceptional cases, only the latest version receives security fixes.\r\n```\r\nhttps://docs.soliditylang.org/en/v0.8.20/\r\n\r\nSince deployed contracts should not use floating pragmas, I've flagged all instances where a version prior to 0.8.19 is allowed by the version pragma",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n3:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L3-L3"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Variables need not be initialized to zero",
      "description": "The default value for variables is zero, so initializing them to zero is superfluous.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n48:          for (uint8 i = 0; i < attributesLength; i++) {\n\n73:          for (uint8 i = 0; i < attributesLength; i++) {\n\n99:              for (uint8 i = 0; i < attributesLength; i++) {\n\n136:         for (uint8 i = 0; i < attributesLength; i++) {\n\n148:         for (uint8 i = 0; i < attributesLength; i++) {\n\n176:         uint256 cumProb = 0;\n\n178:         for (uint8 i = 0; i < attrProbabilitiesLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L48-L48",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L73-L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L99-L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L136-L136",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L176-L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L178-L178"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n211:         for (uint16 i = 0; i < totalToMint; i++) {\n\n249:         for (uint16 i = 0; i < mintpassIdsToBurn.length; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L211-L211",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249-L249"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n64:      uint256 _itemCount = 0;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L64-L64"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n29:      uint256 public roundId = 0;\n\n32:      uint256 public totalPoints = 0;    \n\n124:         for (uint256 i = 0; i < winnersLength; i++) {\n\n147:         uint32 claimIndex = 0;\n\n152:             for (uint32 j = 0; j < winnersLength; j++) {\n\n174:         uint256 numRewards = 0;\n\n178:             for (uint32 j = 0; j < winnersLength; j++) {\n\n207:         for (uint256 i = 0; i < maxId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L29-L29",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L32-L32",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L124-L124",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L147-L147",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L152-L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L174-L174",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L178-L178",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L207-L207"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n131:         for (uint32 i = 0; i < recipientsLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L131-L131"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n56:      uint256 public totalBattles = 0;\n\n59:      uint256 public globalStakedAmount = 0;\n\n62:      uint256 public roundId = 0;\n\n296:         uint256 claimableNRN = 0;\n\n387:         uint256 claimableNRN = 0;\n\n427:         uint256 points = 0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L56-L56",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L59-L59",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L62-L62",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L296-L296",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L387-L387",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L427-L427"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n27:      uint256 public roundId = 0;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L27-L27"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Visibility should be set explicitly rather than defaulting to `internal`",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n23:       address _ownerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L23"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n51:       address _ownerAddress;\n\n54:       address _delegatedAddress;\n\n57:       address _mergingPoolAddress;\n\n60:       AiArenaHelper _aiArenaHelperInstance;\n\n63:       AAMintPass _mintpassInstance;\n\n66:       Neuron _neuronInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L51",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L54",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L57",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L60",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L63",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L66"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n61:       address _ownerAddress;\n\n64:       uint256 _itemCount = 0;    \n\n67:       Neuron _neuronInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L61",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L64",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L67"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n35:       address _ownerAddress;\n\n38:       address _rankedBattleAddress;\n\n41:       FighterFarm _fighterFarmInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L35",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L38",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L41"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n49:       address _ownerAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L49"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n69:       address _stakeAtRiskAddress;\n\n72:       address _ownerAddress;\n\n75:       address _gameServerAddress;\n\n82:       Neuron _neuronInstance;\n\n85:       FighterFarm _fighterFarmInstance;\n\n88:       VoltageManager _voltageManagerInstance;\n\n91:       MergingPool _mergingPoolInstance;\n\n94:       StakeAtRisk _stakeAtRiskInstance;\n\n134:      mapping(uint256 => mapping(uint256 => bool)) _calculatedStakingFactor;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L69",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L72",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L75",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L82",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L85",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L88",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L91",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L134"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n33:       address _rankedBattleAddress;\n\n36:       Neuron _neuronInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L33",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L36"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n23:       address _ownerAddress;\n\n26:       GameItems _gameItemsContractInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L23",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L26"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`abi.encode()` is less efficient than `abi.encodepacked()` for non-address arguments",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n254:                 uint256(keccak256(abi.encode(mintPassDnas[i]))), \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L254-L254"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Argument validation should be at the top of the function/block",
      "description": "Checks that involve constants should come before checks that involve state variables, function calls, and calculations. By doing these checks first, the function is able to revert before wasting a Gcoldsload (**2100 gas***) in a function that may ultimately revert in the unhappy case.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n133:         require(probabilities.length == 6, \"Invalid number of attribute arrays\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L133-L133"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n129:         require(recipients.length == amounts.length);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L129-L129"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n332:         require(mergingPortion <= 100);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L332-L332"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Check `msg.sender` using `xor` and the scratch space",
      "description": "See [this](https://code4rena.com/reports/2023-05-juicebox#g-06-use-assembly-to-validate-msgsender) prior finding for details on the conversion",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n62:          require(msg.sender == _ownerAddress);\n\n69:          require(msg.sender == _ownerAddress);\n\n132:         require(msg.sender == _ownerAddress);\n\n145:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L62-L62",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L69-L69",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L132-L132",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L145-L145"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n121:         require(msg.sender == _ownerAddress);\n\n130:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n148:         require(msg.sender == _ownerAddress);\n\n156:         require(msg.sender == _ownerAddress);\n\n164:         require(msg.sender == _ownerAddress);\n\n172:         require(msg.sender == _ownerAddress);\n\n181:         require(msg.sender == _delegatedAddress);\n\n250:             require(msg.sender == _mintpassInstance.ownerOf(mintpassIdsToBurn[i]));\n\n290:         require(msg.sender == ownerOf(tokenId));\n\n321:         require(msg.sender == _mergingPoolAddress);\n\n371:         require(msg.sender == ownerOf(tokenId));\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L121-L121",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L130-L130",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L140-L140",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L156-L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L164-L164",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L172-L172",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L181-L181",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L250-L250",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L290-L290",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L321-L321",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L371-L371"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n109:         require(msg.sender == _ownerAddress);\n\n118:         require(msg.sender == _ownerAddress);\n\n127:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L109-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L127-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L140-L140"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n90:          require(msg.sender == _ownerAddress);\n\n99:          require(msg.sender == _ownerAddress);\n\n153:                 if (msg.sender == winnerAddresses[currentRound][j]) {\n\n196:         require(msg.sender == _rankedBattleAddress, \"Not Ranked Battle contract address\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L90-L90",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L99-L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L153-L153",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L196-L196"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n86:          require(msg.sender == _ownerAddress);\n\n94:          require(msg.sender == _ownerAddress);\n\n102:         require(msg.sender == _ownerAddress);\n\n110:         require(msg.sender == _ownerAddress);\n\n119:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L86-L86",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L119-L119"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n168:         require(msg.sender == _ownerAddress);\n\n177:         require(msg.sender == _ownerAddress);\n\n185:         require(msg.sender == _ownerAddress);\n\n193:         require(msg.sender == _ownerAddress);\n\n202:         require(msg.sender == _ownerAddress);\n\n210:         require(msg.sender == _ownerAddress);\n\n246:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n271:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n331:         require(msg.sender == _gameServerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L168-L168",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L177-L177",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L185-L185",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L193-L193",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L202-L202",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L210-L210",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L246-L246",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L271-L271",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L331-L331"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n79:          require(msg.sender == _rankedBattleAddress, \"Not authorized to set new round\");\n\n94:          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n122:         require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L79-L79",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L122-L122"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n65:          require(msg.sender == _ownerAddress);\n\n74:          require(msg.sender == _ownerAddress);\n\n106:         require(spender == msg.sender || allowedVoltageSpenders[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L65-L65",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L74-L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L106-L106"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Calculations should be memoized rather than re-calculating them",
      "description": "",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n159:             dailyAllowanceReplenishTime[msg.sender][tokenId] <= block.timestamp || \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L159-L159"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function to save deployment gas",
      "description": "This will cost more runtime gas, but will reduce deployment gas when the function is (optionally called via a modifier) called more than once as is the case for the examples below. Most projects do not make this trade-off, but it's available nonetheless.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n62:          require(msg.sender == _ownerAddress);\n\n69:          require(msg.sender == _ownerAddress);\n\n132:         require(msg.sender == _ownerAddress);\n\n145:         require(msg.sender == _ownerAddress);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L62-L62",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L69-L69",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L132-L132",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L145-L145"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n121:         require(msg.sender == _ownerAddress);\n\n130:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n148:         require(msg.sender == _ownerAddress);\n\n156:         require(msg.sender == _ownerAddress);\n\n164:         require(msg.sender == _ownerAddress);\n\n172:         require(msg.sender == _ownerAddress);\n\n346:         require(_ableToTransfer(tokenId, to));\n\n363:         require(_ableToTransfer(tokenId, to));\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L121-L121",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L130-L130",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L140-L140",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L156-L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L164-L164",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L172-L172",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L346-L346",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L363-L363"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n109:         require(msg.sender == _ownerAddress);\n\n118:         require(msg.sender == _ownerAddress);\n\n127:         require(msg.sender == _ownerAddress);\n\n140:         require(msg.sender == _ownerAddress);\n\n186:         require(isAdmin[msg.sender]);\n\n195:         require(isAdmin[msg.sender]);\n\n219:         require(isAdmin[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L109-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L127-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L140-L140",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L186-L186",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L195-L195",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L219-L219"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n90:          require(msg.sender == _ownerAddress);\n\n99:          require(msg.sender == _ownerAddress);\n\n107:         require(isAdmin[msg.sender]);\n\n119:         require(isAdmin[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L90-L90",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L99-L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L107-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L119-L119"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n86:          require(msg.sender == _ownerAddress);\n\n94:          require(msg.sender == _ownerAddress);\n\n102:         require(msg.sender == _ownerAddress);\n\n110:         require(msg.sender == _ownerAddress);\n\n119:         require(msg.sender == _ownerAddress);\n\n128:         require(isAdmin[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L86-L86",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L119-L119",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L128-L128"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n168:         require(msg.sender == _ownerAddress);\n\n177:         require(msg.sender == _ownerAddress);\n\n185:         require(msg.sender == _ownerAddress);\n\n193:         require(msg.sender == _ownerAddress);\n\n202:         require(msg.sender == _ownerAddress);\n\n210:         require(msg.sender == _ownerAddress);\n\n219:         require(isAdmin[msg.sender]);\n\n227:         require(isAdmin[msg.sender]);\n\n234:         require(isAdmin[msg.sender]);\n\n246:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n271:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L168-L168",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L177-L177",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L185-L185",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L193-L193",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L202-L202",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L210-L210",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L219-L219",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L227-L227",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L234-L234",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L246-L246",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L271-L271"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n94:          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n122:         require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L122-L122"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n65:          require(msg.sender == _ownerAddress);\n\n74:          require(msg.sender == _ownerAddress);\n\n83:          require(isAdmin[msg.sender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L65-L65",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L74-L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L83-L83"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "It costs more gas to initialize non-`constant`/non-`immutable` state variables to zero/false than to let the default of zero/false be applied",
      "description": "Not overwriting the default for storage variables avoids a Gsreset ([**2900 gas**](https://gist.github.com/IllIllI000/85b09af2291f626095eb11403ddc74f1)) during deployment",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n64:      uint256 _itemCount = 0;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L64-L64"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n29:      uint256 public roundId = 0;\n\n32:      uint256 public totalPoints = 0;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L29-L29",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L32-L32"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n56:      uint256 public totalBattles = 0;\n\n59:      uint256 public globalStakedAmount = 0;\n\n62:      uint256 public roundId = 0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L56-L56",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L59-L59",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L62-L62"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n27:      uint256 public roundId = 0;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L27-L27"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use `uint256(1)`/`uint256(2)` instead of `true`/`false` to save gas for changes",
      "description": "Avoids a Gsset (**20000 gas**) when changing from `false` to `true`, after having been `true` in the past. Since most of the bools aren't changed twice in one transaction, I've counted the amount of gas as half of the full amount, for each variable. Note that public state variables can be re-written to be `private` and use `uint256`, but have public getters returning `bool`s.",
      "gasSavings": 59850,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit reset in: updateFighterStaking()\n76:      mapping(uint256 => bool) public fighterStaked;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L76-L76"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit reset in: adjustAdminAccess()\n83:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L83-L83"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit reset in: adjustAdminAccess()\n60:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L60-L60"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit reset in: adjustAdminAccess()\n56:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L56-L56"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit reset in: adjustAdminAccess()\n101:     mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L101-L101"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit reset in: adjustAllowedVoltageSpenders()\n33:      mapping(address => bool) public allowedVoltageSpenders;\n\n/// @audit reset in: adjustAdminAccess()\n42:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L33-L33",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L42-L42"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Mappings are cheaper to use than storage arrays",
      "description": "When using storage arrays, solidity adds an internal lookup of the array's length (a Gcoldsload **2100 gas**) to ensure you don't read past the array's end. You can avoid this lookup by using a `mapping` and storing the number of entries in a separate storage variable. In cases where you have sentinel values (e.g. 'zero' means invalid), you can avoid length checks",
      "gasSavings": 16800,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n17:      string[] public attributes = [\"head\", \"eyes\", \"mouth\", \"body\", \"hands\", \"feet\"];\n\n20:      uint8[] public defaultAttributeDivisor = [2, 3, 5, 7, 11, 13];\n\n30:      mapping(uint256 => mapping(string => uint8[])) public attributeProbabilities;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L17-L17",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L20-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L30-L30"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n36:      uint8[2] public maxRerollsAllowed = [3, 3];\n\n42:      uint8[2] public generation = [0, 0];\n\n69:      FighterOps.Fighter[] public fighters;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L36-L36",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L42-L42",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L69-L69"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n55:      GameItemAttributes[] public allGameItemAttributes;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L55-L55"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n54:      mapping(uint256 => address[]) public winnerAddresses;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L54-L54"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Remove or replace unused state variables",
      "description": "Saves a storage slot. If the variable is assigned a non-zero value, saves Gsset (**20000 gas**). If it's assigned a zero value, saves Gsreset (**2900 gas**). If the variable remains unassigned, there is no gas savings unless the variable is `public`, in which case the compiler-generated non-payable getter deployment cost is saved. If the state variable is overriding an interface's public function, mark the variable as `constant` or `immutable` so that it does not use a storage slot",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n52:       string public symbol = \"AGI\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L52"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use `Array.unsafeAccess()` to avoid repeated array length checks",
      "description": "When using storage arrays, solidity adds an internal lookup of the array's length (a Gcoldsload **2100 gas**) to ensure you don't read past the array's end. You can avoid this lookup by using [`Array.unsafeAccess()`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/94697be8a3f0dfcd95dfb13ffbd39b5973f5c65d/contracts/utils/Arrays.sol#L57) in cases where the length has already been checked, as is the case with the instances below",
      "gasSavings": 33600,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n49:              attributeProbabilities[0][attributes[i]] = probabilities[i];\n\n49:              attributeProbabilities[0][attributes[i]] = probabilities[i];\n\n50:              attributeToDnaDivisor[attributes[i]] = defaultAttributeDivisor[i];\n\n50:              attributeToDnaDivisor[attributes[i]] = defaultAttributeDivisor[i];\n\n74:              attributeToDnaDivisor[attributes[i]] = attributeDivisors[i];\n\n107:                     uint256 rarityRank = (dna / attributeToDnaDivisor[attributes[i]]) % 100;\n\n108:                     uint256 attributeIndex = dnaToIndex(generation, rarityRank, attributes[i]);\n\n137:             attributeProbabilities[generation][attributes[i]] = probabilities[i];\n\n137:             attributeProbabilities[generation][attributes[i]] = probabilities[i];\n\n149:             attributeProbabilities[generation][attributes[i]] = new uint8[](0);\n\n149:             attributeProbabilities[generation][attributes[i]] = new uint8[](0);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L49-L49",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L49-L49",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L50-L50",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L50-L50",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L74-L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L107-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L108-L108",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L137-L137",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L137-L137",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L149-L149",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L149-L149"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n214:                 uint256(keccak256(abi.encode(msg.sender, fighters.length))),\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L214-L214"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n151:             winnersLength = winnerAddresses[currentRound].length;\n\n153:                 if (msg.sender == winnerAddresses[currentRound][j]) {\n\n177:             winnersLength = winnerAddresses[currentRound].length;\n\n179:                 if (claimer == winnerAddresses[currentRound][j]) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L151-L151",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L153-L153",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L177-L177",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L179-L179"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables only set in the constructor should be declared `immutable`",
      "description": "Avoids a Gsset (**20000 gas**) in the constructor, and replaces the first access in each transaction (Gcoldsload - **2100 gas**) and each access thereafter (Gwarmacces - **100 gas**) with a `PUSH32` (**3 gas**). \r\n\r\nWhile `string`s are not value types, and therefore cannot be `immutable`/`constant` if not hard-coded outside of the constructor, the same behavior can be achieved by making the current contract `abstract` with `virtual` functions for the `string` accessors, and having a child contract override the functions with the hard-coded implementation-specific values.",
      "gasSavings": 25164,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n48:      address public treasuryAddress;\n\n54:      address _delegatedAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L48-L48",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L54-L54"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n58:      address public treasuryAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L58-L58"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n38:      address _rankedBattleAddress;\n\n41:      FighterFarm _fighterFarmInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L38-L38",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L41-L41"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n46:      address public treasuryAddress;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L46-L46"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n85:      FighterFarm _fighterFarmInstance;\n\n88:      VoltageManager _voltageManagerInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L85-L85",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L88-L88"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n30:      address public treasuryAddress;\n\n33:      address _rankedBattleAddress;\n\n36:      Neuron _neuronInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L30-L30",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L33-L33",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L36-L36"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n26:      GameItems _gameItemsContractInstance;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L26-L26"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables only set in their definitions should be declared `constant`",
      "description": "Avoids a Gsset (**20000 gas**) at deployment, and replaces the first access in each transaction (Gcoldsload - **2100 gas**) and each access thereafter (Gwarmacces - **100 gas**) with a `PUSH32` (**3 gas**).",
      "gasSavings": 6291,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n39:      uint256 public rerollCost = 1000 * 10**18;    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L39-L39"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n49:      string public name = \"AI Arena Game Items\";\n\n52:      string public symbol = \"AGI\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L49-L49",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L52-L52"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables can be packed into fewer storage slots by truncating timestamp bytes",
      "description": "By using a `uint32` rather than a larger type for variables that track timestamps, one can save gas by using fewer storage slots per struct, at the expense of the protocol breaking after the year 2106 (when `uint32` wraps). If this is an acceptable tradeoff, if variables occupying the same slot are both written the same function or by the constructor, avoids a separate Gsset (**20000 gas**). Reads of the variables can also be cheaper",
      "gasSavings": 4000,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit Variable ordering with 11 slots instead of the current 12:\n///           string(32):name, string(32):symbol, user-defined[](32):allGameItemAttributes, mapping(32):allowanceRemaining, mapping(32):dailyAllowanceReplenishTime, mapping(32):allowedBurningAddresses, mapping(32):isAdmin, mapping(32):_tokenURIs, address(20):treasuryAddress, uint64(8):_itemCount, address(20):_ownerAddress, address(20):_neuronInstance\n10:   contract GameItems is ERC1155 {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit Variable ordering with 10 slots instead of the current 11:\n///           uint256(32):roundId, uint256(32):totalPoints, mapping(32):numRoundsClaimed, mapping(32):fighterPoints, mapping(32):winnerAddresses, mapping(32):isSelectionComplete, mapping(32):isAdmin, address(20):_ownerAddress, uint64(8):winnersPerPeriod, address(20):_rankedBattleAddress, address(20):_fighterFarmInstance\n9:    contract MergingPool {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L9"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid updating storage when the value hasn't changed",
      "description": "If the old value is equal to the new value, not re-storing the value will avoid a Gsreset (**2900 gas**), potentially at the expense of a Gcoldsload (**2100 gas**) or a Gwarmaccess (**100 gas**)",
      "gasSavings": 12000,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit _mergingPoolAddress:  setMergingPoolAddress()\n171      function setMergingPoolAddress(address mergingPoolAddress) external {\n172          require(msg.sender == _ownerAddress);\n173          _mergingPoolAddress = mergingPoolAddress;\n174:     }\n\n/// @audit _tokenURIs:  setTokenURI()\n180      function setTokenURI(uint256 tokenId, string calldata newTokenURI) external {\n181          require(msg.sender == _delegatedAddress);\n182          _tokenURIs[tokenId] = newTokenURI;\n183:     }\n\n/// @audit fighterStaked:  updateFighterStaking()\n268      function updateFighterStaking(uint256 tokenId, bool stakingStatus) external {\n269          require(hasStakerRole[msg.sender]);\n270          fighterStaked[tokenId] = stakingStatus;\n271          if (stakingStatus) {\n272              emit Locked(tokenId);\n273          } else {\n274              emit Unlocked(tokenId);\n275          }\n276:     }\n\n/// @audit fighters:  updateModel()\n283      function updateModel(\n284          uint256 tokenId, \n285          string calldata modelHash,\n286          string calldata modelType\n287      ) \n288          external\n289      {\n290          require(msg.sender == ownerOf(tokenId));\n291          fighters[tokenId].modelHash = modelHash;\n292          fighters[tokenId].modelType = modelType;\n293          numTrained[tokenId] += 1;\n294          totalNumTrained += 1;\n295:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L171-L174",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L180-L183",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L268-L276",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L283-L295"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit _tokenURIs:  setTokenURI()\n194      function setTokenURI(uint256 tokenId, string memory _tokenURI) public {\n195          require(isAdmin[msg.sender]);\n196          _tokenURIs[tokenId] = _tokenURI;\n197:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L194-L197"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit winnersPerPeriod:  updateWinnersPerPeriod()\n106      function updateWinnersPerPeriod(uint256 newWinnersPerPeriodAmount) external {\n107          require(isAdmin[msg.sender]);\n108          winnersPerPeriod = newWinnersPerPeriodAmount;\n109:     }    \n\n/// @audit totalPoints:  addPoints()\n/// @audit fighterPoints:  addPoints()\n195      function addPoints(uint256 tokenId, uint256 points) public {\n196          require(msg.sender == _rankedBattleAddress, \"Not Ranked Battle contract address\");\n197          fighterPoints[tokenId] += points;\n198          totalPoints += points;\n199          emit PointsAdded(tokenId, points);\n200:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L106-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L195-L200",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L195-L200"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit _gameServerAddress:  setGameServerAddress()\n184      function setGameServerAddress(address gameServerAddress) external {\n185          require(msg.sender == _ownerAddress);\n186          _gameServerAddress = gameServerAddress;\n187:     }\n\n/// @audit _stakeAtRiskAddress:  setStakeAtRiskAddress()\n192      function setStakeAtRiskAddress(address stakeAtRiskAddress) external {\n193          require(msg.sender == _ownerAddress);\n194          _stakeAtRiskAddress = stakeAtRiskAddress;\n195          _stakeAtRiskInstance = StakeAtRisk(_stakeAtRiskAddress);\n196:     }\n\n/// @audit bpsLostPerLoss:  setBpsLostPerLoss()\n226      function setBpsLostPerLoss(uint256 bpsLostPerLoss_) external {\n227          require(isAdmin[msg.sender]);\n228          bpsLostPerLoss = bpsLostPerLoss_;\n229:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L184-L187",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L192-L196",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L226-L229"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit roundId:  setNewRound()\n78       function setNewRound(uint256 roundId_) external {\n79           require(msg.sender == _rankedBattleAddress, \"Not authorized to set new round\");\n80           bool success = _sweepLostStake();\n81           if (success) {\n82               roundId = roundId_;\n83           }\n84:      }\n\n/// @audit amountLost:  updateAtRiskRecords()\n/// @audit totalStakeAtRisk:  updateAtRiskRecords()\n/// @audit stakeAtRisk:  updateAtRiskRecords()\n115      function updateAtRiskRecords(\n116          uint256 nrnToPlaceAtRisk, \n117          uint256 fighterId, \n118          address fighterOwner\n119      ) \n120          external \n121      {\n122          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n123          stakeAtRisk[roundId][fighterId] += nrnToPlaceAtRisk;\n124          totalStakeAtRisk[roundId] += nrnToPlaceAtRisk;\n125          amountLost[fighterOwner] += nrnToPlaceAtRisk;\n126          emit IncreasedStakeAtRisk(fighterId, nrnToPlaceAtRisk);\n127:     }   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L78-L84",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Use scratch space for building calldata",
      "description": "If an external call's calldata can fit into two or fewer words, use the scratch space to build the calldata, rather than allowing Solidity to do a memory expansion.",
      "gasSavings": 5280,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n250:             require(msg.sender == _mintpassInstance.ownerOf(mintpassIdsToBurn[i]));\n\n251:             _mintpassInstance.burn(mintpassIdsToBurn[i]);\n\n373:         require(_neuronInstance.balanceOf(msg.sender) >= rerollCost, \"Not enough NRN for reroll\");\n\n375:         _neuronInstance.approveSpender(msg.sender, rerollCost);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L250-L250",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L251-L251",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L373-L373",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L375-L375"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n150:         require(_neuronInstance.balanceOf(msg.sender) >= price, \"Not enough NRN for purchase\");\n\n163:         _neuronInstance.approveSpender(msg.sender, price);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L150-L150",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L163-L163"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n125:             currentWinnerAddresses[i] = _fighterFarmInstance.ownerOf(winners[i]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L125-L125"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n237:         _stakeAtRiskInstance.setNewRound(roundId);\n\n246:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n247:         require(_neuronInstance.balanceOf(msg.sender) >= amount, \"Stake amount exceeds balance\");\n\n258              stakingFactor[tokenId] = _getStakingFactor(\n259                  tokenId, \n260                  _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n261:             );\n\n271:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n277          stakingFactor[tokenId] = _getStakingFactor(\n278              tokenId, \n279              _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n280:         );\n\n283:         bool success = _neuronInstance.transfer(msg.sender, amount);\n\n308:             _neuronInstance.mint(msg.sender, claimableNRN);\n\n333:         address fighterOwner = _fighterFarmInstance.ownerOf(tokenId);\n\n336:             _voltageManagerInstance.ownerVoltageReplenishTime(fighterOwner) <= block.timestamp || \n\n337:             _voltageManagerInstance.ownerVoltage(fighterOwner) >= VOLTAGE_COST\n\n341:         uint256 stakeAtRisk = _stakeAtRiskInstance.getStakeAtRisk(tokenId);\n\n346:             _voltageManagerInstance.spendVoltage(fighterOwner, VOLTAGE_COST);\n\n430:         stakeAtRisk = _stakeAtRiskInstance.getStakeAtRisk(tokenId);\n\n493:                 bool success = _neuronInstance.transfer(_stakeAtRiskAddress, curStakeAtRisk);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L237-L237",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L246-L246",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L247-L247",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L258-L261",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L271-L271",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L277-L280",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L283-L283",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L308-L308",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L333-L333",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L336-L336",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L337-L337",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L341-L341",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L346-L346",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L430-L430",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L493-L493"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n100:         bool success = _neuronInstance.transfer(_rankedBattleAddress, nrnToReclaim);\n\n143:         return _neuronInstance.transfer(treasuryAddress, totalStakeAtRisk[roundId]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L100-L100",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L143-L143"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables should be cached in stack variables rather than re-reading them from storage",
      "description": "The instances below point to the second+ access of a state variable within a function. Caching of a state variable replaces each Gwarmaccess (**100 gas**) with a much cheaper stack read. Other less obvious fixes/optimizations include having local memory caches of state variable structs, or having local caches of state variable contracts/addresses.",
      "gasSavings": 7566,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit attributes on line 47\n49:               attributeProbabilities[0][attributes[i]] = probabilities[i];\n\n/// @audit attributes on line 49\n50:               attributeToDnaDivisor[attributes[i]] = defaultAttributeDivisor[i];\n\n/// @audit attributes on line 70\n72:           uint256 attributesLength = attributes.length;\n\n/// @audit attributes on line 72\n74:               attributeToDnaDivisor[attributes[i]] = attributeDivisors[i];\n\n/// @audit attributes on line 96\n98:               uint256 attributesLength = attributes.length;\n\n/// @audit attributes on line 98\n107:                      uint256 rarityRank = (dna / attributeToDnaDivisor[attributes[i]]) % 100;\n\n/// @audit attributes on line 107\n108:                      uint256 attributeIndex = dnaToIndex(generation, rarityRank, attributes[i]);\n\n/// @audit attributes on line 135\n137:              attributeProbabilities[generation][attributes[i]] = probabilities[i];\n\n/// @audit attributes on line 147\n149:              attributeProbabilities[generation][attributes[i]] = new uint8[](0);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L49",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L50",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L72",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L108",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L137",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L149"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit rerollCost on line 373\n375:          _neuronInstance.approveSpender(msg.sender, rerollCost);\n\n/// @audit rerollCost on line 375\n376:          bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, rerollCost);\n\n/// @audit generation on line 131\n133:          return generation[fighterType];\n\n/// @audit generation on line 512\n524:                  generation[fighterType],\n\n/// @audit generation on line 524\n530:          FighterOps.fighterCreatedEmitter(newId, weight, element, generation[fighterType]);\n\n/// @audit _mintpassInstance on line 250\n251:              _mintpassInstance.burn(mintpassIdsToBurn[i]);\n\n/// @audit _neuronInstance on line 373\n375:          _neuronInstance.approveSpender(msg.sender, rerollCost);\n\n/// @audit _neuronInstance on line 375\n376:          bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, rerollCost);\n\n/// @audit fighters on line 291\n292:          fighters[tokenId].modelType = modelType;\n\n/// @audit fighters on line 381\n382:              fighters[tokenId].weight = weight;\n\n/// @audit fighters on line 382\n383:              fighters[tokenId].physicalAttributes = _aiArenaHelperInstance.createPhysicalAttributes(\n\n/// @audit fighters on line 383\n386:                  fighters[tokenId].iconsType,\n\n/// @audit fighters on line 386\n387:                  fighters[tokenId].dendroidBool\n\n/// @audit fighters on line 507\n516:          fighters.push(\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L375",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L376",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L133",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L524",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L530",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L251",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L375",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L376",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L292",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L382",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L383",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L386",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L387",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L516"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit allGameItemAttributes on line 149\n152:              allGameItemAttributes[tokenId].finiteSupply == false || \n\n/// @audit allGameItemAttributes on line 152\n154:                  allGameItemAttributes[tokenId].finiteSupply == true && \n\n/// @audit allGameItemAttributes on line 154\n155:                  quantity <= allGameItemAttributes[tokenId].itemsRemaining\n\n/// @audit allGameItemAttributes on line 155\n170:              if (allGameItemAttributes[tokenId].finiteSupply) {\n\n/// @audit allGameItemAttributes on line 170\n171:                  allGameItemAttributes[tokenId].itemsRemaining -= quantity;\n\n/// @audit _ownerAddress on line 96\n98:           isAdmin[_ownerAddress] = true;\n\n/// @audit _itemCount on line 231\n233:          setTokenURI(_itemCount, tokenURI);\n\n/// @audit _itemCount on line 233\n234:          _itemCount += 1;\n\n/// @audit _neuronInstance on line 150\n163:          _neuronInstance.approveSpender(msg.sender, price);\n\n/// @audit _neuronInstance on line 163\n164:          bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, price);\n\n/// @audit allGameItemAttributes[tokenId].finiteSupply on line 152\n154:                  allGameItemAttributes[tokenId].finiteSupply == true && \n\n/// @audit allGameItemAttributes[tokenId].finiteSupply on line 154\n170:              if (allGameItemAttributes[tokenId].finiteSupply) {\n\n/// @audit allGameItemAttributes[tokenId].itemsRemaining on line 155\n171:                  allGameItemAttributes[tokenId].itemsRemaining -= quantity;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L154",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L155",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L170",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L171",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L233",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L234",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L163",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L164",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L154",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L170",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L171"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit roundId on line 121\n129:          winnerAddresses[roundId] = currentWinnerAddresses;\n\n/// @audit roundId on line 129\n130:          isSelectionComplete[roundId] = true;\n\n/// @audit roundId on line 130\n131:          roundId += 1;\n\n/// @audit _ownerAddress on line 76\n79:           isAdmin[_ownerAddress] = true;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L129",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L130",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L131",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L79"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit treasuryAddress on line 72\n74:           _mint(treasuryAddress, INITIAL_TREASURY_MINT);\n\n/// @audit treasuryAddress on line 140\n143:          transferFrom(treasuryAddress, msg.sender, amount);\n\n/// @audit _ownerAddress on line 71\n73:           isAdmin[_ownerAddress] = true;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L143",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L73"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit roundId on line 235\n236:          roundId += 1;\n\n/// @audit roundId on line 236\n237:          _stakeAtRiskInstance.setNewRound(roundId);\n\n/// @audit roundId on line 237\n/// @audit roundId on line 238\n238:          rankedNrnDistribution[roundId] = rankedNrnDistribution[roundId - 1];\n\n/// @audit roundId on line 248\n262:              _calculatedStakingFactor[tokenId][roundId] = true;\n\n/// @audit roundId on line 281\n282:          hasUnstaked[tokenId][roundId] = true;\n\n/// @audit roundId on line 295\n299:          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n/// @audit roundId on line 366\n367:            rankedNrnDistribution[roundId], \n\n/// @audit roundId on line 367\n368:            totalAccumulatedPoints[roundId]\n\n/// @audit roundId on line 433\n435:              _calculatedStakingFactor[tokenId][roundId] = true;\n\n/// @audit roundId on line 435\n466:              accumulatedPointsPerFighter[tokenId][roundId] += points;\n\n/// @audit roundId on line 466\n467:              accumulatedPointsPerAddress[fighterOwner][roundId] += points;\n\n/// @audit roundId on line 467\n468:              totalAccumulatedPoints[roundId] += points;\n\n/// @audit roundId on line 468\n479:              if (accumulatedPointsPerFighter[tokenId][roundId] > 0) {\n\n/// @audit roundId on line 479\n482:                  if (points > accumulatedPointsPerFighter[tokenId][roundId]) {\n\n/// @audit roundId on line 482\n483:                      points = accumulatedPointsPerFighter[tokenId][roundId];\n\n/// @audit roundId on line 483\n485:                  accumulatedPointsPerFighter[tokenId][roundId] -= points;\n\n/// @audit roundId on line 485\n486:                  accumulatedPointsPerAddress[fighterOwner][roundId] -= points;\n\n/// @audit roundId on line 486\n487:                  totalAccumulatedPoints[roundId] -= points;\n\n/// @audit _stakeAtRiskAddress on line 194\n195:          _stakeAtRiskInstance = StakeAtRisk(_stakeAtRiskAddress);\n\n/// @audit _ownerAddress on line 152\n156:          isAdmin[_ownerAddress] = true;\n\n/// @audit _neuronInstance on line 247\n250:          _neuronInstance.approveStaker(msg.sender, address(this), amount);\n\n/// @audit _neuronInstance on line 250\n251:          bool success = _neuronInstance.transferFrom(msg.sender, address(this), amount);\n\n/// @audit _fighterFarmInstance on line 246\n254:                  _fighterFarmInstance.updateFighterStaking(tokenId, true);\n\n/// @audit _fighterFarmInstance on line 271\n286:                  _fighterFarmInstance.updateFighterStaking(tokenId, false);\n\n/// @audit _voltageManagerInstance on line 336\n337:              _voltageManagerInstance.ownerVoltage(fighterOwner) >= VOLTAGE_COST\n\n/// @audit _voltageManagerInstance on line 337\n346:              _voltageManagerInstance.spendVoltage(fighterOwner, VOLTAGE_COST);\n\n/// @audit _stakeAtRiskInstance on line 430\n461:                  _stakeAtRiskInstance.reclaimNRN(curStakeAtRisk, tokenId, fighterOwner);\n\n/// @audit _stakeAtRiskInstance on line 461\n495:                      _stakeAtRiskInstance.updateAtRiskRecords(curStakeAtRisk, tokenId, fighterOwner);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L236",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L237",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L238",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L238",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L262",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L282",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L299",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L367",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L368",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L435",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L466",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L467",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L468",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L479",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L482",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L483",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L485",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L486",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L487",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L195",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L250",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L251",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L254",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L286",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L337",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L346",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L461",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L495"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit roundId on line 96\n102:              stakeAtRisk[roundId][fighterId] -= nrnToReclaim;\n\n/// @audit roundId on line 102\n103:              totalStakeAtRisk[roundId] -= nrnToReclaim;\n\n/// @audit roundId on line 123\n124:          totalStakeAtRisk[roundId] += nrnToPlaceAtRisk;\n\n/// @audit _rankedBattleAddress on line 94\n100:          bool success = _neuronInstance.transfer(_rankedBattleAddress, nrnToReclaim);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L103",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L124",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L100"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit _ownerAddress on line 52\n54:           isAdmin[_ownerAddress] = true;\n\n/// @audit _gameItemsContractInstance on line 95\n96:           _gameItemsContractInstance.burn(msg.sender, 0, 1);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L54",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L96"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use the inputs/results of assignments rather than re-reading state variables",
      "description": "When a state variable is assigned, it saves gas to use the value being assigned, later in the function, rather than re-reading the state variable itself. If needed, it can also be stored to a local variable, and be used in that way. Both options avoid a Gwarmaccess (**100 gas**). Note that if the operation is, say `+=`, the assignment also results in a value which can be used. The instances below point to the first reference after the assignment, since later references are already covered by issues describing the caching of state variable values.",
      "gasSavings": 291,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit use result of assignment of treasuryAddress, here\n74:          _mint(treasuryAddress, INITIAL_TREASURY_MINT);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L74-L74"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit use result of assignment of _stakeAtRiskAddress, here\n195:         _stakeAtRiskInstance = StakeAtRisk(_stakeAtRiskAddress);\n\n/// @audit use result of assignment of roundId, here\n237:         _stakeAtRiskInstance.setNewRound(roundId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L195-L195",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L237-L237"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Use scratch space for calculating small `keccak256` hashes",
      "description": "If the arguments to the encode call can fit into the scratch space (two words or fewer), then it's more efficient to use assembly to generate the hash (**80 gas**):\r\n`keccak256(abi.encodePacked(x, y))` -> `assembly {mstore(0x00, a); mstore(0x20, b); let hash := keccak256(0x00, 0x40); }`",
      "gasSavings": 160,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n214:                 uint256(keccak256(abi.encode(msg.sender, fighters.length))),\n\n324:             uint256(keccak256(abi.encode(msg.sender, fighters.length))), \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L214-L214",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L324-L324"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`++i`/`i++` should be `unchecked{++i}`/`unchecked{i++}` when it is not possible for them to overflow, as is the case when used in `for`- and `while`-loops",
      "description": "The `unchecked` keyword is new in solidity version 0.8.0, so this only applies to that version or higher, which these instances are. This saves **30-40 gas [per loop](https://gist.github.com/hrkrshnn/ee8fabd532058307229d65dcd5836ddc#the-increment-in-for-loop-post-condition-can-be-made-unchecked)**",
      "gasSavings": 1020,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n48:           for (uint8 i = 0; i < attributesLength; i++) {\n\n73:           for (uint8 i = 0; i < attributesLength; i++) {\n\n99:               for (uint8 i = 0; i < attributesLength; i++) {\n\n136:          for (uint8 i = 0; i < attributesLength; i++) {\n\n148:          for (uint8 i = 0; i < attributesLength; i++) {\n\n178:          for (uint8 i = 0; i < attrProbabilitiesLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L48",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L136",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L178"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n211:          for (uint16 i = 0; i < totalToMint; i++) {\n\n249:          for (uint16 i = 0; i < mintpassIdsToBurn.length; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L211",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n124:          for (uint256 i = 0; i < winnersLength; i++) {\n\n149:          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n152:              for (uint32 j = 0; j < winnersLength; j++) {\n\n176:          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n178:              for (uint32 j = 0; j < winnersLength; j++) {\n\n207:          for (uint256 i = 0; i < maxId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L124",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L149",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L178",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L207"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n131:          for (uint32 i = 0; i < recipientsLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L131"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n299:          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n390:          for (uint32 i = lowerBound; i < roundId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L299",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L390"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`do`-`while` is cheaper than `for`-loops when the initial check can be skipped",
      "description": "`for (uint256 i; i < len; ++i){ ... }` -> `do { ...; ++i } while (i < len);`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n48:          for (uint8 i = 0; i < attributesLength; i++) {\n\n73:          for (uint8 i = 0; i < attributesLength; i++) {\n\n99:              for (uint8 i = 0; i < attributesLength; i++) {\n\n136:         for (uint8 i = 0; i < attributesLength; i++) {\n\n148:         for (uint8 i = 0; i < attributesLength; i++) {\n\n178:         for (uint8 i = 0; i < attrProbabilitiesLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L48-L48",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L73-L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L99-L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L136-L136",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L178-L178"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n211:         for (uint16 i = 0; i < totalToMint; i++) {\n\n249:         for (uint16 i = 0; i < mintpassIdsToBurn.length; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L211-L211",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249-L249"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n124:         for (uint256 i = 0; i < winnersLength; i++) {\n\n149:         for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n152:             for (uint32 j = 0; j < winnersLength; j++) {\n\n176:         for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n178:             for (uint32 j = 0; j < winnersLength; j++) {\n\n207:         for (uint256 i = 0; i < maxId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L124-L124",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L149-L149",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L152-L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L176-L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L178-L178",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L207-L207"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n131:         for (uint32 i = 0; i < recipientsLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L131-L131"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n299:         for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n390:         for (uint32 i = lowerBound; i < roundId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L299-L299",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L390-L390"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid contract existence checks by using low-level calls",
      "description": "Prior to 0.8.10 the compiler inserted extra code, including `EXTCODESIZE` (**100 gas**), to check for contract existence for external function calls. In more recent solidity versions, the compiler will not insert these checks if the external call has a return value. Similar behavior can be achieved in earlier versions by using low-level calls, since low-level calls never check for contract existence. Note that it [still](https://gist.github.com/IllIllI000/fbd5861a8e587cb1c1aab55a106bb9a7) saves gas, even if the return value is not directly used.",
      "gasSavings": 2800,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n206:         require(Verification.verify(msgHash, signature, _delegatedAddress));\n\n250:             require(msg.sender == _mintpassInstance.ownerOf(mintpassIdsToBurn[i]));\n\n373:         require(_neuronInstance.balanceOf(msg.sender) >= rerollCost, \"Not enough NRN for reroll\");\n\n376:         bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, rerollCost);\n\n383              fighters[tokenId].physicalAttributes = _aiArenaHelperInstance.createPhysicalAttributes(\n384                  newDna,\n385                  generation[fighterType],\n386                  fighters[tokenId].iconsType,\n387                  fighters[tokenId].dendroidBool\n388:             );\n\n416:         return super.supportsInterface(_interfaceId);\n\n436:         return FighterOps.viewFighterInfo(fighters[tokenId], ownerOf(tokenId));\n\n510          FighterOps.FighterPhysicalAttributes memory attrs = _aiArenaHelperInstance.createPhysicalAttributes(\n511              newDna,\n512              generation[fighterType],\n513              iconsType,\n514              dendroidBool\n515:         );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L206-L206",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L250-L250",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L373-L373",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L376-L376",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L383-L388",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L416-L416",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L436-L436",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L510-L515"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n150:         require(_neuronInstance.balanceOf(msg.sender) >= price, \"Not enough NRN for purchase\");\n\n164:         bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, price);\n\n261:         return super.uri(tokenId);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L150-L150",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L164-L164",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L261-L261"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n125:             currentWinnerAddresses[i] = _fighterFarmInstance.ownerOf(winners[i]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L125-L125"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n246:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n247:         require(_neuronInstance.balanceOf(msg.sender) >= amount, \"Stake amount exceeds balance\");\n\n251:         bool success = _neuronInstance.transferFrom(msg.sender, address(this), amount);\n\n260:                 _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n\n271:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n279:             _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n\n283:         bool success = _neuronInstance.transfer(msg.sender, amount);\n\n333:         address fighterOwner = _fighterFarmInstance.ownerOf(tokenId);\n\n336:             _voltageManagerInstance.ownerVoltageReplenishTime(fighterOwner) <= block.timestamp || \n\n337:             _voltageManagerInstance.ownerVoltage(fighterOwner) >= VOLTAGE_COST\n\n341:         uint256 stakeAtRisk = _stakeAtRiskInstance.getStakeAtRisk(tokenId);\n\n430:         stakeAtRisk = _stakeAtRiskInstance.getStakeAtRisk(tokenId);\n\n493:                 bool success = _neuronInstance.transfer(_stakeAtRiskAddress, curStakeAtRisk);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L246-L246",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L247-L247",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L251-L251",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L260-L260",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L271-L271",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L279-L279",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L283-L283",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L333-L333",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L336-L336",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L337-L337",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L341-L341",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L430-L430",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L493-L493"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n100:         bool success = _neuronInstance.transfer(_rankedBattleAddress, nrnToReclaim);\n\n143:         return _neuronInstance.transfer(treasuryAddress, totalStakeAtRisk[roundId]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L100-L100",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L143-L143"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n95:          require(_gameItemsContractInstance.balanceOf(msg.sender, 0) > 0);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L95-L95"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid transferring amounts of zero in order to save gas",
      "description": "Skipping the external call when nothing will be transferred, will save at least **100 gas**",
      "gasSavings": 500,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n376:         bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, rerollCost);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L376-L376"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n164:         bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, price);\n\n302:         super.safeTransferFrom(from, to, tokenId, amount, data);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L164-L164",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L302-L302"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n283:         bool success = _neuronInstance.transfer(msg.sender, amount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L283-L283"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n100:         bool success = _neuronInstance.transfer(_rankedBattleAddress, nrnToReclaim);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L100-L100"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider pre-calculating the address of `address(this)` to save gas",
      "description": "Use `foundry`'s [`script.sol`](https://book.getfoundry.sh/reference/forge-std/compute-create-address) or `solady`'s [`LibRlp.sol`](https://github.com/Vectorized/solady/blob/main/src/utils/LibRLP.sol) to save the value in a constant, which will avoid having to spend gas to push the value on the stack every time it's used.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n250:         _neuronInstance.approveStaker(msg.sender, address(this), amount);\n\n251:         bool success = _neuronInstance.transferFrom(msg.sender, address(this), amount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L250-L250",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L251-L251"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider using `ERC721A` over `ERC721`",
      "description": "[ERC721A](https://www.azuki.com/erc721a) is much more gas-efficient for minting multiple NFTs in the same transaction",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider using `solady`'s token contracts to save gas",
      "description": "They're written using heavily-optimized assembly, and will your users a lot of gas",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit ERC721\n/// @audit ERC721Enumerable\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit ERC1155\n10   contract GameItems is ERC1155 {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16       /// @notice Event emitted when a game item is bought.\n17       /// @param buyer The address of the buyer.\n18       /// @param tokenId The id of the game item.\n19:      /// @param quantity The quantity of the game item.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit ERC20\n11   contract Neuron is ERC20, AccessControl {\n12   \n13       /*//////////////////////////////////////////////////////////////\n14                                   EVENTS\n15       //////////////////////////////////////////////////////////////*/\n16   \n17:      /// @notice Event emitted when tokens are claimed.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L11-L17"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider using solady's `FixedPointMathLib`",
      "description": "Saves gas, and works to avoid unnecessary [overflows](https://github.com/Vectorized/solady/blob/6cce088e69d6e46671f2f622318102bd5db77a65/src/utils/FixedPointMathLib.sol#L267).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n301              claimableNRN += (\n302                  accumulatedPointsPerAddress[msg.sender][currentRound] * nrnDistribution   \n303:             ) / totalAccumulatedPoints[currentRound];\n\n392              claimableNRN += (\n393                  accumulatedPointsPerAddress[claimer][i] * nrnDistribution\n394:             ) / totalAccumulatedPoints[i];\n\n439:         curStakeAtRisk = (bpsLostPerLoss * (amountStaked[tokenId] + stakeAtRisk)) / 10**4;\n\n449:             uint256 mergingPoints = (points * mergingPortion) / 100;\n\n528:           (amountStaked[tokenId] + stakeAtRisk) / 10**18\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L301-L303",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L392-L394",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L439-L439",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L449-L449",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L528-L528"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiple `address`/ID mappings can be combined into a single `mapping` of an `address`/ID to a `struct`",
      "description": "Saves a storage slot for each of the removed mappings (i.e. this finding is not about runtime savings). The instances below refer to both mappings using the same key in the same function, so the mappings are related.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit combine into a `struct`: _tokenURIs,numRerolls\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit combine into a `struct`: allowanceRemaining,dailyAllowanceReplenishTime\n10   contract GameItems is ERC1155 {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16       /// @notice Event emitted when a game item is bought.\n17       /// @param buyer The address of the buyer.\n18       /// @param tokenId The id of the game item.\n19:      /// @param quantity The quantity of the game item.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit combine into a `struct`: isSelectionComplete,winnerAddresses\n9    contract MergingPool {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when merging pool points are added.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L9-L15"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit combine into a `struct`: _calculatedStakingFactor,amountStaked,hasUnstaked,stakingFactor\n/// @audit combine into a `struct`: accumulatedPointsPerAddress,amountClaimed,numRoundsClaimed\n/// @audit combine into a `struct`: accumulatedPointsPerAddress,numRoundsClaimed\n/// @audit combine into a `struct`: rankedNrnDistribution,totalAccumulatedPoints\n/// @audit combine into a `struct`: _calculatedStakingFactor,accumulatedPointsPerFighter,amountStaked,stakingFactor\n16   contract RankedBattle {\n17   \n18:      /// @dev Extend functionality of the FixedPointMathLib library to the uint data type.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit combine into a `struct`: stakeAtRisk,totalStakeAtRisk\n10   contract StakeAtRisk {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice Event emitted when NRNs are reclaimed from this contract (after a win in ranked).\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit combine into a `struct`: ownerVoltage,ownerVoltageReplenishTime\n9    contract VoltageManager {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when voltage amount is altered.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L9-L15"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Reduce deployment costs by tweaking contracts' metadata",
      "description": "See [this](https://www.rareskills.io/post/solidity-metadata) link, at its bottom, for full details",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n10   contract AiArenaHelper {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                               STATE VARIABLES\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice List of attributes\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n10   contract GameItems is ERC1155 {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16       /// @notice Event emitted when a game item is bought.\n17       /// @param buyer The address of the buyer.\n18       /// @param tokenId The id of the game item.\n19:      /// @param quantity The quantity of the game item.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n9    contract MergingPool {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when merging pool points are added.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L9-L15"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n11   contract Neuron is ERC20, AccessControl {\n12   \n13       /*//////////////////////////////////////////////////////////////\n14                                   EVENTS\n15       //////////////////////////////////////////////////////////////*/\n16   \n17:      /// @notice Event emitted when tokens are claimed.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L11-L17"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n16   contract RankedBattle {\n17   \n18:      /// @dev Extend functionality of the FixedPointMathLib library to the uint data type.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n10   contract StakeAtRisk {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice Event emitted when NRNs are reclaimed from this contract (after a win in ranked).\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n9    contract VoltageManager {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when voltage amount is altered.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L9-L15"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Reduce gas usage by moving to Solidity 0.8.19 or later",
      "description": "See [this](https://blog.soliditylang.org/2023/02/22/solidity-0.8.19-release-announcement/#preventing-dead-code-in-runtime-bytecode) link for the full details. Additionally, every new release has new optimizations, which will save gas.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n3:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L3-L3"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L2-L2"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n2:   pragma solidity >=0.8.0 <0.9.0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variable written in a loop",
      "description": "The code should be refactored such that updates made to the state variable are instead accumulated/tracked in a local variable, then be written a single time outside the loop, converting a Gsreset (**2900 gas**) to a stack write for each iteration",
      "gasSavings": 5794,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit totalPoints\n124          for (uint256 i = 0; i < winnersLength; i++) {\n125              currentWinnerAddresses[i] = _fighterFarmInstance.ownerOf(winners[i]);\n126              totalPoints -= fighterPoints[winners[i]];\n127              fighterPoints[winners[i]] = 0;\n128:         }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L126-L126"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `bool`s for storage incurs overhead",
      "description": "```solidity\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n```\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27\r\nUse `uint256(0)` and `uint256(1)` for true/false to avoid a Gwarmaccess (**[100 gas](https://gist.github.com/IllIllI000/1b70014db712f8572a72378321250058)**) for the extra SLOAD",
      "gasSavings": 1200,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n76:      mapping(uint256 => bool) public fighterStaked;\n\n82:      mapping(address => bool) public hasStakerRole;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L76-L76",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L82-L82"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n80:      mapping(address => bool) public allowedBurningAddresses;\n\n83:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L80-L80",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L83-L83"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n57:      mapping(uint256 => bool) public isSelectionComplete;\n\n60:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L57-L57",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L60-L60"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n56:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L56-L56"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n101:     mapping(address => bool) public isAdmin;\n\n125:     mapping(uint256 => mapping(uint256 => bool)) public hasUnstaked;\n\n134:     mapping(uint256 => mapping(uint256 => bool)) _calculatedStakingFactor;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L101-L101",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L125-L125",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L134-L134"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n33:      mapping(address => bool) public allowedVoltageSpenders;\n\n42:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L33-L33",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L42-L42"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variable read in a loop",
      "description": "The state variable should be cached in and read from a local variable, or accumulated in a local variable then written to storage once outside of the loop, rather than reading/updating it on every iteration of the loop, which will replace each Gwarmaccess (**100 gas**) with a much cheaper stack read.",
      "gasSavings": 776,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit fighters\n211          for (uint16 i = 0; i < totalToMint; i++) {\n212              _createNewFighter(\n213                  msg.sender, \n214                  uint256(keccak256(abi.encode(msg.sender, fighters.length))),\n215                  modelHashes[i], \n216                  modelTypes[i],\n217                  i < numToMint[0] ? 0 : 1,\n218                  0,\n219                  [uint256(100), uint256(100)]\n220              );\n221:         }\n\n/// @audit _mintpassInstance\n/// @audit _mintpassInstance\n249          for (uint16 i = 0; i < mintpassIdsToBurn.length; i++) {\n250              require(msg.sender == _mintpassInstance.ownerOf(mintpassIdsToBurn[i]));\n251              _mintpassInstance.burn(mintpassIdsToBurn[i]);\n252              _createNewFighter(\n253                  msg.sender, \n254                  uint256(keccak256(abi.encode(mintPassDnas[i]))), \n255                  modelHashes[i], \n256                  modelTypes[i],\n257                  fighterTypes[i],\n258                  iconsTypes[i],\n259                  [uint256(100), uint256(100)]\n260              );\n261:         }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L214-L214",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L250-L250",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L251-L251"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit _fighterFarmInstance\n/// @audit totalPoints\n124          for (uint256 i = 0; i < winnersLength; i++) {\n125              currentWinnerAddresses[i] = _fighterFarmInstance.ownerOf(winners[i]);\n126              totalPoints -= fighterPoints[winners[i]];\n127              fighterPoints[winners[i]] = 0;\n128:         }\n\n/// @audit _fighterFarmInstance\n149          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n150              numRoundsClaimed[msg.sender] += 1;\n151              winnersLength = winnerAddresses[currentRound].length;\n152              for (uint32 j = 0; j < winnersLength; j++) {\n153                  if (msg.sender == winnerAddresses[currentRound][j]) {\n154                      _fighterFarmInstance.mintFromMergingPool(\n155                          msg.sender,\n156                          modelURIs[claimIndex],\n157                          modelTypes[claimIndex],\n158                          customAttributes[claimIndex]\n159                      );\n160                      claimIndex += 1;\n161                  }\n162              }\n163:         }\n\n/// @audit _fighterFarmInstance\n152              for (uint32 j = 0; j < winnersLength; j++) {\n153                  if (msg.sender == winnerAddresses[currentRound][j]) {\n154                      _fighterFarmInstance.mintFromMergingPool(\n155                          msg.sender,\n156                          modelURIs[claimIndex],\n157                          modelTypes[claimIndex],\n158                          customAttributes[claimIndex]\n159                      );\n160                      claimIndex += 1;\n161                  }\n162:             }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L125-L125",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L126-L126",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L154-L154",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L154-L154"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit treasuryAddress\n131          for (uint32 i = 0; i < recipientsLength; i++) {\n132              _approve(treasuryAddress, recipients[i], amounts[i]);\n133:         }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L132-L132"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiple accesses of a mapping/array should use a local variable cache",
      "description": "The instances below point to the second+ access of a value inside a mapping/array, within a function. Caching a mapping's value in a local `storage` or `calldata` variable when the value is accessed [multiple times](https://gist.github.com/IllIllI000/ec23a57daa30a8f8ca8b9681c8ccefb0), saves **~42 gas per access** due to not having to recalculate the key's keccak256 hash (`Gkeccak256` - **30 gas**) and that calculation's associated stack operations. Caching an array's struct avoids recalculating the array offsets into memory/calldata",
      "gasSavings": 1008,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit nftsClaimed...[]\n209:         nftsClaimed[msg.sender][0] += numToMint[0];\n\n/// @audit nftsClaimed...[]\n210:         nftsClaimed[msg.sender][1] += numToMint[1];\n\n/// @audit numRerolls...[]\n378:             numRerolls[tokenId] += 1;\n\n/// @audit numRerolls...[]\n379:             uint256 dna = uint256(keccak256(abi.encode(msg.sender, tokenId, numRerolls[tokenId])));\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L209-L209",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L210-L210",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L378-L378",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L379-L379"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit dailyAllowanceReplenishTime...[]\n166:             if (dailyAllowanceReplenishTime[msg.sender][tokenId] <= block.timestamp) {\n\n/// @audit allowanceRemaining...[]\n169:             allowanceRemaining[msg.sender][tokenId] -= quantity;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L166-L166",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L169-L169"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit isSelectionComplete...[]\n130:         isSelectionComplete[roundId] = true;\n\n/// @audit numRoundsClaimed...[]\n150:             numRoundsClaimed[msg.sender] += 1;\n\n/// @audit winnerAddresses...[]\n153:                 if (msg.sender == winnerAddresses[currentRound][j]) {\n\n/// @audit winnerAddresses...[]\n179:                 if (claimer == winnerAddresses[currentRound][j]) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L130-L130",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L150-L150",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L153-L153",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L179-L179"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit amountStaked...[]\n256:             amountStaked[tokenId] += amount;\n\n/// @audit amountStaked...[]\n275:         amountStaked[tokenId] -= amount;\n\n/// @audit amountStaked...[]\n285:             if (amountStaked[tokenId] == 0) {\n\n/// @audit numRoundsClaimed...[]\n298:         uint32 lowerBound = numRoundsClaimed[msg.sender];\n\n/// @audit numRoundsClaimed...[]\n304:             numRoundsClaimed[msg.sender] += 1;\n\n/// @audit amountStaked...[]\n462:                 amountStaked[tokenId] += curStakeAtRisk;\n\n/// @audit amountStaked...[]\n476:             if (curStakeAtRisk > amountStaked[tokenId]) {\n\n/// @audit amountStaked...[]\n477:                 curStakeAtRisk = amountStaked[tokenId];\n\n/// @audit accumulatedPointsPerFighter...[]\n485:                 accumulatedPointsPerFighter[tokenId][roundId] -= points;\n\n/// @audit amountStaked...[]\n496:                     amountStaked[tokenId] -= curStakeAtRisk;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L256-L256",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L275-L275",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L285-L285",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L298-L298",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L304-L304",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L462-L462",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L476-L476",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L477-L477",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L485-L485",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L496-L496"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit stakeAtRisk...[]\n102:             stakeAtRisk[roundId][fighterId] -= nrnToReclaim;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L102-L102"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit ownerVoltage...[]\n97:          ownerVoltage[msg.sender] = 100;\n\n/// @audit ownerVoltage...[]\n98:          emit VoltageRemaining(msg.sender, ownerVoltage[msg.sender]);\n\n/// @audit ownerVoltage...[]\n111:         emit VoltageRemaining(spender, ownerVoltage[spender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L97-L97",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L98-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L111-L111"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiple accesses of a storage array should use a local variable cache",
      "description": "The instances below point to the second+ access of a value inside a storage array, within a function. Caching an array index value in a local `storage` or `calldata` variable when the value is accessed [multiple times](https://gist.github.com/IllIllI000/ec23a57daa30a8f8ca8b9681c8ccefb0), saves **~42 gas per access** due to not having to recalculate the array's keccak256 hash (`Gkeccak256` - **30 gas**) and that calculation's associated stack operations.",
      "gasSavings": 714,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit attributes...[]\n50:              attributeToDnaDivisor[attributes[i]] = defaultAttributeDivisor[i];\n\n/// @audit attributes...[]\n108:                     uint256 attributeIndex = dnaToIndex(generation, rarityRank, attributes[i]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L50-L50",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L108-L108"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit generation...[]\n133:         return generation[fighterType];\n\n/// @audit fighters...[]\n292:         fighters[tokenId].modelType = modelType;\n\n/// @audit fighters...[]\n382:             fighters[tokenId].weight = weight;\n\n/// @audit fighters...[]\n383:             fighters[tokenId].physicalAttributes = _aiArenaHelperInstance.createPhysicalAttributes(\n\n/// @audit fighters...[]\n386:                 fighters[tokenId].iconsType,\n\n/// @audit fighters...[]\n387:                 fighters[tokenId].dendroidBool\n\n/// @audit generation...[]\n524:                 generation[fighterType],\n\n/// @audit generation...[]\n530:         FighterOps.fighterCreatedEmitter(newId, weight, element, generation[fighterType]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L133-L133",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L292-L292",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L382-L382",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L383-L383",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L386-L386",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L387-L387",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L524-L524",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L530-L530"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit allGameItemAttributes...[]\n152:             allGameItemAttributes[tokenId].finiteSupply == false || \n\n/// @audit allGameItemAttributes...[]\n154:                 allGameItemAttributes[tokenId].finiteSupply == true && \n\n/// @audit allGameItemAttributes...[]\n155:                 quantity <= allGameItemAttributes[tokenId].itemsRemaining\n\n/// @audit allGameItemAttributes...[]\n170:             if (allGameItemAttributes[tokenId].finiteSupply) {\n\n/// @audit allGameItemAttributes...[]\n171:                 allGameItemAttributes[tokenId].itemsRemaining -= quantity;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L152-L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L154-L154",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L155-L155",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L170-L170",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L171-L171"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit winnerAddresses...[]\n153:                 if (msg.sender == winnerAddresses[currentRound][j]) {\n\n/// @audit winnerAddresses...[]\n179:                 if (claimer == winnerAddresses[currentRound][j]) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L153-L153",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L179-L179"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Combine `mapping`s referenced in the same function by the same key",
      "description": "Reads and subsequent writes can also be cheaper when a function requires both values and they both fit in the same storage slot (i.e. runtime gas savings). Even if the values can't be packed, if both fields are accessed in the same function (as is the case for these instances), combining them can save **~42 gas per access** due to [not having to recalculate the key's keccak256 hash](https://gist.github.com/IllIllI000/639032d73e35d7e968ff58d8784bc445) (Gkeccak256 - 30 gas) and that calculation's associated stack operations.",
      "gasSavings": 672,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit combine into a `struct`: _tokenURIs,numRerolls\n370      function reRoll(uint8 tokenId, uint8 fighterType) public {\n371          require(msg.sender == ownerOf(tokenId));\n372          require(numRerolls[tokenId] < maxRerollsAllowed[fighterType]);\n373          require(_neuronInstance.balanceOf(msg.sender) >= rerollCost, \"Not enough NRN for reroll\");\n374  \n375          _neuronInstance.approveSpender(msg.sender, rerollCost);\n376          bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, rerollCost);\n377          if (success) {\n378              numRerolls[tokenId] += 1;\n379              uint256 dna = uint256(keccak256(abi.encode(msg.sender, tokenId, numRerolls[tokenId])));\n380              (uint256 element, uint256 weight, uint256 newDna) = _createFighterBase(dna, fighterType);\n381              fighters[tokenId].element = element;\n382              fighters[tokenId].weight = weight;\n383              fighters[tokenId].physicalAttributes = _aiArenaHelperInstance.createPhysicalAttributes(\n384                  newDna,\n385                  generation[fighterType],\n386                  fighters[tokenId].iconsType,\n387                  fighters[tokenId].dendroidBool\n388              );\n389              _tokenURIs[tokenId] = \"\";\n390          }\n391:     }    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L370-L391"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit combine into a `struct`: allowanceRemaining,dailyAllowanceReplenishTime\n147      function mint(uint256 tokenId, uint256 quantity) external {\n148          require(tokenId < _itemCount);\n149          uint256 price = allGameItemAttributes[tokenId].itemPrice * quantity;\n150          require(_neuronInstance.balanceOf(msg.sender) >= price, \"Not enough NRN for purchase\");\n151          require(\n152              allGameItemAttributes[tokenId].finiteSupply == false || \n153              (\n154                  allGameItemAttributes[tokenId].finiteSupply == true && \n155                  quantity <= allGameItemAttributes[tokenId].itemsRemaining\n156              )\n157          );\n158          require(\n159              dailyAllowanceReplenishTime[msg.sender][tokenId] <= block.timestamp || \n160              quantity <= allowanceRemaining[msg.sender][tokenId]\n161          );\n162  \n163          _neuronInstance.approveSpender(msg.sender, price);\n164          bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, price);\n165          if (success) {\n166              if (dailyAllowanceReplenishTime[msg.sender][tokenId] <= block.timestamp) {\n167                  _replenishDailyAllowance(tokenId);\n168              }\n169              allowanceRemaining[msg.sender][tokenId] -= quantity;\n170              if (allGameItemAttributes[tokenId].finiteSupply) {\n171                  allGameItemAttributes[tokenId].itemsRemaining -= quantity;\n172              }\n173              _mint(msg.sender, tokenId, quantity, bytes(\"random\"));\n174              emit BoughtItem(msg.sender, tokenId, quantity);\n175          }\n176:     }\n\n/// @audit combine into a `struct`: allowanceRemaining,dailyAllowanceReplenishTime\n268      function getAllowanceRemaining(address owner, uint256 tokenId) public view returns (uint256) {\n269          uint256 remaining = allowanceRemaining[owner][tokenId];\n270          if (dailyAllowanceReplenishTime[owner][tokenId] <= block.timestamp) {\n271              remaining = allGameItemAttributes[tokenId].dailyAllowance;\n272          }\n273          return remaining;\n274:     }\n\n/// @audit combine into a `struct`: allowanceRemaining,dailyAllowanceReplenishTime\n312      function _replenishDailyAllowance(uint256 tokenId) private {\n313          allowanceRemaining[msg.sender][tokenId] = allGameItemAttributes[tokenId].dailyAllowance;\n314          dailyAllowanceReplenishTime[msg.sender][tokenId] = uint32(block.timestamp + 1 days);\n315:     }    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L147-L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L268-L274",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L312-L315"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit combine into a `struct`: isSelectionComplete,winnerAddresses\n118      function pickWinner(uint256[] calldata winners) external {\n119          require(isAdmin[msg.sender]);\n120          require(winners.length == winnersPerPeriod, \"Incorrect number of winners\");\n121          require(!isSelectionComplete[roundId], \"Winners are already selected\");\n122          uint256 winnersLength = winners.length;\n123          address[] memory currentWinnerAddresses = new address[](winnersLength);\n124          for (uint256 i = 0; i < winnersLength; i++) {\n125              currentWinnerAddresses[i] = _fighterFarmInstance.ownerOf(winners[i]);\n126              totalPoints -= fighterPoints[winners[i]];\n127              fighterPoints[winners[i]] = 0;\n128          }\n129          winnerAddresses[roundId] = currentWinnerAddresses;\n130          isSelectionComplete[roundId] = true;\n131          roundId += 1;\n132:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L118-L132"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit combine into a `struct`: rankedNrnDistribution,totalAccumulatedPoints\n233      function setNewRound() external {\n234          require(isAdmin[msg.sender]);\n235          require(totalAccumulatedPoints[roundId] > 0);\n236          roundId += 1;\n237          _stakeAtRiskInstance.setNewRound(roundId);\n238          rankedNrnDistribution[roundId] = rankedNrnDistribution[roundId - 1];\n239:     }\n\n/// @audit combine into a `struct`: _calculatedStakingFactor,amountStaked,hasUnstaked,stakingFactor\n244      function stakeNRN(uint256 amount, uint256 tokenId) external {\n245          require(amount > 0, \"Amount cannot be 0\");\n246          require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n247          require(_neuronInstance.balanceOf(msg.sender) >= amount, \"Stake amount exceeds balance\");\n248          require(hasUnstaked[tokenId][roundId] == false, \"Cannot add stake after unstaking this round\");\n249  \n250          _neuronInstance.approveStaker(msg.sender, address(this), amount);\n251          bool success = _neuronInstance.transferFrom(msg.sender, address(this), amount);\n252          if (success) {\n253              if (amountStaked[tokenId] == 0) {\n254                  _fighterFarmInstance.updateFighterStaking(tokenId, true);\n255              }\n256              amountStaked[tokenId] += amount;\n257              globalStakedAmount += amount;\n258              stakingFactor[tokenId] = _getStakingFactor(\n259                  tokenId, \n260                  _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n261              );\n262              _calculatedStakingFactor[tokenId][roundId] = true;\n263              emit Staked(msg.sender, amount);\n264          }\n265:     }\n\n/// @audit combine into a `struct`: _calculatedStakingFactor,amountStaked,hasUnstaked,stakingFactor\n270      function unstakeNRN(uint256 amount, uint256 tokenId) external {\n271          require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n272          if (amount > amountStaked[tokenId]) {\n273              amount = amountStaked[tokenId];\n274          }\n275          amountStaked[tokenId] -= amount;\n276          globalStakedAmount -= amount;\n277          stakingFactor[tokenId] = _getStakingFactor(\n278              tokenId, \n279              _stakeAtRiskInstance.getStakeAtRisk(tokenId)\n280          );\n281          _calculatedStakingFactor[tokenId][roundId] = true;\n282          hasUnstaked[tokenId][roundId] = true;\n283          bool success = _neuronInstance.transfer(msg.sender, amount);\n284          if (success) {\n285              if (amountStaked[tokenId] == 0) {\n286                  _fighterFarmInstance.updateFighterStaking(tokenId, false);\n287              }\n288              emit Unstaked(msg.sender, amount);\n289          }\n290:     }\n\n/// @audit combine into a `struct`: accumulatedPointsPerAddress,amountClaimed,numRoundsClaimed\n294      function claimNRN() external {\n295          require(numRoundsClaimed[msg.sender] < roundId, \"Already claimed NRNs for this period\");\n296          uint256 claimableNRN = 0;\n297          uint256 nrnDistribution;\n298          uint32 lowerBound = numRoundsClaimed[msg.sender];\n299          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n300              nrnDistribution = getNrnDistribution(currentRound);\n301              claimableNRN += (\n302                  accumulatedPointsPerAddress[msg.sender][currentRound] * nrnDistribution   \n303              ) / totalAccumulatedPoints[currentRound];\n304              numRoundsClaimed[msg.sender] += 1;\n305          }\n306          if (claimableNRN > 0) {\n307              amountClaimed[msg.sender] += claimableNRN;\n308              _neuronInstance.mint(msg.sender, claimableNRN);\n309              emit Claimed(msg.sender, claimableNRN);\n310          }\n311:     }\n\n/// @audit combine into a `struct`: rankedNrnDistribution,totalAccumulatedPoints\n364      function getCurrentStakingData() external view returns(uint256, uint256, uint256) {\n365        return (\n366            roundId,\n367            rankedNrnDistribution[roundId], \n368            totalAccumulatedPoints[roundId]\n369        );\n370:     }\n\n/// @audit combine into a `struct`: accumulatedPointsPerAddress,numRoundsClaimed\n386      function getUnclaimedNRN(address claimer) public view returns(uint256) {\n387          uint256 claimableNRN = 0;\n388          uint256 nrnDistribution;   \n389          uint32 lowerBound = numRoundsClaimed[claimer];\n390          for (uint32 i = lowerBound; i < roundId; i++) {\n391              nrnDistribution = getNrnDistribution(i);\n392              claimableNRN += (\n393                  accumulatedPointsPerAddress[claimer][i] * nrnDistribution\n394              ) / totalAccumulatedPoints[i];\n395          }\n396          return claimableNRN;\n397:     } \n\n/// @audit combine into a `struct`: _calculatedStakingFactor,accumulatedPointsPerFighter,amountStaked,stakingFactor\n416      function _addResultPoints(\n417          uint8 battleResult, \n418          uint256 tokenId, \n419          uint256 eloFactor, \n420          uint256 mergingPortion,\n421          address fighterOwner\n422      ) \n423          private \n424      {\n425          uint256 stakeAtRisk;\n426          uint256 curStakeAtRisk;\n427          uint256 points = 0;\n428  \n429          /// Check how many NRNs the fighter has at risk\n430          stakeAtRisk = _stakeAtRiskInstance.getStakeAtRisk(tokenId);\n431  \n432          /// Calculate the staking factor if it has not already been calculated for this round \n433          if (_calculatedStakingFactor[tokenId][roundId] == false) {\n434              stakingFactor[tokenId] = _getStakingFactor(tokenId, stakeAtRisk);\n435              _calculatedStakingFactor[tokenId][roundId] = true;\n436          }\n437  \n438          /// Potential amount of NRNs to put at risk or retrieve from the stake-at-risk contract\n439          curStakeAtRisk = (bpsLostPerLoss * (amountStaked[tokenId] + stakeAtRisk)) / 10**4;\n440          if (battleResult == 0) {\n441              /// If the user won the match\n442  \n443              /// If the user has no NRNs at risk, then they can earn points\n444              if (stakeAtRisk == 0) {\n445                  points = stakingFactor[tokenId] * eloFactor;\n446              }\n447  \n448              /// Divert a portion of the points to the merging pool\n449              uint256 mergingPoints = (points * mergingPortion) / 100;\n450              points -= mergingPoints;\n451              _mergingPoolInstance.addPoints(tokenId, mergingPoints);\n452  \n453              /// Do not allow users to reclaim more NRNs than they have at risk\n454              if (curStakeAtRisk > stakeAtRisk) {\n455                  curStakeAtRisk = stakeAtRisk;\n456              }\n457  \n458              /// If the user has stake-at-risk for their fighter, reclaim a portion\n459              /// Reclaiming stake-at-risk puts the NRN back into their staking pool\n460              if (curStakeAtRisk > 0) {\n461                  _stakeAtRiskInstance.reclaimNRN(curStakeAtRisk, tokenId, fighterOwner);\n462                  amountStaked[tokenId] += curStakeAtRisk;\n463              }\n464  \n465              /// Add points to the fighter for this round\n466              accumulatedPointsPerFighter[tokenId][roundId] += points;\n467              accumulatedPointsPerAddress[fighterOwner][roundId] += points;\n468              totalAccumulatedPoints[roundId] += points;\n469              if (points > 0) {\n470                  emit PointsChanged(tokenId, points, true);\n471              }\n472          } else if (battleResult == 2) {\n473              /// If the user lost the match\n474  \n475              /// Do not allow users to lose more NRNs than they have in their staking pool\n476              if (curStakeAtRisk > amountStaked[tokenId]) {\n477                  curStakeAtRisk = amountStaked[tokenId];\n478              }\n479              if (accumulatedPointsPerFighter[tokenId][roundId] > 0) {\n480                  /// If the fighter has a positive point balance for this round, deduct points \n481                  points = stakingFactor[tokenId] * eloFactor;\n482                  if (points > accumulatedPointsPerFighter[tokenId][roundId]) {\n483                      points = accumulatedPointsPerFighter[tokenId][roundId];\n484                  }\n485                  accumulatedPointsPerFighter[tokenId][roundId] -= points;\n486                  accumulatedPointsPerAddress[fighterOwner][roundId] -= points;\n487                  totalAccumulatedPoints[roundId] -= points;\n488                  if (points > 0) {\n489                      emit PointsChanged(tokenId, points, false);\n490                  }\n491              } else {\n492                  /// If the fighter does not have any points for this round, NRNs become at risk of being lost\n493                  bool success = _neuronInstance.transfer(_stakeAtRiskAddress, curStakeAtRisk);\n494                  if (success) {\n495                      _stakeAtRiskInstance.updateAtRiskRecords(curStakeAtRisk, tokenId, fighterOwner);\n496                      amountStaked[tokenId] -= curStakeAtRisk;\n497                  }\n498              }\n499          }\n500:     }\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L233-L239",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L244-L265",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L270-L290",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L294-L311",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L364-L370",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L386-L397",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L416-L500"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit combine into a `struct`: stakeAtRisk,totalStakeAtRisk\n93       function reclaimNRN(uint256 nrnToReclaim, uint256 fighterId, address fighterOwner) external {\n94           require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n95           require(\n96               stakeAtRisk[roundId][fighterId] >= nrnToReclaim, \n97               \"Fighter does not have enough stake at risk\"\n98           );\n99   \n100          bool success = _neuronInstance.transfer(_rankedBattleAddress, nrnToReclaim);\n101          if (success) {\n102              stakeAtRisk[roundId][fighterId] -= nrnToReclaim;\n103              totalStakeAtRisk[roundId] -= nrnToReclaim;\n104              amountLost[fighterOwner] -= nrnToReclaim;\n105              emit ReclaimedStake(fighterId, nrnToReclaim);\n106          }\n107:     }\n\n/// @audit combine into a `struct`: stakeAtRisk,totalStakeAtRisk\n115      function updateAtRiskRecords(\n116          uint256 nrnToPlaceAtRisk, \n117          uint256 fighterId, \n118          address fighterOwner\n119      ) \n120          external \n121      {\n122          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n123          stakeAtRisk[roundId][fighterId] += nrnToPlaceAtRisk;\n124          totalStakeAtRisk[roundId] += nrnToPlaceAtRisk;\n125          amountLost[fighterOwner] += nrnToPlaceAtRisk;\n126          emit IncreasedStakeAtRisk(fighterId, nrnToPlaceAtRisk);\n127:     }   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L93-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L127"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit combine into a `struct`: ownerVoltage,ownerVoltageReplenishTime\n105      function spendVoltage(address spender, uint8 voltageSpent) public {\n106          require(spender == msg.sender || allowedVoltageSpenders[msg.sender]);\n107          if (ownerVoltageReplenishTime[spender] <= block.timestamp) {\n108              _replenishVoltage(spender);\n109          }\n110          ownerVoltage[spender] -= voltageSpent;\n111          emit VoltageRemaining(spender, ownerVoltage[spender]);\n112:     }\n\n/// @audit combine into a `struct`: ownerVoltage,ownerVoltageReplenishTime\n117      function _replenishVoltage(address owner) private {\n118          ownerVoltage[owner] = 100;\n119          ownerVoltageReplenishTime[owner] = uint32(block.timestamp + 1 days);\n120:     }    \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L105-L112",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L117-L120"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead",
      "description": "> When using elements that are smaller than 32 bytes, your contracts gas usage may be higher. This is because the EVM operates on 32 bytes at a time. Therefore, if the element is smaller than that, the EVM must use more operations in order to reduce the size of the element from 32 bytes to the desired size.\r\n\r\nhttps://docs.soliditylang.org/en/v0.8.11/internals/layout_in_storage.html\r\nEach operation involving a `uint8` costs an extra [**22-28 gas**](https://gist.github.com/IllIllI000/9388d20c70f9a4632eb3ca7836f54977) (depending on whether the other operand is also a variable of type `uint8`) as compared to ones involving `uint256`, due to the compiler having to clear the higher bits of the memory word before operating on the `uint8`, as well as the associated stack operations of doing so. Use a larger size then downcast where needed",
      "gasSavings": 22,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n119:         ownerVoltageReplenishTime[owner] = uint32(block.timestamp + 1 days);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L119-L119"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Functions guaranteed to revert when called by normal users can be marked `payable`",
      "description": "If a function modifier such as `onlyOwner` is used, or a function checks `msg.sender` some other way, the function will revert if a normal user tries to pay the function. Marking the function as `payable` will lower the gas cost for legitimate callers because the compiler will not include checks for whether a payment was provided. The extra opcodes avoided are `CALLVALUE`(2),`DUP1`(3),`ISZERO`(3),`PUSH2`(3),`JUMPI`(10),`PUSH1`(3),`DUP1`(3),`REVERT`(0),`JUMPDEST`(1),`POP`(2), which costs an average of about **21 gas per call** to the function, in addition to the extra deployment cost",
      "gasSavings": 1407,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n41:      constructor(uint8[][] memory probabilities) {\n\n61:      function transferOwnership(address newOwnerAddress) external {\n\n68:      function addAttributeDivisor(uint8[] memory attributeDivisors) external {\n\n131:     function addAttributeProbabilities(uint256 generation, uint8[][] memory probabilities) public {\n\n144:     function deleteAttributeProbabilities(uint8 generation) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L41-L41",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L61-L61",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L68-L68",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L131-L131",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L144-L144"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n120:     function transferOwnership(address newOwnerAddress) external {\n\n129:     function incrementGeneration(uint8 fighterType) external returns (uint8) {\n\n139:     function addStaker(address newStaker) external {\n\n147:     function instantiateAIArenaHelperContract(address aiArenaHelperAddress) external {\n\n155:     function instantiateMintpassContract(address mintpassAddress) external {\n\n163:     function instantiateNeuronContract(address neuronAddress) external {\n\n171:     function setMergingPoolAddress(address mergingPoolAddress) external {\n\n180:     function setTokenURI(uint256 tokenId, string calldata newTokenURI) external {\n\n191      function claimFighters(\n192          uint8[2] calldata numToMint,\n193          bytes calldata signature,\n194          string[] calldata modelHashes,\n195          string[] calldata modelTypes\n196      ) \n197          external \n198:     {\n\n233      function redeemMintPass(\n234          uint256[] calldata mintpassIdsToBurn,\n235          uint8[] calldata fighterTypes,\n236          uint8[] calldata iconsTypes,\n237          string[] calldata mintPassDnas,\n238          string[] calldata modelHashes,\n239          string[] calldata modelTypes\n240      ) \n241          external \n242:     {\n\n268:     function updateFighterStaking(uint256 tokenId, bool stakingStatus) external {\n\n283      function updateModel(\n284          uint256 tokenId, \n285          string calldata modelHash,\n286          string calldata modelType\n287      ) \n288          external\n289:     {\n\n313      function mintFromMergingPool(\n314          address to, \n315          string calldata modelHash, \n316          string calldata modelType, \n317          uint256[2] calldata customAttributes\n318      ) \n319          public \n320:     {\n\n338      function transferFrom(\n339          address from, \n340          address to, \n341          uint256 tokenId\n342      ) \n343          public \n344          override(ERC721, IERC721)\n345:     {\n\n355      function safeTransferFrom(\n356          address from, \n357          address to, \n358          uint256 tokenId\n359      ) \n360          public \n361          override(ERC721, IERC721)\n362:     {\n\n370:     function reRoll(uint8 tokenId, uint8 fighterType) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L120-L120",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L129-L129",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L139-L139",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L147-L147",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L155-L155",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L163-L163",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L171-L171",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L180-L180",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L191-L198",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L233-L242",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L268-L268",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L283-L289",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L313-L320",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L338-L345",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L355-L362",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L370-L370"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n108:     function transferOwnership(address newOwnerAddress) external {\n\n117:     function adjustAdminAccess(address adminAddress, bool access) external {\n\n126:     function adjustTransferability(uint256 tokenId, bool transferable) external {\n\n139:     function instantiateNeuronContract(address nrnAddress) external {\n\n147:     function mint(uint256 tokenId, uint256 quantity) external {\n\n185:     function setAllowedBurningAddresses(address newBurningAddress) public {\n\n194:     function setTokenURI(uint256 tokenId, string memory _tokenURI) public {\n\n208      function createGameItem(\n209          string memory name_,\n210          string memory tokenURI,\n211          bool finiteSupply,\n212          bool transferable,\n213          uint256 itemsRemaining,\n214          uint256 itemPrice,\n215          uint16 dailyAllowance\n216      ) \n217          public \n218:     {\n\n242:     function burn(address account, uint256 tokenId, uint256 amount) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L108-L108",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L117-L117",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L126-L126",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L139-L139",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L147-L147",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L185-L185",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L194-L194",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L208-L218",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L242-L242"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n89:      function transferOwnership(address newOwnerAddress) external {\n\n98:      function adjustAdminAccess(address adminAddress, bool access) external {\n\n106:     function updateWinnersPerPeriod(uint256 newWinnersPerPeriodAmount) external {\n\n118:     function pickWinner(uint256[] calldata winners) external {\n\n195:     function addPoints(uint256 tokenId, uint256 points) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L89-L89",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L98-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L106-L106",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L195-L195"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n85:      function transferOwnership(address newOwnerAddress) external {\n\n93:      function addMinter(address newMinterAddress) external {\n\n101:     function addStaker(address newStakerAddress) external {\n\n109:     function addSpender(address newSpenderAddress) external {\n\n118:     function adjustAdminAccess(address adminAddress, bool access) external {\n\n127:     function setupAirdrop(address[] calldata recipients, uint256[] calldata amounts) external {\n\n138:     function claim(uint256 amount) external {\n\n155:     function mint(address to, uint256 amount) public virtual {\n\n171:     function approveSpender(address account, uint256 amount) public {\n\n184:     function approveStaker(address owner, address spender, uint256 amount) public {\n\n196:     function burnFrom(address account, uint256 amount) public virtual {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L85-L85",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L93-L93",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L101-L101",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L109-L109",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L118-L118",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L127-L127",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L138-L138",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L155-L155",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L171-L171",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L184-L184",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L196-L196"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n167:     function transferOwnership(address newOwnerAddress) external {\n\n176:     function adjustAdminAccess(address adminAddress, bool access) external {\n\n184:     function setGameServerAddress(address gameServerAddress) external {\n\n192:     function setStakeAtRiskAddress(address stakeAtRiskAddress) external {\n\n201:     function instantiateNeuronContract(address nrnAddress) external {\n\n209:     function instantiateMergingPoolContract(address mergingPoolAddress) external {\n\n218:     function setRankedNrnDistribution(uint256 newDistribution) external {\n\n226:     function setBpsLostPerLoss(uint256 bpsLostPerLoss_) external {\n\n233:     function setNewRound() external {\n\n244:     function stakeNRN(uint256 amount, uint256 tokenId) external {\n\n270:     function unstakeNRN(uint256 amount, uint256 tokenId) external {\n\n294:     function claimNRN() external {\n\n322      function updateBattleRecord(\n323          uint256 tokenId, \n324          uint256 mergingPortion,\n325          uint8 battleResult,\n326          uint256 eloFactor,\n327          bool initiatorBool\n328      ) \n329          external \n330:     {   \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L167-L167",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L176-L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L184-L184",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L192-L192",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L201-L201",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L209-L209",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L218-L218",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L226-L226",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L233-L233",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L244-L244",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L270-L270",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L294-L294",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L322-L330"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n78:      function setNewRound(uint256 roundId_) external {\n\n93:      function reclaimNRN(uint256 nrnToReclaim, uint256 fighterId, address fighterOwner) external {\n\n115      function updateAtRiskRecords(\n116          uint256 nrnToPlaceAtRisk, \n117          uint256 fighterId, \n118          address fighterOwner\n119      ) \n120          external \n121:     {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L78-L78",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L93-L93",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L115-L121"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n64:      function transferOwnership(address newOwnerAddress) external {\n\n73:      function adjustAdminAccess(address adminAddress, bool access) external {\n\n82:      function adjustAllowedVoltageSpenders(address allowedVoltageSpender, bool allowed) external {\n\n93:      function useVoltageBattery() public {\n\n105:     function spendVoltage(address spender, uint8 voltageSpent) public {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L64-L64",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L73-L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L82-L82",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L93-L93",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L105-L105"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Constructors can be marked `payable`",
      "description": "Payable functions cost less gas to execute, since the compiler does not have to add extra checks to ensure that a payment wasn't provided. A constructor can safely be marked as payable, since only the deployer would be able to pass funds, and the project itself would not pass any funds.",
      "gasSavings": 168,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n41:       constructor(uint8[][] memory probabilities) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L41"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n104       constructor(address ownerAddress, address delegatedAddress, address treasuryAddress_)\n105:          ERC721(\"AI Arena Fighter\", \"FTR\")\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L104-L105"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n95:       constructor(address ownerAddress, address treasuryAddress_) ERC1155(\"https://ipfs.io/ipfs/\") {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L95"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n71        constructor(\n72            address ownerAddress, \n73            address rankedBattleAddress, \n74:           address fighterFarmAddress\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L71-L74"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n68        constructor(address ownerAddress, address treasuryAddress_, address contributorAddress)\n69:           ERC20(\"Neuron\", \"NRN\")\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L68-L69"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n146       constructor(\n147         address ownerAddress, \n148         address gameServerAddress,\n149         address fighterFarmAddress,\n150:        address voltageManagerAddress\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L146-L150"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n60        constructor(\n61            address treasuryAddress_,\n62            address nrnAddress,\n63:           address rankedBattleAddress\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L60-L63"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n51:       constructor(address ownerAddress, address gameItemsContractAddress) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L51"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`unchecked {}`  can be used on the division of two `uint`s in order to save gas",
      "description": "The division cannot overflow, since both the numerator and the denominator are non-negative",
      "gasSavings": 120,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n107:                     uint256 rarityRank = (dna / attributeToDnaDivisor[attributes[i]]) % 100;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L107-L107"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n301              claimableNRN += (\n302                  accumulatedPointsPerAddress[msg.sender][currentRound] * nrnDistribution   \n303:             ) / totalAccumulatedPoints[currentRound];\n\n392              claimableNRN += (\n393                  accumulatedPointsPerAddress[claimer][i] * nrnDistribution\n394:             ) / totalAccumulatedPoints[i];\n\n439:         curStakeAtRisk = (bpsLostPerLoss * (amountStaked[tokenId] + stakeAtRisk)) / 10**4;\n\n449:             uint256 mergingPoints = (points * mergingPortion) / 100;\n\n528:           (amountStaked[tokenId] + stakeAtRisk) / 10**18\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L301-L303",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L392-L394",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L439-L439",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L449-L449",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L528-L528"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`private` functions only called once can be inlined to save gas",
      "description": "Not inlining costs **20 to 40 gas** because of two extra `JUMP` instructions and additional stack operations needed for function calls. The inliner can do it only for 'simple' cases:\r\n> Now to get back to the point why we require the routine to be simple: As soon as you do more complicated things like for example branching, calling external contracts, the Common Subexpression Eliminator cannot re-construct the code anymore or does not do full symbolic evaluation of the expressions. \r\n\r\nhttps://soliditylang.org/blog/2021/03/02/saving-gas-with-simple-inliner/\r\n\r\nTherefore, the instances below contain branching or use op-codes with side-effects",
      "gasSavings": 100,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n312:     function _replenishDailyAllowance(uint256 tokenId) private {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L312-L312"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n416      function _addResultPoints(\n417          uint8 battleResult, \n418          uint256 tokenId, \n419          uint256 eloFactor, \n420          uint256 mergingPortion,\n421          address fighterOwner\n422      ) \n423          private \n424:     {\n\n505:     function _updateRecord(uint256 tokenId, uint8 battleResult) private {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L416-L424",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L505-L505"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n142:     function _sweepLostStake() private returns(bool) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L142-L142"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n117:     function _replenishVoltage(address owner) private {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L117-L117"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Use scratch space when building emitted events with two data arguments",
      "description": "Using the [scratch space](https://gist.github.com/IllIllI000/87c4f03139fa03780fa548b8e4b02b5b) for more than one, but at most two words worth of data (non-indexed arguments) will save gas over needing Solidity's abi memory expansion used for emitting normally.",
      "gasSavings": 150,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n165:             emit Claimed(msg.sender, claimIndex);\n\n199:         emit PointsAdded(tokenId, points);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L165-L165",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L199-L199"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n144:         emit TokensClaimed(msg.sender, amount);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L144-L144"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n263:             emit Staked(msg.sender, amount);\n\n288:             emit Unstaked(msg.sender, amount);\n\n309:             emit Claimed(msg.sender, claimableNRN);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L263-L263",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L288-L288",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L309-L309"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n105:             emit ReclaimedStake(fighterId, nrnToReclaim);\n\n126:         emit IncreasedStakeAtRisk(fighterId, nrnToPlaceAtRisk);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L105-L105",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L126-L126"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n98:          emit VoltageRemaining(msg.sender, ownerVoltage[msg.sender]);\n\n111:         emit VoltageRemaining(spender, ownerVoltage[spender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L98-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L111-L111"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use local variables for emitting packed storage variables",
      "description": "Saves **14 gas** due to not having to clear the other bits of the [slot](https://gist.github.com/IllIllI000/f9cf10ee73bfd02d736beeab348c7441).",
      "gasSavings": 28,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit ownerVoltage\n98:          emit VoltageRemaining(msg.sender, ownerVoltage[msg.sender]);\n\n/// @audit ownerVoltage\n111:         emit VoltageRemaining(spender, ownerVoltage[spender]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L98-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L111-L111"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Counting down when iterating, saves gas",
      "description": "Counting down saves **6 [gas](https://gist.github.com/IllIllI000/764476152f228f8a25a41f1ca14003f5)** _per loop_, since checks for zero are more efficient than checks against any other value",
      "gasSavings": 204,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n48:          for (uint8 i = 0; i < attributesLength; i++) {\n\n73:          for (uint8 i = 0; i < attributesLength; i++) {\n\n99:              for (uint8 i = 0; i < attributesLength; i++) {\n\n136:         for (uint8 i = 0; i < attributesLength; i++) {\n\n148:         for (uint8 i = 0; i < attributesLength; i++) {\n\n178:         for (uint8 i = 0; i < attrProbabilitiesLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L48-L48",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L73-L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L99-L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L136-L136",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L178-L178"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n211:         for (uint16 i = 0; i < totalToMint; i++) {\n\n249:         for (uint16 i = 0; i < mintpassIdsToBurn.length; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L211-L211",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249-L249"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n124:         for (uint256 i = 0; i < winnersLength; i++) {\n\n149:         for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n152:             for (uint32 j = 0; j < winnersLength; j++) {\n\n176:         for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n178:             for (uint32 j = 0; j < winnersLength; j++) {\n\n207:         for (uint256 i = 0; i < maxId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L124-L124",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L149-L149",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L152-L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L176-L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L178-L178",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L207-L207"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n131:         for (uint32 i = 0; i < recipientsLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L131-L131"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n299:         for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n390:         for (uint32 i = lowerBound; i < roundId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L299-L299",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L390-L390"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`x += y` costs more gas than `x = x + y` for basic-typed state variables",
      "description": "Using the addition operator instead of plus-equals saves **[10 gas](https://gist.github.com/IllIllI000/cbbfb267425b898e5be734d4008d4fe8)** because of extra `PUSH`es and `POP`s associated with the manipulation of the state variable when using `+=` for basic-typed state variables",
      "gasSavings": 90,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n294:         totalNumTrained += 1;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L294-L294"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n234:         _itemCount += 1;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L234-L234"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n126:             totalPoints -= fighterPoints[winners[i]];\n\n131:         roundId += 1;\n\n198:         totalPoints += points;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L126-L126",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L131-L131",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L198-L198"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n236:         roundId += 1;\n\n257:             globalStakedAmount += amount;\n\n276:         globalStakedAmount -= amount;\n\n348:         totalBattles += 1;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L236-L236",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L257-L257",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L276-L276",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L348-L348"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Don't compare boolean expressions to boolean literals",
      "description": "`if (<x> == true)` => `if (<x>)`, `if (<x> == false)` => `if (!<x>)`",
      "gasSavings": 36,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n152:              allGameItemAttributes[tokenId].finiteSupply == false || \n\n154:                  allGameItemAttributes[tokenId].finiteSupply == true && \n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L154"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n248:          require(hasUnstaked[tokenId][roundId] == false, \"Cannot add stake after unstaking this round\");\n\n433:          if (_calculatedStakingFactor[tokenId][roundId] == false) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L248",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L433"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Emitting constants wastes gas",
      "description": "Every event parameter costs `Glogdata` (**8 gas**) per byte. You can avoid this extra cost, in cases where you're emitting a constant, by creating a second version of the event, which doesn't have the parameter (and have users look to the contract's variables for its value instead), and using the new event in the cases shown below.",
      "gasSavings": 16,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n470:                 emit PointsChanged(tokenId, points, true);\n\n489:                     emit PointsChanged(tokenId, points, false);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L470-L470",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L489-L489"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`++i` costs less gas than `i++`, especially when it's used in `for`-loops (`--i`/`i--` too)",
      "description": "Saves **5 gas per loop**",
      "gasSavings": 85,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n48:           for (uint8 i = 0; i < attributesLength; i++) {\n\n73:           for (uint8 i = 0; i < attributesLength; i++) {\n\n99:               for (uint8 i = 0; i < attributesLength; i++) {\n\n136:          for (uint8 i = 0; i < attributesLength; i++) {\n\n148:          for (uint8 i = 0; i < attributesLength; i++) {\n\n178:          for (uint8 i = 0; i < attrProbabilitiesLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L48",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L136",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L178"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n211:          for (uint16 i = 0; i < totalToMint; i++) {\n\n249:          for (uint16 i = 0; i < mintpassIdsToBurn.length; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L211",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n124:          for (uint256 i = 0; i < winnersLength; i++) {\n\n149:          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n152:              for (uint32 j = 0; j < winnersLength; j++) {\n\n176:          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n178:              for (uint32 j = 0; j < winnersLength; j++) {\n\n207:          for (uint256 i = 0; i < maxId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L124",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L149",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L178",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L207"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n131:          for (uint32 i = 0; i < recipientsLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L131"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n299:          for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n390:          for (uint32 i = lowerBound; i < roundId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L299",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L390"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`>=` costs less gas than `>`",
      "description": "The compiler uses opcodes `GT` and `ISZERO` for solidity code that uses `>`, but only requires `LT` for `>=`, [which saves **3 gas**](https://gist.github.com/IllIllI000/3dc79d25acccfa16dee4e83ffdc6ffde). If `<` is being used, the condition can be inverted. In cases where a for-loop is being used, one can count down rather than up, in order to use the optimal operator",
      "gasSavings": 123,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n48:          for (uint8 i = 0; i < attributesLength; i++) {\n\n73:          for (uint8 i = 0; i < attributesLength; i++) {\n\n99:              for (uint8 i = 0; i < attributesLength; i++) {\n\n102:                   i == 1 && iconsType > 0 || // Custom icons eyes (red diamond)\n\n136:         for (uint8 i = 0; i < attributesLength; i++) {\n\n148:         for (uint8 i = 0; i < attributesLength; i++) {\n\n178:         for (uint8 i = 0; i < attrProbabilitiesLength; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L48-L48",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L73-L73",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L99-L99",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L102-L102",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L136-L136",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L178-L178"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n211:         for (uint16 i = 0; i < totalToMint; i++) {\n\n217:                 i < numToMint[0] ? 0 : 1,\n\n249:         for (uint16 i = 0; i < mintpassIdsToBurn.length; i++) {\n\n372:         require(numRerolls[tokenId] < maxRerollsAllowed[fighterType]);\n\n495:         require(balanceOf(to) < MAX_FIGHTERS_ALLOWED);\n\n542:           balanceOf(to) < MAX_FIGHTERS_ALLOWED &&\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L211-L211",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L217-L217",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L249-L249",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L372-L372",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L495-L495",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L542-L542"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n148:         require(tokenId < _itemCount);\n\n258:         if (bytes(customURI).length > 0) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L148-L148",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L258-L258"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n124:         for (uint256 i = 0; i < winnersLength; i++) {\n\n149:         for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n152:             for (uint32 j = 0; j < winnersLength; j++) {\n\n164:         if (claimIndex > 0) {\n\n176:         for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n178:             for (uint32 j = 0; j < winnersLength; j++) {\n\n207:         for (uint256 i = 0; i < maxId; i++) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L124-L124",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L149-L149",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L152-L152",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L164-L164",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L176-L176",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L178-L178",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L207-L207"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n131:         for (uint32 i = 0; i < recipientsLength; i++) {\n\n156:         require(totalSupply() + amount < MAX_SUPPLY, \"Trying to mint more than the max supply\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L131-L131",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L156-L156"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n235:         require(totalAccumulatedPoints[roundId] > 0);\n\n245:         require(amount > 0, \"Amount cannot be 0\");\n\n272:         if (amount > amountStaked[tokenId]) {\n\n295:         require(numRoundsClaimed[msg.sender] < roundId, \"Already claimed NRNs for this period\");\n\n299:         for (uint32 currentRound = lowerBound; currentRound < roundId; currentRound++) {\n\n306:         if (claimableNRN > 0) {\n\n342:         if (amountStaked[tokenId] + stakeAtRisk > 0) {\n\n390:         for (uint32 i = lowerBound; i < roundId; i++) {\n\n454:             if (curStakeAtRisk > stakeAtRisk) {\n\n460:             if (curStakeAtRisk > 0) {\n\n469:             if (points > 0) {\n\n476:             if (curStakeAtRisk > amountStaked[tokenId]) {\n\n479:             if (accumulatedPointsPerFighter[tokenId][roundId] > 0) {\n\n482:                 if (points > accumulatedPointsPerFighter[tokenId][roundId]) {\n\n488:                 if (points > 0) {\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L235-L235",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L245-L245",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L272-L272",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L295-L295",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L299-L299",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L306-L306",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L342-L342",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L390-L390",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L454-L454",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L460-L460",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L469-L469",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L476-L476",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L479-L479",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L482-L482",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L488-L488"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n94:          require(ownerVoltage[msg.sender] < 100);\n\n95:          require(_gameItemsContractInstance.balanceOf(msg.sender, 0) > 0);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L95-L95"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`require()`/`revert()` strings longer than 32 bytes cost extra gas",
      "description": "Each extra memory word of bytes past the original 32 [incurs an MSTORE](https://gist.github.com/hrkrshnn/ee8fabd532058307229d65dcd5836ddc#consider-having-short-revert-strings) which costs **3 gas**",
      "gasSavings": 39,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n133:          require(probabilities.length == 6, \"Invalid number of attribute arrays\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L133"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n196:          require(msg.sender == _rankedBattleAddress, \"Not Ranked Battle contract address\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L196"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n139           require(\n140               allowance(treasuryAddress, msg.sender) >= amount, \n141               \"ERC20: claim amount exceeds allowance\"\n142:          );\n\n156:          require(totalSupply() + amount < MAX_SUPPLY, \"Trying to mint more than the max supply\");\n\n157:          require(hasRole(MINTER_ROLE, msg.sender), \"ERC20: must have minter role to mint\");\n\n172           require(\n173               hasRole(SPENDER_ROLE, msg.sender), \n174               \"ERC20: must have spender role to approve spending\"\n175:          );\n\n185           require(\n186               hasRole(STAKER_ROLE, msg.sender), \n187               \"ERC20: must have staker role to approve staking\"\n188:          );\n\n197           require(\n198               allowance(account, msg.sender) >= amount, \n199               \"ERC20: burn amount exceeds allowance\"\n200:          );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L139-L142",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L197-L200",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L172-L175",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L185-L188"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n248:          require(hasUnstaked[tokenId][roundId] == false, \"Cannot add stake after unstaking this round\");\n\n295:          require(numRoundsClaimed[msg.sender] < roundId, \"Already claimed NRNs for this period\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L295",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L248"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n94:           require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n95            require(\n96                stakeAtRisk[roundId][fighterId] >= nrnToReclaim, \n97                \"Fighter does not have enough stake at risk\"\n98:           );\n\n122:          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L95-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L122",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L94"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Enable IR-based code generation",
      "description": "By using `--via-ir` or `{\"viaIR\": true}`, the compiler is able to use more advanced [multi-function optimizations](https://docs.soliditylang.org/en/v0.8.17/ir-breaking-changes.html#solidity-ir-based-codegen-changes), for extra gas savings.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: Various Files\n```\n",
          "loc": []
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiple accesses of a `memory`/`calldata` array should use a local variable cache",
      "description": "The instances below point to the second+ access of a value inside a `memory`/`calldata` array, within a function. Caching avoids recalculating the array offsets into `memory`/`calldata`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit numToMint...[]\n/// @audit numToMint...[]\n207:         uint16 totalToMint = uint16(numToMint[0] + numToMint[1]);\n\n/// @audit numToMint...[]\n209:         nftsClaimed[msg.sender][0] += numToMint[0];\n\n/// @audit numToMint...[]\n210:         nftsClaimed[msg.sender][1] += numToMint[1];\n\n/// @audit numToMint...[]\n217:                 i < numToMint[0] ? 0 : 1,\n\n/// @audit mintpassIdsToBurn...[]\n251:             _mintpassInstance.burn(mintpassIdsToBurn[i]);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L217-L217",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L251-L251",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L210-L210",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L207-L207",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L207-L207",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L209-L209"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit winners...[]\n126:             totalPoints -= fighterPoints[winners[i]];\n\n/// @audit winners...[]\n127:             fighterPoints[winners[i]] = 0;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L126-L126",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L127-L127"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Optimize names to save gas",
      "description": "`public`/`external` function names and `public` member variable names can be optimized to save gas. See [this](https://gist.github.com/IllIllI000/a5d8b486a8259f9f77891a919febd1a9) link for an example of how it works. Below are the interfaces/abstract contracts that can be optimized so that the most frequently-called functions use the least amount of gas possible during method lookup. Method IDs that have two leading zero bytes can save **128 gas** each during deployment, and renaming functions to have lower method IDs will save **22 gas** per call, [per sorted position shifted](https://medium.com/joyso/solidity-how-does-function-name-affect-gas-consumption-in-smart-contract-47d270d8ac92)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n/// @audit  dnaToIndex(), transferOwnership(), addAttributeDivisor(), createPhysicalAttributes(), addAttributeProbabilities(), deleteAttributeProbabilities(), getAttributeProbabilities()\n10   contract AiArenaHelper {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                               STATE VARIABLES\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice List of attributes\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n/// @audit  setTokenURI(), claimFighters(), redeemMintPass(), updateFighterStaking(), updateModel(), doesTokenExist(), mintFromMergingPool(), reRoll(), contractURI(), getAllFighterInfo(), transferOwnership(), incrementGeneration(), addStaker(), instantiateAIArenaHelperContract(), instantiateMintpassContract(), instantiateNeuronContract(), setMergingPoolAddress()\n16   contract FighterFarm is ERC721, ERC721Enumerable {\n17   \n18       /*//////////////////////////////////////////////////////////////\n19                                   EVENTS\n20       //////////////////////////////////////////////////////////////*/\n21   \n22:      /// @notice Event emitted when a fighter is locked and thus cannot be traded.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L16-L22"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n/// @audit  transferOwnership(), adjustAdminAccess(), adjustTransferability(), instantiateNeuronContract(), mint(), setAllowedBurningAddresses(), setTokenURI(), createGameItem(), burn(), contractURI(), getAllowanceRemaining(), remainingSupply(), uniqueTokensOutstanding()\n10   contract GameItems is ERC1155 {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16       /// @notice Event emitted when a game item is bought.\n17       /// @param buyer The address of the buyer.\n18       /// @param tokenId The id of the game item.\n19:      /// @param quantity The quantity of the game item.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L10-L19"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n/// @audit  transferOwnership(), adjustAdminAccess(), updateWinnersPerPeriod(), pickWinner(), claimRewards(), getUnclaimedRewards(), addPoints(), getFighterPoints()\n9    contract MergingPool {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when merging pool points are added.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L9-L15"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n/// @audit  approveSpender(), approveStaker(), transferOwnership(), burnFrom(), addMinter(), addStaker(), addSpender(), adjustAdminAccess(), setupAirdrop(), claim(), mint(), burn()\n11   contract Neuron is ERC20, AccessControl {\n12   \n13       /*//////////////////////////////////////////////////////////////\n14                                   EVENTS\n15       //////////////////////////////////////////////////////////////*/\n16   \n17:      /// @notice Event emitted when tokens are claimed.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L11-L17"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit  transferOwnership(), adjustAdminAccess(), setGameServerAddress(), setStakeAtRiskAddress(), instantiateNeuronContract(), instantiateMergingPoolContract(), setRankedNrnDistribution(), setBpsLostPerLoss(), setNewRound(), stakeNRN(), unstakeNRN(), claimNRN(), updateBattleRecord(), getBattleRecord(), getCurrentStakingData(), getNrnDistribution(), getUnclaimedNRN()\n16   contract RankedBattle {\n17   \n18:      /// @dev Extend functionality of the FixedPointMathLib library to the uint data type.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L16-L18"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n/// @audit  setNewRound(), reclaimNRN(), updateAtRiskRecords(), getStakeAtRisk()\n10   contract StakeAtRisk {\n11   \n12       /*//////////////////////////////////////////////////////////////\n13                                   EVENTS\n14       //////////////////////////////////////////////////////////////*/\n15   \n16:      /// @notice Event emitted when NRNs are reclaimed from this contract (after a win in ranked).\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L10-L16"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n/// @audit  transferOwnership(), adjustAdminAccess(), adjustAllowedVoltageSpenders(), useVoltageBattery(), spendVoltage()\n9    contract VoltageManager {\n10   \n11       /*//////////////////////////////////////////////////////////////\n12                                   EVENTS\n13       //////////////////////////////////////////////////////////////*/\n14   \n15:      /// @notice Event emitted when voltage amount is altered.\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L9-L15"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Stack variable is only used once",
      "description": "If the variable is only accessed once, it's cheaper to use the assigned value directly that one time, and save the **3 gas** the extra stack assignment would spend",
      "gasSavings": 48,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n199          bytes32 msgHash = bytes32(keccak256(abi.encode(\n200              msg.sender, \n201              numToMint[0], \n202              numToMint[1],\n203              nftsClaimed[msg.sender][0],\n204              nftsClaimed[msg.sender][1]\n205:         )));\n\n376:         bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, rerollCost);\n\n379:             uint256 dna = uint256(keccak256(abi.encode(msg.sender, tokenId, numRerolls[tokenId])));\n\n380:             (uint256 element, uint256 weight, uint256 newDna) = _createFighterBase(dna, fighterType);\n\n470:         uint256 element = dna % numElements[generation[fighterType]];\n\n471:         uint256 weight = dna % 31 + 65;\n\n472:         uint256 newDna = fighterType == 0 ? dna : uint256(fighterType);\n\n510          FighterOps.FighterPhysicalAttributes memory attrs = _aiArenaHelperInstance.createPhysicalAttributes(\n511              newDna,\n512              generation[fighterType],\n513              iconsType,\n514              dendroidBool\n515:         );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L470-L470",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L471-L471",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L472-L472",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L510-L515",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L376-L376",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L199-L205",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L380-L380",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L379-L379"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n164:         bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, price);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L164-L164"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n201:         uint256 decreasedAllowance = allowance(account, msg.sender) - amount;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L201-L201"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n251:         bool success = _neuronInstance.transferFrom(msg.sender, address(this), amount);\n\n283:         bool success = _neuronInstance.transfer(msg.sender, amount);\n\n341:         uint256 stakeAtRisk = _stakeAtRiskInstance.getStakeAtRisk(tokenId);\n\n493:                 bool success = _neuronInstance.transfer(_stakeAtRiskAddress, curStakeAtRisk);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L283-L283",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L251-L251",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L341-L341",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L493-L493"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n80:          bool success = _sweepLostStake();\n\n100:         bool success = _neuronInstance.transfer(_rankedBattleAddress, nrnToReclaim);\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L80-L80",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L100-L100"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Splitting `require()` statements that use `&&` saves gas",
      "description": "See [this issue](https://github.com/code-423n4/2022-01-xdefi-findings/issues/128) which describes the fact that there is a larger deployment gas cost, but with enough runtime calls, the change ends up being cheaper by **3 gas**",
      "gasSavings": 6,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n208:         require(modelHashes.length == totalToMint && modelTypes.length == totalToMint);\n\n243          require(\n244              mintpassIdsToBurn.length == mintPassDnas.length && \n245              mintPassDnas.length == fighterTypes.length && \n246              fighterTypes.length == modelHashes.length &&\n247              modelHashes.length == modelTypes.length\n248:         );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L243-L248",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L208-L208"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Update OpenZeppelin dependency to save gas",
      "description": "Every release contains new gas optimizations. Use the latest version to take advantage of this",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n9:   import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L9-L9"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n5:   import \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L5-L5"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n4:   import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n5:   import \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L4-L4",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L5-L5"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use custom errors rather than `revert()`/`require()` strings to save gas",
      "description": "Custom errors are available from solidity version 0.8.4. Custom errors save [**~50 gas**](https://gist.github.com/IllIllI000/ad1bd0d29a0101b25e57c293b4b0c746) each time they're hit by [avoiding having to allocate and store the revert string](https://blog.soliditylang.org/2021/04/21/custom-errors/#errors-in-depth). Not defining the strings also save deployment gas",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n133:         require(probabilities.length == 6, \"Invalid number of attribute arrays\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L133-L133"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n373:         require(_neuronInstance.balanceOf(msg.sender) >= rerollCost, \"Not enough NRN for reroll\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L373-L373"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n150:         require(_neuronInstance.balanceOf(msg.sender) >= price, \"Not enough NRN for purchase\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L150-L150"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n120:         require(winners.length == winnersPerPeriod, \"Incorrect number of winners\");\n\n121:         require(!isSelectionComplete[roundId], \"Winners are already selected\");\n\n196:         require(msg.sender == _rankedBattleAddress, \"Not Ranked Battle contract address\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L120-L120",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L121-L121",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L196-L196"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n139          require(\n140              allowance(treasuryAddress, msg.sender) >= amount, \n141              \"ERC20: claim amount exceeds allowance\"\n142:         );\n\n156:         require(totalSupply() + amount < MAX_SUPPLY, \"Trying to mint more than the max supply\");\n\n157:         require(hasRole(MINTER_ROLE, msg.sender), \"ERC20: must have minter role to mint\");\n\n172          require(\n173              hasRole(SPENDER_ROLE, msg.sender), \n174              \"ERC20: must have spender role to approve spending\"\n175:         );\n\n185          require(\n186              hasRole(STAKER_ROLE, msg.sender), \n187              \"ERC20: must have staker role to approve staking\"\n188:         );\n\n197          require(\n198              allowance(account, msg.sender) >= amount, \n199              \"ERC20: burn amount exceeds allowance\"\n200:         );\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L185-L188",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L197-L200",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L139-L142",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L156-L156",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L157-L157",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L172-L175"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n245:         require(amount > 0, \"Amount cannot be 0\");\n\n246:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n247:         require(_neuronInstance.balanceOf(msg.sender) >= amount, \"Stake amount exceeds balance\");\n\n248:         require(hasUnstaked[tokenId][roundId] == false, \"Cannot add stake after unstaking this round\");\n\n271:         require(_fighterFarmInstance.ownerOf(tokenId) == msg.sender, \"Caller does not own fighter\");\n\n295:         require(numRoundsClaimed[msg.sender] < roundId, \"Already claimed NRNs for this period\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L271-L271",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L295-L295",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L248-L248",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L247-L247",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L246-L246",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L245-L245"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n79:          require(msg.sender == _rankedBattleAddress, \"Not authorized to set new round\");\n\n94:          require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n95           require(\n96               stakeAtRisk[roundId][fighterId] >= nrnToReclaim, \n97               \"Fighter does not have enough stake at risk\"\n98:          );\n\n122:         require(msg.sender == _rankedBattleAddress, \"Call must be from RankedBattle contract\");\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L79-L79",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L94-L94",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L95-L98",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L122-L122"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use short-circuit evaluation to avoid external calls",
      "description": "By evaluating expressions involving constants, literals, and local variables before ones involving external calls, you can avoid unnecessarily executing the calls in the unhappy path.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n/// @audit move the expression involving `ownerVoltageReplenishTime()` to the right\n335              !initiatorBool ||\n336              _voltageManagerInstance.ownerVoltageReplenishTime(fighterOwner) <= block.timestamp || \n337:             _voltageManagerInstance.ownerVoltage(fighterOwner) >= VOLTAGE_COST\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L335-L337"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `private` rather than `public`, saves gas",
      "description": "For constants, the values can be read from the verified contract source code, or if there are multiple values there can be a single getter function that [returns a tuple](https://github.com/code-423n4/2022-08-frax/blob/90f55a9ce4e25bceed3a74290b854341d8de6afa/src/contracts/FraxlendPair.sol#L156-L178) of the values of all currently-public constants. Saves **3406-3606 gas** in deployment gas due to the compiler not having to create non-payable getter functions for deployment calldata, not having to store the bytes of the value outside of where it's used, and not adding another entry to the method ID table",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/AiArenaHelper.sol\n\n17:      string[] public attributes = [\"head\", \"eyes\", \"mouth\", \"body\", \"hands\", \"feet\"];\n\n20:      uint8[] public defaultAttributeDivisor = [2, 3, 5, 7, 11, 13];\n\n30:      mapping(uint256 => mapping(string => uint8[])) public attributeProbabilities;\n\n33:      mapping(string => uint8) public attributeToDnaDivisor;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L20-L20",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L30-L30",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L33-L33",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/AiArenaHelper.sol#L17-L17"
          ]
        },
        {
          "content": "```solidity\nFile: src/FighterFarm.sol\n\n33:      uint8 public constant MAX_FIGHTERS_ALLOWED = 10;\n\n36:      uint8[2] public maxRerollsAllowed = [3, 3];\n\n39:      uint256 public rerollCost = 1000 * 10**18;    \n\n42:      uint8[2] public generation = [0, 0];\n\n45:      uint32 public totalNumTrained;\n\n48:      address public treasuryAddress;\n\n69:      FighterOps.Fighter[] public fighters;\n\n76:      mapping(uint256 => bool) public fighterStaked;\n\n79:      mapping(uint256 => uint8) public numRerolls;\n\n82:      mapping(address => bool) public hasStakerRole;\n\n85:      mapping(uint8 => uint8) public numElements;\n\n88:      mapping(address => mapping(uint8 => uint8)) public nftsClaimed;\n\n91:      mapping(uint256 => uint32) public numTrained;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L79-L79",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L82-L82",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L85-L85",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L88-L88",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L91-L91",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L48-L48",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L33-L33",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L69-L69",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L76-L76",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L36-L36",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L39-L39",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L42-L42",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/FighterFarm.sol#L45-L45"
          ]
        },
        {
          "content": "```solidity\nFile: src/GameItems.sol\n\n55:      GameItemAttributes[] public allGameItemAttributes;\n\n58:      address public treasuryAddress;\n\n74:      mapping(address => mapping(uint256 => uint256)) public allowanceRemaining;\n\n77:      mapping(address => mapping(uint256 => uint256)) public dailyAllowanceReplenishTime;\n\n80:      mapping(address => bool) public allowedBurningAddresses;\n\n83:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L80-L80",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L83-L83",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L55-L55",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L58-L58",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L74-L74",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/GameItems.sol#L77-L77"
          ]
        },
        {
          "content": "```solidity\nFile: src/MergingPool.sol\n\n26:      uint256 public winnersPerPeriod = 2;\n\n29:      uint256 public roundId = 0;\n\n32:      uint256 public totalPoints = 0;    \n\n48:      mapping(address => uint32) public numRoundsClaimed;\n\n51:      mapping(uint256 => uint256) public fighterPoints;\n\n54:      mapping(uint256 => address[]) public winnerAddresses;    \n\n57:      mapping(uint256 => bool) public isSelectionComplete;\n\n60:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L51-L51",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L54-L54",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L57-L57",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L60-L60",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L26-L26",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L29-L29",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L32-L32",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/MergingPool.sol#L48-L48"
          ]
        },
        {
          "content": "```solidity\nFile: src/Neuron.sol\n\n28:      bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n31:      bytes32 public constant SPENDER_ROLE = keccak256(\"SPENDER_ROLE\");\n\n34:      bytes32 public constant STAKER_ROLE = keccak256(\"STAKER_ROLE\");\n\n37:      uint256 public constant INITIAL_TREASURY_MINT = 10**18 * 10**8 * 2;\n\n40:      uint256 public constant INITIAL_CONTRIBUTOR_MINT = 10**18 * 10**8 * 5;\n\n43:      uint256 public constant MAX_SUPPLY = 10**18 * 10**9;\n\n46:      address public treasuryAddress;\n\n56:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L43-L43",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L28-L28",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L31-L31",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L34-L34",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L37-L37",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L40-L40",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L46-L46",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/Neuron.sol#L56-L56"
          ]
        },
        {
          "content": "```solidity\nFile: src/RankedBattle.sol\n\n53:      uint8 public constant VOLTAGE_COST = 10;\n\n56:      uint256 public totalBattles = 0;\n\n59:      uint256 public globalStakedAmount = 0;\n\n62:      uint256 public roundId = 0;\n\n66:      uint256 public bpsLostPerLoss = 10;\n\n101:     mapping(address => bool) public isAdmin;\n\n104:     mapping(uint256 => BattleRecord) public fighterBattleRecord;\n\n107:     mapping(address => uint256) public amountClaimed;\n\n110:     mapping(address => uint32) public numRoundsClaimed;\n\n113:     mapping(address => mapping(uint256 => uint256)) public accumulatedPointsPerAddress;\n\n116:     mapping(uint256 => mapping(uint256 => uint256)) public accumulatedPointsPerFighter;\n\n119:     mapping(uint256 => uint256) public totalAccumulatedPoints;\n\n122:     mapping(uint256 => uint256) public rankedNrnDistribution;\n\n125:     mapping(uint256 => mapping(uint256 => bool)) public hasUnstaked;\n\n128:     mapping(uint256 => uint256) public amountStaked;\n\n131:     mapping(uint256 => uint256) public stakingFactor;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L66-L66",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L101-L101",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L104-L104",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L107-L107",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L110-L110",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L113-L113",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L116-L116",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L119-L119",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L122-L122",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L125-L125",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L128-L128",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L131-L131",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L62-L62",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L59-L59",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L56-L56",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/RankedBattle.sol#L53-L53"
          ]
        },
        {
          "content": "```solidity\nFile: src/StakeAtRisk.sol\n\n27:      uint256 public roundId = 0;    \n\n30:      address public treasuryAddress;\n\n43:      mapping(uint256 => uint256) public totalStakeAtRisk;\n\n46:      mapping(uint256 => mapping(uint256 => uint256)) public stakeAtRisk;\n\n49:      mapping(address => uint256) public amountLost;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L49-L49",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L27-L27",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L30-L30",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L43-L43",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/StakeAtRisk.sol#L46-L46"
          ]
        },
        {
          "content": "```solidity\nFile: src/VoltageManager.sol\n\n33:      mapping(address => bool) public allowedVoltageSpenders;\n\n36:      mapping(address => uint32) public ownerVoltageReplenishTime;\n\n39:      mapping(address => uint8) public ownerVoltage;\n\n42:      mapping(address => bool) public isAdmin;\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L33-L33",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L36-L36",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L39-L39",
            "https://github.com/code-423n4/2024-02-ai-arena/blob/5b2ab9f9fadd0b91268ff6f22b4ae0fd5b79ec09/src/VoltageManager.sol#L42-L42"
          ]
        }
      ]
    }
  ],
  "createdAt": "2024-02-09T20:40:40.267Z",
  "updatedAt": "2024-02-09T20:40:41.850Z"
}